"use strict";(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[8417],{"./src/components/molecules/DataGrid/DataGrid.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Regular:()=>Regular,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var ___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/molecules/DataGrid/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:___WEBPACK_IMPORTED_MODULE_1__.z,args:{}},Regular={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:500,width:500},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.z,{...args,firstRowAsHeaders:!0,styles:[{},{bgcolor:"#1F4E7A",color:"#FFFFFF",font:{bold:!0}},{font:{bold:!0}},{bgcolor:"#B4EFCF"},{bgcolor:"#F7BCBC"},{color:"#CBCBCB"},{align:"right"}],freeze:"C4",autofilter:{ref:"A1:F7",filters:[]},rows:{...new Array(100).fill(1).map(((a,i)=>({cells:{0:{text:i},1:{text:"Tesla",style:Math.floor(6*Math.random())},2:{text:"Volvo"},3:{text:"Toyota"},4:{text:"Ford"},5:{text:i%3},6:{text:Math.random()},7:{text:Date.now()}}}))),0:{cells:{0:{text:"head"},1:{text:"Tesla"},2:{text:"Volvo"},3:{text:"Toyota"},4:{text:"Ford"},5:{text:"A"},6:{text:"B"},7:{text:"C"}}}}})})},__namedExportsOrder=["Regular"];Regular.parameters={...Regular.parameters,docs:{...Regular.parameters?.docs,source:{originalSource:"{\n  render: args => <div style={{\n    height: 500,\n    width: 500\n  }}>\n      <DataGrid {...args} firstRowAsHeaders styles={[{}, {\n      bgcolor: '#1F4E7A',\n      color: '#FFFFFF',\n      font: {\n        bold: true\n      }\n    },\n    // 0\n    {\n      font: {\n        bold: true\n      }\n    },\n    // 1\n    {\n      bgcolor: '#B4EFCF'\n    },\n    // 2\n    {\n      bgcolor: '#F7BCBC'\n    },\n    // 3\n    {\n      color: '#CBCBCB'\n    },\n    // 4\n    {\n      align: 'right'\n    } // 5\n    ]} freeze=\"C4\" autofilter={{\n      ref: 'A1:F7',\n      filters: []\n    }} rows={{\n      ...new Array(100).fill(1).map((a, i) => ({\n        cells: {\n          0: {\n            text: i\n          },\n          1: {\n            text: 'Tesla',\n            style: Math.floor(Math.random() * 6)\n          },\n          2: {\n            text: 'Volvo'\n          },\n          3: {\n            text: 'Toyota'\n          },\n          4: {\n            text: 'Ford'\n          },\n          5: {\n            text: i % 3\n          },\n          6: {\n            text: Math.random()\n          },\n          7: {\n            text: Date.now()\n          }\n        }\n      })),\n      0: {\n        cells: {\n          0: {\n            text: 'head'\n          },\n          1: {\n            text: 'Tesla'\n          },\n          2: {\n            text: 'Volvo'\n          },\n          3: {\n            text: 'Toyota'\n          },\n          4: {\n            text: 'Ford'\n          },\n          5: {\n            text: 'A'\n          },\n          6: {\n            text: 'B'\n          },\n          7: {\n            text: 'C'\n          }\n        }\n      }\n      // [ '2019', 10, 11, 12, 13, 14, 15, 16 ],\n      // [ '2020', 20, 11, 14, 13, 14, 15, 16 ],\n      // [ '2021', 30, 15, 12, 13, 14, 15, 16 ],\n      // [ '2021', 30, 15, 12, 13, 14, 15, 16 ],\n      // [ '2021', 30, 15, 12, 13, 14, 15, 16 ],\n      // [ '2021', 30, 15, 12, 13, 14, 15, 16 ],\n      // [ '2021', 30, 15, 12, 13, 14, 15, 16 ],\n      // [ '2021', 30, 15, 12, 13, 14, 15, 16 ],\n      // [ '2021', 30, 15, 12, 13, 14, 15, 16 ],\n      // [ '2021', 30, 15, 12, 13, 14, 15, 16 ],\n      // ]\n    }} />\n    </div>\n}",...Regular.parameters?.docs?.source}}}}}]);