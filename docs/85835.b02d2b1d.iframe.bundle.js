(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[85835],{"./node_modules/diff2html/lib-esm/diff2html.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";var LineType;__webpack_require__.d(__webpack_exports__,{qy:()=>html}),function(LineType){LineType.INSERT="insert",LineType.DELETE="delete",LineType.CONTEXT="context"}(LineType||(LineType={}));var ColorSchemeType;!function(ColorSchemeType){ColorSchemeType.AUTO="auto",ColorSchemeType.DARK="dark",ColorSchemeType.LIGHT="light"}(ColorSchemeType||(ColorSchemeType={}));const regex=RegExp("["+["-","[","]","/","{","}","(",")","*","+","?",".","\\","^","$","|"].join("\\")+"]","g");function unifyPath(path){return path?path.replace(/\\/g,"/"):path}function max(arr){const length=arr.length;let max=-1/0;for(let i=0;i<length;i++)max=Math.max(max,arr[i]);return max}function getExtension(filename,language){const filenameParts=filename.split(".");return filenameParts.length>1?filenameParts[filenameParts.length-1]:language}function startsWithAny(str,prefixes){return prefixes.reduce((startsWith,prefix)=>startsWith||str.startsWith(prefix),!1)}const baseDiffFilenamePrefixes=["a/","b/","i/","w/","c/","o/"];function getFilename(line,linePrefix,extraPrefix){const prefixes=void 0!==extraPrefix?[...baseDiffFilenamePrefixes,extraPrefix]:baseDiffFilenamePrefixes,FilenameRegExp=linePrefix?new RegExp(`^${function escapeForRegExp(str){return str.replace(regex,"\\$&")}(linePrefix)} "?(.+?)"?$`):new RegExp('^"?(.+?)"?$'),[,filename=""]=FilenameRegExp.exec(line)||[],matchingPrefix=prefixes.find(p=>0===filename.indexOf(p));return(matchingPrefix?filename.slice(matchingPrefix.length):filename).replace(/\s+\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}(?:\.\d+)? [+-]\d{4}.*$/,"")}function parse(diffInput,config={}){const files=[];let currentFile=null,currentBlock=null,oldLine=null,oldLine2=null,newLine=null,possibleOldName=null,possibleNewName=null;const oldMode=/^old mode (\d{6})/,newMode=/^new mode (\d{6})/,deletedFileMode=/^deleted file mode (\d{6})/,newFileMode=/^new file mode (\d{6})/,copyFrom=/^copy from "?(.+)"?/,copyTo=/^copy to "?(.+)"?/,renameFrom=/^rename from "?(.+)"?/,renameTo=/^rename to "?(.+)"?/,similarityIndex=/^similarity index (\d+)%/,dissimilarityIndex=/^dissimilarity index (\d+)%/,index=/^index ([\da-z]+)\.\.([\da-z]+)\s*(\d{6})?/,binaryFiles=/^Binary files (.*) and (.*) differ/,binaryDiff=/^GIT binary patch/,combinedIndex=/^index ([\da-z]+),([\da-z]+)\.\.([\da-z]+)/,combinedMode=/^mode (\d{6}),(\d{6})\.\.(\d{6})/,combinedNewFile=/^new file mode (\d{6})/,combinedDeletedFile=/^deleted file mode (\d{6}),(\d{6})/,diffLines=diffInput.replace(/\\ No newline at end of file/g,"").replace(/\r\n?/g,"\n").split("\n");function saveBlock(){null!==currentBlock&&null!==currentFile&&(currentFile.blocks.push(currentBlock),currentBlock=null)}function saveFile(){null!==currentFile&&(currentFile.oldName||null===possibleOldName||(currentFile.oldName=possibleOldName),currentFile.newName||null===possibleNewName||(currentFile.newName=possibleNewName),currentFile.newName&&(files.push(currentFile),currentFile=null)),possibleOldName=null,possibleNewName=null}function startFile(){saveBlock(),saveFile(),currentFile={blocks:[],deletedLines:0,addedLines:0}}function startBlock(line){let values;saveBlock(),null!==currentFile&&((values=/^@@ -(\d+)(?:,\d+)? \+(\d+)(?:,\d+)? @@.*/.exec(line))?(currentFile.isCombined=!1,oldLine=parseInt(values[1],10),newLine=parseInt(values[2],10)):(values=/^@@@ -(\d+)(?:,\d+)? -(\d+)(?:,\d+)? \+(\d+)(?:,\d+)? @@@.*/.exec(line))?(currentFile.isCombined=!0,oldLine=parseInt(values[1],10),oldLine2=parseInt(values[2],10),newLine=parseInt(values[3],10)):(line.startsWith("@@")&&console.error("Failed to parse lines, starting in 0!"),oldLine=0,newLine=0,currentFile.isCombined=!1)),currentBlock={lines:[],oldStartLine:oldLine,oldStartLine2:oldLine2,newStartLine:newLine,header:line}}return diffLines.forEach((line,lineIndex)=>{if(!line||line.startsWith("*"))return;let values;const prevLine=diffLines[lineIndex-1],nxtLine=diffLines[lineIndex+1],afterNxtLine=diffLines[lineIndex+2];if(line.startsWith("diff --git")||line.startsWith("diff --combined")){startFile();if((values=/^diff --git "?([a-ciow]\/.+)"? "?([a-ciow]\/.+)"?/.exec(line))&&(possibleOldName=getFilename(values[1],void 0,config.dstPrefix),possibleNewName=getFilename(values[2],void 0,config.srcPrefix)),null===currentFile)throw new Error("Where is my file !!!");return void(currentFile.isGitDiff=!0)}if(line.startsWith("Binary files")&&!(null==currentFile?void 0:currentFile.isGitDiff)){startFile();if((values=/^Binary files "?([a-ciow]\/.+)"? and "?([a-ciow]\/.+)"? differ/.exec(line))&&(possibleOldName=getFilename(values[1],void 0,config.dstPrefix),possibleNewName=getFilename(values[2],void 0,config.srcPrefix)),null===currentFile)throw new Error("Where is my file !!!");return void(currentFile.isBinary=!0)}if((!currentFile||!currentFile.isGitDiff&&currentFile&&line.startsWith("--- ")&&nxtLine.startsWith("+++ ")&&afterNxtLine.startsWith("@@"))&&startFile(),null==currentFile?void 0:currentFile.isTooBig)return;if(currentFile&&("number"==typeof config.diffMaxChanges&&currentFile.addedLines+currentFile.deletedLines>config.diffMaxChanges||"number"==typeof config.diffMaxLineLength&&line.length>config.diffMaxLineLength)){currentFile.isTooBig=!0,currentFile.addedLines=0,currentFile.deletedLines=0,currentFile.blocks=[],currentBlock=null;return void startBlock("function"==typeof config.diffTooBigMessage?config.diffTooBigMessage(files.length):"Diff too big to be displayed")}if(line.startsWith("--- ")&&nxtLine.startsWith("+++ ")||line.startsWith("+++ ")&&prevLine.startsWith("--- ")){if(currentFile&&!currentFile.oldName&&line.startsWith("--- ")&&(values=function getSrcFilename(line,srcPrefix){return getFilename(line,"---",srcPrefix)}(line,config.srcPrefix)))return currentFile.oldName=values,void(currentFile.language=getExtension(currentFile.oldName,currentFile.language));if(currentFile&&!currentFile.newName&&line.startsWith("+++ ")&&(values=function getDstFilename(line,dstPrefix){return getFilename(line,"+++",dstPrefix)}(line,config.dstPrefix)))return currentFile.newName=values,void(currentFile.language=getExtension(currentFile.newName,currentFile.language))}if(currentFile&&(line.startsWith("@@")||currentFile.isGitDiff&&currentFile.oldName&&currentFile.newName&&!currentBlock))return void startBlock(line);if(currentBlock&&(line.startsWith("+")||line.startsWith("-")||line.startsWith(" ")))return void function createLine(line){if(null===currentFile||null===currentBlock||null===oldLine||null===newLine)return;const currentLine={content:line},addedPrefixes=currentFile.isCombined?["+ "," +","++"]:["+"],deletedPrefixes=currentFile.isCombined?["- "," -","--"]:["-"];startsWithAny(line,addedPrefixes)?(currentFile.addedLines++,currentLine.type=LineType.INSERT,currentLine.oldNumber=void 0,currentLine.newNumber=newLine++):startsWithAny(line,deletedPrefixes)?(currentFile.deletedLines++,currentLine.type=LineType.DELETE,currentLine.oldNumber=oldLine++,currentLine.newNumber=void 0):(currentLine.type=LineType.CONTEXT,currentLine.oldNumber=oldLine++,currentLine.newNumber=newLine++),currentBlock.lines.push(currentLine)}(line);const doesNotExistHunkHeader=!function existHunkHeader(line,lineIdx){let idx=lineIdx;for(;idx<diffLines.length-3;){if(line.startsWith("diff"))return!1;if(diffLines[idx].startsWith("--- ")&&diffLines[idx+1].startsWith("+++ ")&&diffLines[idx+2].startsWith("@@"))return!0;idx++}return!1}(line,lineIndex);if(null===currentFile)throw new Error("Where is my file !!!");(values=oldMode.exec(line))?currentFile.oldMode=values[1]:(values=newMode.exec(line))?currentFile.newMode=values[1]:(values=deletedFileMode.exec(line))?(currentFile.deletedFileMode=values[1],currentFile.isDeleted=!0):(values=newFileMode.exec(line))?(currentFile.newFileMode=values[1],currentFile.isNew=!0):(values=copyFrom.exec(line))?(doesNotExistHunkHeader&&(currentFile.oldName=values[1]),currentFile.isCopy=!0):(values=copyTo.exec(line))?(doesNotExistHunkHeader&&(currentFile.newName=values[1]),currentFile.isCopy=!0):(values=renameFrom.exec(line))?(doesNotExistHunkHeader&&(currentFile.oldName=values[1]),currentFile.isRename=!0):(values=renameTo.exec(line))?(doesNotExistHunkHeader&&(currentFile.newName=values[1]),currentFile.isRename=!0):(values=binaryFiles.exec(line))?(currentFile.isBinary=!0,currentFile.oldName=getFilename(values[1],void 0,config.srcPrefix),currentFile.newName=getFilename(values[2],void 0,config.dstPrefix),startBlock("Binary file")):binaryDiff.test(line)?(currentFile.isBinary=!0,startBlock(line)):(values=similarityIndex.exec(line))?currentFile.unchangedPercentage=parseInt(values[1],10):(values=dissimilarityIndex.exec(line))?currentFile.changedPercentage=parseInt(values[1],10):(values=index.exec(line))?(currentFile.checksumBefore=values[1],currentFile.checksumAfter=values[2],values[3]&&(currentFile.mode=values[3])):(values=combinedIndex.exec(line))?(currentFile.checksumBefore=[values[2],values[3]],currentFile.checksumAfter=values[1]):(values=combinedMode.exec(line))?(currentFile.oldMode=[values[2],values[3]],currentFile.newMode=values[1]):(values=combinedNewFile.exec(line))?(currentFile.newFileMode=values[1],currentFile.isNew=!0):(values=combinedDeletedFile.exec(line))&&(currentFile.deletedFileMode=values[1],currentFile.isDeleted=!0)}),saveBlock(),saveFile(),files}function Diff(){}function buildValues(diff,lastComponent,newString,oldString,useLongestToken){for(var nextComponent,components=[];lastComponent;)components.push(lastComponent),nextComponent=lastComponent.previousComponent,delete lastComponent.previousComponent,lastComponent=nextComponent;components.reverse();for(var componentPos=0,componentLen=components.length,newPos=0,oldPos=0;componentPos<componentLen;componentPos++){var component=components[componentPos];if(component.removed)component.value=diff.join(oldString.slice(oldPos,oldPos+component.count)),oldPos+=component.count;else{if(!component.added&&useLongestToken){var value=newString.slice(newPos,newPos+component.count);value=value.map(function(value,i){var oldValue=oldString[oldPos+i];return oldValue.length>value.length?oldValue:value}),component.value=diff.join(value)}else component.value=diff.join(newString.slice(newPos,newPos+component.count));newPos+=component.count,component.added||(oldPos+=component.count)}}return components}Diff.prototype={diff:function diff(oldString,newString){var _options$timeout,options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},callback=options.callback;"function"==typeof options&&(callback=options,options={});var self=this;function done(value){return value=self.postProcess(value,options),callback?(setTimeout(function(){callback(value)},0),!0):value}oldString=this.castInput(oldString,options),newString=this.castInput(newString,options),oldString=this.removeEmpty(this.tokenize(oldString,options));var newLen=(newString=this.removeEmpty(this.tokenize(newString,options))).length,oldLen=oldString.length,editLength=1,maxEditLength=newLen+oldLen;null!=options.maxEditLength&&(maxEditLength=Math.min(maxEditLength,options.maxEditLength));var maxExecutionTime=null!==(_options$timeout=options.timeout)&&void 0!==_options$timeout?_options$timeout:1/0,abortAfterTimestamp=Date.now()+maxExecutionTime,bestPath=[{oldPos:-1,lastComponent:void 0}],newPos=this.extractCommon(bestPath[0],newString,oldString,0,options);if(bestPath[0].oldPos+1>=oldLen&&newPos+1>=newLen)return done(buildValues(self,bestPath[0].lastComponent,newString,oldString,self.useLongestToken));var minDiagonalToConsider=-1/0,maxDiagonalToConsider=1/0;function execEditLength(){for(var diagonalPath=Math.max(minDiagonalToConsider,-editLength);diagonalPath<=Math.min(maxDiagonalToConsider,editLength);diagonalPath+=2){var basePath=void 0,removePath=bestPath[diagonalPath-1],addPath=bestPath[diagonalPath+1];removePath&&(bestPath[diagonalPath-1]=void 0);var canAdd=!1;if(addPath){var addPathNewPos=addPath.oldPos-diagonalPath;canAdd=addPath&&0<=addPathNewPos&&addPathNewPos<newLen}var canRemove=removePath&&removePath.oldPos+1<oldLen;if(canAdd||canRemove){if(basePath=!canRemove||canAdd&&removePath.oldPos<addPath.oldPos?self.addToPath(addPath,!0,!1,0,options):self.addToPath(removePath,!1,!0,1,options),newPos=self.extractCommon(basePath,newString,oldString,diagonalPath,options),basePath.oldPos+1>=oldLen&&newPos+1>=newLen)return done(buildValues(self,basePath.lastComponent,newString,oldString,self.useLongestToken));bestPath[diagonalPath]=basePath,basePath.oldPos+1>=oldLen&&(maxDiagonalToConsider=Math.min(maxDiagonalToConsider,diagonalPath-1)),newPos+1>=newLen&&(minDiagonalToConsider=Math.max(minDiagonalToConsider,diagonalPath+1))}else bestPath[diagonalPath]=void 0}editLength++}if(callback)!function exec(){setTimeout(function(){if(editLength>maxEditLength||Date.now()>abortAfterTimestamp)return callback();execEditLength()||exec()},0)}();else for(;editLength<=maxEditLength&&Date.now()<=abortAfterTimestamp;){var ret=execEditLength();if(ret)return ret}},addToPath:function addToPath(path,added,removed,oldPosInc,options){var last=path.lastComponent;return last&&!options.oneChangePerToken&&last.added===added&&last.removed===removed?{oldPos:path.oldPos+oldPosInc,lastComponent:{count:last.count+1,added,removed,previousComponent:last.previousComponent}}:{oldPos:path.oldPos+oldPosInc,lastComponent:{count:1,added,removed,previousComponent:last}}},extractCommon:function extractCommon(basePath,newString,oldString,diagonalPath,options){for(var newLen=newString.length,oldLen=oldString.length,oldPos=basePath.oldPos,newPos=oldPos-diagonalPath,commonCount=0;newPos+1<newLen&&oldPos+1<oldLen&&this.equals(oldString[oldPos+1],newString[newPos+1],options);)newPos++,oldPos++,commonCount++,options.oneChangePerToken&&(basePath.lastComponent={count:1,previousComponent:basePath.lastComponent,added:!1,removed:!1});return commonCount&&!options.oneChangePerToken&&(basePath.lastComponent={count:commonCount,previousComponent:basePath.lastComponent,added:!1,removed:!1}),basePath.oldPos=oldPos,newPos},equals:function equals(left,right,options){return options.comparator?options.comparator(left,right):left===right||options.ignoreCase&&left.toLowerCase()===right.toLowerCase()},removeEmpty:function removeEmpty(array){for(var ret=[],i=0;i<array.length;i++)array[i]&&ret.push(array[i]);return ret},castInput:function castInput(value){return value},tokenize:function tokenize(value){return Array.from(value)},join:function join(chars){return chars.join("")},postProcess:function postProcess(changeObjects){return changeObjects}};var characterDiff=new Diff;function longestCommonPrefix(str1,str2){var i;for(i=0;i<str1.length&&i<str2.length;i++)if(str1[i]!=str2[i])return str1.slice(0,i);return str1.slice(0,i)}function longestCommonSuffix(str1,str2){var i;if(!str1||!str2||str1[str1.length-1]!=str2[str2.length-1])return"";for(i=0;i<str1.length&&i<str2.length;i++)if(str1[str1.length-(i+1)]!=str2[str2.length-(i+1)])return str1.slice(-i);return str1.slice(-i)}function replacePrefix(string,oldPrefix,newPrefix){if(string.slice(0,oldPrefix.length)!=oldPrefix)throw Error("string ".concat(JSON.stringify(string)," doesn't start with prefix ").concat(JSON.stringify(oldPrefix),"; this is a bug"));return newPrefix+string.slice(oldPrefix.length)}function replaceSuffix(string,oldSuffix,newSuffix){if(!oldSuffix)return string+newSuffix;if(string.slice(-oldSuffix.length)!=oldSuffix)throw Error("string ".concat(JSON.stringify(string)," doesn't end with suffix ").concat(JSON.stringify(oldSuffix),"; this is a bug"));return string.slice(0,-oldSuffix.length)+newSuffix}function removePrefix(string,oldPrefix){return replacePrefix(string,oldPrefix,"")}function removeSuffix(string,oldSuffix){return replaceSuffix(string,oldSuffix,"")}function maximumOverlap(string1,string2){return string2.slice(0,function overlapCount(a,b){var startA=0;a.length>b.length&&(startA=a.length-b.length);var endB=b.length;a.length<b.length&&(endB=a.length);var map=Array(endB),k=0;map[0]=0;for(var j=1;j<endB;j++){for(b[j]==b[k]?map[j]=map[k]:map[j]=k;k>0&&b[j]!=b[k];)k=map[k];b[j]==b[k]&&k++}k=0;for(var i=startA;i<a.length;i++){for(;k>0&&a[i]!=b[k];)k=map[k];a[i]==b[k]&&k++}return k}(string1,string2))}var extendedWordChars="a-zA-Z0-9_\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}",tokenizeIncludingWhitespace=new RegExp("[".concat(extendedWordChars,"]+|\\s+|[^").concat(extendedWordChars,"]"),"ug"),wordDiff=new Diff;function dedupeWhitespaceInChangeObjects(startKeep,deletion,insertion,endKeep){if(deletion&&insertion){var oldWsPrefix=deletion.value.match(/^\s*/)[0],oldWsSuffix=deletion.value.match(/\s*$/)[0],newWsPrefix=insertion.value.match(/^\s*/)[0],newWsSuffix=insertion.value.match(/\s*$/)[0];if(startKeep){var commonWsPrefix=longestCommonPrefix(oldWsPrefix,newWsPrefix);startKeep.value=replaceSuffix(startKeep.value,newWsPrefix,commonWsPrefix),deletion.value=removePrefix(deletion.value,commonWsPrefix),insertion.value=removePrefix(insertion.value,commonWsPrefix)}if(endKeep){var commonWsSuffix=longestCommonSuffix(oldWsSuffix,newWsSuffix);endKeep.value=replacePrefix(endKeep.value,newWsSuffix,commonWsSuffix),deletion.value=removeSuffix(deletion.value,commonWsSuffix),insertion.value=removeSuffix(insertion.value,commonWsSuffix)}}else if(insertion)startKeep&&(insertion.value=insertion.value.replace(/^\s*/,"")),endKeep&&(endKeep.value=endKeep.value.replace(/^\s*/,""));else if(startKeep&&endKeep){var newWsFull=endKeep.value.match(/^\s*/)[0],delWsStart=deletion.value.match(/^\s*/)[0],delWsEnd=deletion.value.match(/\s*$/)[0],newWsStart=longestCommonPrefix(newWsFull,delWsStart);deletion.value=removePrefix(deletion.value,newWsStart);var newWsEnd=longestCommonSuffix(removePrefix(newWsFull,newWsStart),delWsEnd);deletion.value=removeSuffix(deletion.value,newWsEnd),endKeep.value=replacePrefix(endKeep.value,newWsFull,newWsEnd),startKeep.value=replaceSuffix(startKeep.value,newWsFull,newWsFull.slice(0,newWsFull.length-newWsEnd.length))}else if(endKeep){var endKeepWsPrefix=endKeep.value.match(/^\s*/)[0],overlap=maximumOverlap(deletion.value.match(/\s*$/)[0],endKeepWsPrefix);deletion.value=removeSuffix(deletion.value,overlap)}else if(startKeep){var _overlap=maximumOverlap(startKeep.value.match(/\s*$/)[0],deletion.value.match(/^\s*/)[0]);deletion.value=removePrefix(deletion.value,_overlap)}}wordDiff.equals=function(left,right,options){return options.ignoreCase&&(left=left.toLowerCase(),right=right.toLowerCase()),left.trim()===right.trim()},wordDiff.tokenize=function(value){var parts,options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(options.intlSegmenter){if("word"!=options.intlSegmenter.resolvedOptions().granularity)throw new Error('The segmenter passed must have a granularity of "word"');parts=Array.from(options.intlSegmenter.segment(value),function(segment){return segment.segment})}else parts=value.match(tokenizeIncludingWhitespace)||[];var tokens=[],prevPart=null;return parts.forEach(function(part){/\s/.test(part)?null==prevPart?tokens.push(part):tokens.push(tokens.pop()+part):/\s/.test(prevPart)?tokens[tokens.length-1]==prevPart?tokens.push(tokens.pop()+part):tokens.push(prevPart+part):tokens.push(part),prevPart=part}),tokens},wordDiff.join=function(tokens){return tokens.map(function(token,i){return 0==i?token:token.replace(/^\s+/,"")}).join("")},wordDiff.postProcess=function(changes,options){if(!changes||options.oneChangePerToken)return changes;var lastKeep=null,insertion=null,deletion=null;return changes.forEach(function(change){change.added?insertion=change:change.removed?deletion=change:((insertion||deletion)&&dedupeWhitespaceInChangeObjects(lastKeep,deletion,insertion,change),lastKeep=change,insertion=null,deletion=null)}),(insertion||deletion)&&dedupeWhitespaceInChangeObjects(lastKeep,deletion,insertion,null),changes};var wordWithSpaceDiff=new Diff;function diffWordsWithSpace(oldStr,newStr,options){return wordWithSpaceDiff.diff(oldStr,newStr,options)}wordWithSpaceDiff.tokenize=function(value){var regex=new RegExp("(\\r?\\n)|[".concat(extendedWordChars,"]+|[^\\S\\n\\r]+|[^").concat(extendedWordChars,"]"),"ug");return value.match(regex)||[]};var lineDiff=new Diff;lineDiff.tokenize=function(value,options){options.stripTrailingCr&&(value=value.replace(/\r\n/g,"\n"));var retLines=[],linesAndNewlines=value.split(/(\n|\r\n)/);linesAndNewlines[linesAndNewlines.length-1]||linesAndNewlines.pop();for(var i=0;i<linesAndNewlines.length;i++){var line=linesAndNewlines[i];i%2&&!options.newlineIsToken?retLines[retLines.length-1]+=line:retLines.push(line)}return retLines},lineDiff.equals=function(left,right,options){return options.ignoreWhitespace?(options.newlineIsToken&&left.includes("\n")||(left=left.trim()),options.newlineIsToken&&right.includes("\n")||(right=right.trim())):options.ignoreNewlineAtEof&&!options.newlineIsToken&&(left.endsWith("\n")&&(left=left.slice(0,-1)),right.endsWith("\n")&&(right=right.slice(0,-1))),Diff.prototype.equals.call(this,left,right,options)};var sentenceDiff=new Diff;sentenceDiff.tokenize=function(value){return value.split(/(\S.+?[.!?])(?=\s+|$)/)};var cssDiff=new Diff;function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}cssDiff.tokenize=function(value){return value.split(/([{}:;,]|\s+)/)};var jsonDiff=new Diff;function canonicalize(obj,stack,replacementStack,replacer,key){var i,canonicalizedObj;for(stack=stack||[],replacementStack=replacementStack||[],replacer&&(obj=replacer(key,obj)),i=0;i<stack.length;i+=1)if(stack[i]===obj)return replacementStack[i];if("[object Array]"===Object.prototype.toString.call(obj)){for(stack.push(obj),canonicalizedObj=new Array(obj.length),replacementStack.push(canonicalizedObj),i=0;i<obj.length;i+=1)canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack,replacer,key);return stack.pop(),replacementStack.pop(),canonicalizedObj}if(obj&&obj.toJSON&&(obj=obj.toJSON()),"object"===_typeof(obj)&&null!==obj){stack.push(obj),canonicalizedObj={},replacementStack.push(canonicalizedObj);var _key,sortedKeys=[];for(_key in obj)Object.prototype.hasOwnProperty.call(obj,_key)&&sortedKeys.push(_key);for(sortedKeys.sort(),i=0;i<sortedKeys.length;i+=1)canonicalizedObj[_key=sortedKeys[i]]=canonicalize(obj[_key],stack,replacementStack,replacer,_key);stack.pop(),replacementStack.pop()}else canonicalizedObj=obj;return canonicalizedObj}jsonDiff.useLongestToken=!0,jsonDiff.tokenize=lineDiff.tokenize,jsonDiff.castInput=function(value,options){var undefinedReplacement=options.undefinedReplacement,_options$stringifyRep=options.stringifyReplacer,stringifyReplacer=void 0===_options$stringifyRep?function(k,v){return void 0===v?undefinedReplacement:v}:_options$stringifyRep;return"string"==typeof value?value:JSON.stringify(canonicalize(value,null,null,stringifyReplacer),stringifyReplacer,"  ")},jsonDiff.equals=function(left,right,options){return Diff.prototype.equals.call(jsonDiff,left.replace(/,([\r\n])/g,"$1"),right.replace(/,([\r\n])/g,"$1"),options)};var arrayDiff=new Diff;function newDistanceFn(str){return(x,y)=>{const xValue=str(x).trim(),yValue=str(y).trim();return function levenshtein(a,b){if(0===a.length)return b.length;if(0===b.length)return a.length;const matrix=[];let i,j;for(i=0;i<=b.length;i++)matrix[i]=[i];for(j=0;j<=a.length;j++)matrix[0][j]=j;for(i=1;i<=b.length;i++)for(j=1;j<=a.length;j++)b.charAt(i-1)===a.charAt(j-1)?matrix[i][j]=matrix[i-1][j-1]:matrix[i][j]=Math.min(matrix[i-1][j-1]+1,Math.min(matrix[i][j-1]+1,matrix[i-1][j]+1));return matrix[b.length][a.length]}(xValue,yValue)/(xValue.length+yValue.length)}}function newMatcherFn(distance){return function group(a,b,level=0,cache=new Map){const bm=function findBestMatch(a,b,cache=new Map){let bestMatch,bestMatchDist=1/0;for(let i=0;i<a.length;++i)for(let j=0;j<b.length;++j){const cacheKey=JSON.stringify([a[i],b[j]]);let md;cache.has(cacheKey)&&(md=cache.get(cacheKey))||(md=distance(a[i],b[j]),cache.set(cacheKey,md)),md<bestMatchDist&&(bestMatchDist=md,bestMatch={indexA:i,indexB:j,score:bestMatchDist})}return bestMatch}(a,b,cache);if(!bm||a.length+b.length<3)return[[a,b]];const a1=a.slice(0,bm.indexA),b1=b.slice(0,bm.indexB),aMatch=[a[bm.indexA]],bMatch=[b[bm.indexB]],tailA=bm.indexA+1,tailB=bm.indexB+1,a2=a.slice(tailA),b2=b.slice(tailB),group1=group(a1,b1,level+1,cache),groupMatch=group(aMatch,bMatch,level+1,cache),group2=group(a2,b2,level+1,cache);let result=groupMatch;return(bm.indexA>0||bm.indexB>0)&&(result=group1.concat(result)),(a.length>tailA||b.length>tailB)&&(result=result.concat(group2)),result}}arrayDiff.tokenize=function(value){return value.slice()},arrayDiff.join=arrayDiff.removeEmpty=function(value){return value};const CSSLineClass={INSERTS:"d2h-ins",DELETES:"d2h-del",CONTEXT:"d2h-cntx",INFO:"d2h-info",INSERT_CHANGES:"d2h-ins d2h-change",DELETE_CHANGES:"d2h-del d2h-change"},defaultRenderConfig={matching:"none",matchWordsThreshold:.25,maxLineLengthHighlight:1e4,diffStyle:"word",colorScheme:ColorSchemeType.LIGHT},distance=newDistanceFn(change=>change.value),matcher=newMatcherFn(distance);function isDevNullName(name){return-1!==name.indexOf("dev/null")}function removeDelElements(line){return line.replace(/(<del[^>]*>((.|\n)*?)<\/del>)/g,"")}function toCSSClass(lineType){switch(lineType){case LineType.CONTEXT:return CSSLineClass.CONTEXT;case LineType.INSERT:return CSSLineClass.INSERTS;case LineType.DELETE:return CSSLineClass.DELETES}}function colorSchemeToCss(colorScheme){switch(colorScheme){case ColorSchemeType.DARK:return"d2h-dark-color-scheme";case ColorSchemeType.AUTO:return"d2h-auto-color-scheme";case ColorSchemeType.LIGHT:default:return"d2h-light-color-scheme"}}function escapeForHtml(str){return str.slice(0).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/\//g,"&#x2F;")}function deconstructLine(line,isCombined,escape=!0){const indexToSplit=function prefixLength(isCombined){return isCombined?2:1}(isCombined);return{prefix:line.substring(0,indexToSplit),content:escape?escapeForHtml(line.substring(indexToSplit)):line.substring(indexToSplit)}}function filenameDiff(file){const oldFilename=unifyPath(file.oldName),newFilename=unifyPath(file.newName);if(oldFilename===newFilename||isDevNullName(oldFilename)||isDevNullName(newFilename))return isDevNullName(newFilename)?oldFilename:newFilename;{const prefixPaths=[],suffixPaths=[],oldFilenameParts=oldFilename.split("/"),newFilenameParts=newFilename.split("/");let i=0,j=oldFilenameParts.length-1,k=newFilenameParts.length-1;for(;i<j&&i<k&&oldFilenameParts[i]===newFilenameParts[i];)prefixPaths.push(newFilenameParts[i]),i+=1;for(;j>i&&k>i&&oldFilenameParts[j]===newFilenameParts[k];)suffixPaths.unshift(newFilenameParts[k]),j-=1,k-=1;const finalPrefix=prefixPaths.join("/"),finalSuffix=suffixPaths.join("/"),oldRemainingPath=oldFilenameParts.slice(i,j+1).join("/"),newRemainingPath=newFilenameParts.slice(i,k+1).join("/");return finalPrefix.length&&finalSuffix.length?finalPrefix+"/{"+oldRemainingPath+" → "+newRemainingPath+"}/"+finalSuffix:finalPrefix.length?finalPrefix+"/{"+oldRemainingPath+" → "+newRemainingPath+"}":finalSuffix.length?"{"+oldRemainingPath+" → "+newRemainingPath+"}/"+finalSuffix:oldFilename+" → "+newFilename}}function getHtmlId(file){return`d2h-${function hashCode(text){let i,chr,len,hash=0;for(i=0,len=text.length;i<len;i++)chr=text.charCodeAt(i),hash=(hash<<5)-hash+chr,hash|=0;return hash}(filenameDiff(file)).toString().slice(-6)}`}function getFileIcon(file){let templateName="file-changed";return file.isRename||file.isCopy?templateName="file-renamed":file.isNew?templateName="file-added":file.isDeleted?templateName="file-deleted":file.newName!==file.oldName&&(templateName="file-renamed"),templateName}function diffHighlight(diffLine1,diffLine2,isCombined,config={}){const{matching,maxLineLengthHighlight,matchWordsThreshold,diffStyle}=Object.assign(Object.assign({},defaultRenderConfig),config),line1=deconstructLine(diffLine1,isCombined,!1),line2=deconstructLine(diffLine2,isCombined,!1);if(line1.content.length>maxLineLengthHighlight||line2.content.length>maxLineLengthHighlight)return{oldLine:{prefix:line1.prefix,content:escapeForHtml(line1.content)},newLine:{prefix:line2.prefix,content:escapeForHtml(line2.content)}};const diff="char"===diffStyle?function diffChars(oldStr,newStr,options){return characterDiff.diff(oldStr,newStr,options)}(line1.content,line2.content):diffWordsWithSpace(line1.content,line2.content),changedWords=[];if("word"===diffStyle&&"words"===matching){const removed=diff.filter(element=>element.removed),added=diff.filter(element=>element.added);matcher(added,removed).forEach(chunk=>{if(1===chunk[0].length&&1===chunk[1].length){distance(chunk[0][0],chunk[1][0])<matchWordsThreshold&&(changedWords.push(chunk[0][0]),changedWords.push(chunk[1][0]))}})}const highlightedLine=diff.reduce((highlightedLine,part)=>{const elemType=part.added?"ins":part.removed?"del":null,addClass=changedWords.indexOf(part)>-1?' class="d2h-change"':"",escapedValue=escapeForHtml(part.value);return null!==elemType?`${highlightedLine}<${elemType}${addClass}>${escapedValue}</${elemType}>`:`${highlightedLine}${escapedValue}`},"");return{oldLine:{prefix:line1.prefix,content:(line=highlightedLine,line.replace(/(<ins[^>]*>((.|\n)*?)<\/ins>)/g,""))},newLine:{prefix:line2.prefix,content:removeDelElements(highlightedLine)}};var line}const defaultFileListRendererConfig={colorScheme:defaultRenderConfig.colorScheme};class FileListRenderer{constructor(hoganUtils,config={}){this.hoganUtils=hoganUtils,this.config=Object.assign(Object.assign({},defaultFileListRendererConfig),config)}render(diffFiles){const files=diffFiles.map(file=>this.hoganUtils.render("file-summary","line",{fileHtmlId:getHtmlId(file),oldName:file.oldName,newName:file.newName,fileName:filenameDiff(file),deletedLines:"-"+file.deletedLines,addedLines:"+"+file.addedLines},{fileIcon:this.hoganUtils.template("icon",getFileIcon(file))})).join("\n");return this.hoganUtils.render("file-summary","wrapper",{colorScheme:colorSchemeToCss(this.config.colorScheme),filesNumber:diffFiles.length,files})}}const defaultLineByLineRendererConfig=Object.assign(Object.assign({},defaultRenderConfig),{renderNothingWhenEmpty:!1,matchingMaxComparisons:2500,maxLineSizeInBlockForComparison:200});class LineByLineRenderer{constructor(hoganUtils,config={}){this.hoganUtils=hoganUtils,this.config=Object.assign(Object.assign({},defaultLineByLineRendererConfig),config)}render(diffFiles){const diffsHtml=diffFiles.map(file=>{let diffs;return diffs=file.blocks.length?this.generateFileHtml(file):this.generateEmptyDiff(),this.makeFileDiffHtml(file,diffs)}).join("\n");return this.hoganUtils.render("generic","wrapper",{colorScheme:colorSchemeToCss(this.config.colorScheme),content:diffsHtml})}makeFileDiffHtml(file,diffs){if(this.config.renderNothingWhenEmpty&&Array.isArray(file.blocks)&&0===file.blocks.length)return"";const fileDiffTemplate=this.hoganUtils.template("line-by-line","file-diff"),filePathTemplate=this.hoganUtils.template("generic","file-path"),fileIconTemplate=this.hoganUtils.template("icon","file"),fileTagTemplate=this.hoganUtils.template("tag",getFileIcon(file));return fileDiffTemplate.render({file,fileHtmlId:getHtmlId(file),diffs,filePath:filePathTemplate.render({fileDiffName:filenameDiff(file)},{fileIcon:fileIconTemplate,fileTag:fileTagTemplate})})}generateEmptyDiff(){return this.hoganUtils.render("generic","empty-diff",{contentClass:"d2h-code-line",CSSLineClass})}generateFileHtml(file){const matcher=newMatcherFn(newDistanceFn(e=>deconstructLine(e.content,file.isCombined).content));return file.blocks.map(block=>{let lines=this.hoganUtils.render("generic","block-header",{CSSLineClass,blockHeader:file.isTooBig?block.header:escapeForHtml(block.header),lineClass:"d2h-code-linenumber",contentClass:"d2h-code-line"});return this.applyLineGroupping(block).forEach(([contextLines,oldLines,newLines])=>{if(oldLines.length&&newLines.length&&!contextLines.length)this.applyRematchMatching(oldLines,newLines,matcher).map(([oldLines,newLines])=>{const{left,right}=this.processChangedLines(file,file.isCombined,oldLines,newLines);lines+=left,lines+=right});else if(contextLines.length)contextLines.forEach(line=>{const{prefix,content}=deconstructLine(line.content,file.isCombined);lines+=this.generateSingleLineHtml(file,{type:CSSLineClass.CONTEXT,prefix,content,oldNumber:line.oldNumber,newNumber:line.newNumber})});else if(oldLines.length||newLines.length){const{left,right}=this.processChangedLines(file,file.isCombined,oldLines,newLines);lines+=left,lines+=right}else console.error("Unknown state reached while processing groups of lines",contextLines,oldLines,newLines)}),lines}).join("\n")}applyLineGroupping(block){const blockLinesGroups=[];let oldLines=[],newLines=[];for(let i=0;i<block.lines.length;i++){const diffLine=block.lines[i];(diffLine.type!==LineType.INSERT&&newLines.length||diffLine.type===LineType.CONTEXT&&oldLines.length>0)&&(blockLinesGroups.push([[],oldLines,newLines]),oldLines=[],newLines=[]),diffLine.type===LineType.CONTEXT?blockLinesGroups.push([[diffLine],[],[]]):diffLine.type===LineType.INSERT&&0===oldLines.length?blockLinesGroups.push([[],[],[diffLine]]):diffLine.type===LineType.INSERT&&oldLines.length>0?newLines.push(diffLine):diffLine.type===LineType.DELETE&&oldLines.push(diffLine)}return(oldLines.length||newLines.length)&&(blockLinesGroups.push([[],oldLines,newLines]),oldLines=[],newLines=[]),blockLinesGroups}applyRematchMatching(oldLines,newLines,matcher){const comparisons=oldLines.length*newLines.length,maxLineSizeInBlock=max(oldLines.concat(newLines).map(elem=>elem.content.length));return comparisons<this.config.matchingMaxComparisons&&maxLineSizeInBlock<this.config.maxLineSizeInBlockForComparison&&("lines"===this.config.matching||"words"===this.config.matching)?matcher(oldLines,newLines):[[oldLines,newLines]]}processChangedLines(file,isCombined,oldLines,newLines){const fileHtml={right:"",left:""},maxLinesNumber=Math.max(oldLines.length,newLines.length);for(let i=0;i<maxLinesNumber;i++){const oldLine=oldLines[i],newLine=newLines[i],diff=void 0!==oldLine&&void 0!==newLine?diffHighlight(oldLine.content,newLine.content,isCombined,this.config):void 0,preparedOldLine=void 0!==oldLine&&void 0!==oldLine.oldNumber?Object.assign(Object.assign({},void 0!==diff?{prefix:diff.oldLine.prefix,content:diff.oldLine.content,type:CSSLineClass.DELETE_CHANGES}:Object.assign(Object.assign({},deconstructLine(oldLine.content,isCombined)),{type:toCSSClass(oldLine.type)})),{oldNumber:oldLine.oldNumber,newNumber:oldLine.newNumber}):void 0,preparedNewLine=void 0!==newLine&&void 0!==newLine.newNumber?Object.assign(Object.assign({},void 0!==diff?{prefix:diff.newLine.prefix,content:diff.newLine.content,type:CSSLineClass.INSERT_CHANGES}:Object.assign(Object.assign({},deconstructLine(newLine.content,isCombined)),{type:toCSSClass(newLine.type)})),{oldNumber:newLine.oldNumber,newNumber:newLine.newNumber}):void 0,{left,right}=this.generateLineHtml(file,preparedOldLine,preparedNewLine);fileHtml.left+=left,fileHtml.right+=right}return fileHtml}generateLineHtml(file,oldLine,newLine){return{left:this.generateSingleLineHtml(file,oldLine),right:this.generateSingleLineHtml(file,newLine)}}generateSingleLineHtml(file,line){if(void 0===line)return"";const lineNumberHtml=this.hoganUtils.render("line-by-line","numbers",{oldNumber:line.oldNumber||"",newNumber:line.newNumber||""});return this.hoganUtils.render("generic","line",{type:line.type,lineClass:"d2h-code-linenumber",contentClass:"d2h-code-line",prefix:" "===line.prefix?"&nbsp;":line.prefix,content:line.content,lineNumber:lineNumberHtml,line,file})}}const defaultSideBySideRendererConfig=Object.assign(Object.assign({},defaultRenderConfig),{renderNothingWhenEmpty:!1,matchingMaxComparisons:2500,maxLineSizeInBlockForComparison:200});class SideBySideRenderer{constructor(hoganUtils,config={}){this.hoganUtils=hoganUtils,this.config=Object.assign(Object.assign({},defaultSideBySideRendererConfig),config)}render(diffFiles){const diffsHtml=diffFiles.map(file=>{let diffs;return diffs=file.blocks.length?this.generateFileHtml(file):this.generateEmptyDiff(),this.makeFileDiffHtml(file,diffs)}).join("\n");return this.hoganUtils.render("generic","wrapper",{colorScheme:colorSchemeToCss(this.config.colorScheme),content:diffsHtml})}makeFileDiffHtml(file,diffs){if(this.config.renderNothingWhenEmpty&&Array.isArray(file.blocks)&&0===file.blocks.length)return"";const fileDiffTemplate=this.hoganUtils.template("side-by-side","file-diff"),filePathTemplate=this.hoganUtils.template("generic","file-path"),fileIconTemplate=this.hoganUtils.template("icon","file"),fileTagTemplate=this.hoganUtils.template("tag",getFileIcon(file));return fileDiffTemplate.render({file,fileHtmlId:getHtmlId(file),diffs,filePath:filePathTemplate.render({fileDiffName:filenameDiff(file)},{fileIcon:fileIconTemplate,fileTag:fileTagTemplate})})}generateEmptyDiff(){return{right:"",left:this.hoganUtils.render("generic","empty-diff",{contentClass:"d2h-code-side-line",CSSLineClass})}}generateFileHtml(file){const matcher=newMatcherFn(newDistanceFn(e=>deconstructLine(e.content,file.isCombined).content));return file.blocks.map(block=>{const fileHtml={left:this.makeHeaderHtml(block.header,file),right:this.makeHeaderHtml("")};return this.applyLineGroupping(block).forEach(([contextLines,oldLines,newLines])=>{if(oldLines.length&&newLines.length&&!contextLines.length)this.applyRematchMatching(oldLines,newLines,matcher).map(([oldLines,newLines])=>{const{left,right}=this.processChangedLines(file.isCombined,oldLines,newLines);fileHtml.left+=left,fileHtml.right+=right});else if(contextLines.length)contextLines.forEach(line=>{const{prefix,content}=deconstructLine(line.content,file.isCombined),{left,right}=this.generateLineHtml({type:CSSLineClass.CONTEXT,prefix,content,number:line.oldNumber},{type:CSSLineClass.CONTEXT,prefix,content,number:line.newNumber});fileHtml.left+=left,fileHtml.right+=right});else if(oldLines.length||newLines.length){const{left,right}=this.processChangedLines(file.isCombined,oldLines,newLines);fileHtml.left+=left,fileHtml.right+=right}else console.error("Unknown state reached while processing groups of lines",contextLines,oldLines,newLines)}),fileHtml}).reduce((accomulated,html)=>({left:accomulated.left+html.left,right:accomulated.right+html.right}),{left:"",right:""})}applyLineGroupping(block){const blockLinesGroups=[];let oldLines=[],newLines=[];for(let i=0;i<block.lines.length;i++){const diffLine=block.lines[i];(diffLine.type!==LineType.INSERT&&newLines.length||diffLine.type===LineType.CONTEXT&&oldLines.length>0)&&(blockLinesGroups.push([[],oldLines,newLines]),oldLines=[],newLines=[]),diffLine.type===LineType.CONTEXT?blockLinesGroups.push([[diffLine],[],[]]):diffLine.type===LineType.INSERT&&0===oldLines.length?blockLinesGroups.push([[],[],[diffLine]]):diffLine.type===LineType.INSERT&&oldLines.length>0?newLines.push(diffLine):diffLine.type===LineType.DELETE&&oldLines.push(diffLine)}return(oldLines.length||newLines.length)&&(blockLinesGroups.push([[],oldLines,newLines]),oldLines=[],newLines=[]),blockLinesGroups}applyRematchMatching(oldLines,newLines,matcher){const comparisons=oldLines.length*newLines.length,maxLineSizeInBlock=max(oldLines.concat(newLines).map(elem=>elem.content.length));return comparisons<this.config.matchingMaxComparisons&&maxLineSizeInBlock<this.config.maxLineSizeInBlockForComparison&&("lines"===this.config.matching||"words"===this.config.matching)?matcher(oldLines,newLines):[[oldLines,newLines]]}makeHeaderHtml(blockHeader,file){return this.hoganUtils.render("generic","block-header",{CSSLineClass,blockHeader:(null==file?void 0:file.isTooBig)?blockHeader:escapeForHtml(blockHeader),lineClass:"d2h-code-side-linenumber",contentClass:"d2h-code-side-line"})}processChangedLines(isCombined,oldLines,newLines){const fileHtml={right:"",left:""},maxLinesNumber=Math.max(oldLines.length,newLines.length);for(let i=0;i<maxLinesNumber;i++){const oldLine=oldLines[i],newLine=newLines[i],diff=void 0!==oldLine&&void 0!==newLine?diffHighlight(oldLine.content,newLine.content,isCombined,this.config):void 0,preparedOldLine=void 0!==oldLine&&void 0!==oldLine.oldNumber?Object.assign(Object.assign({},void 0!==diff?{prefix:diff.oldLine.prefix,content:diff.oldLine.content,type:CSSLineClass.DELETE_CHANGES}:Object.assign(Object.assign({},deconstructLine(oldLine.content,isCombined)),{type:toCSSClass(oldLine.type)})),{number:oldLine.oldNumber}):void 0,preparedNewLine=void 0!==newLine&&void 0!==newLine.newNumber?Object.assign(Object.assign({},void 0!==diff?{prefix:diff.newLine.prefix,content:diff.newLine.content,type:CSSLineClass.INSERT_CHANGES}:Object.assign(Object.assign({},deconstructLine(newLine.content,isCombined)),{type:toCSSClass(newLine.type)})),{number:newLine.newNumber}):void 0,{left,right}=this.generateLineHtml(preparedOldLine,preparedNewLine);fileHtml.left+=left,fileHtml.right+=right}return fileHtml}generateLineHtml(oldLine,newLine){return{left:this.generateSingleHtml(oldLine),right:this.generateSingleHtml(newLine)}}generateSingleHtml(line){return this.hoganUtils.render("generic","line",{type:(null==line?void 0:line.type)||`${CSSLineClass.CONTEXT} d2h-emptyplaceholder`,lineClass:void 0!==line?"d2h-code-side-linenumber":"d2h-code-side-linenumber d2h-code-side-emptyplaceholder",contentClass:void 0!==line?"d2h-code-side-line":"d2h-code-side-line d2h-code-side-emptyplaceholder",prefix:" "===(null==line?void 0:line.prefix)?"&nbsp;":null==line?void 0:line.prefix,content:null==line?void 0:line.content,lineNumber:null==line?void 0:line.number})}}var hogan=__webpack_require__("./node_modules/hogan.js/lib/hogan.js");const defaultTemplates={};defaultTemplates["file-summary-line"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<li class="d2h-file-list-line">'),t.b("\n"+i),t.b('    <span class="d2h-file-name-wrapper">'),t.b("\n"+i),t.b(t.rp("<fileIcon0",c,p,"      ")),t.b('      <a href="#'),t.b(t.v(t.f("fileHtmlId",c,p,0))),t.b('" class="d2h-file-name">'),t.b(t.v(t.f("fileName",c,p,0))),t.b("</a>"),t.b("\n"+i),t.b('      <span class="d2h-file-stats">'),t.b("\n"+i),t.b('          <span class="d2h-lines-added">'),t.b(t.v(t.f("addedLines",c,p,0))),t.b("</span>"),t.b("\n"+i),t.b('          <span class="d2h-lines-deleted">'),t.b(t.v(t.f("deletedLines",c,p,0))),t.b("</span>"),t.b("\n"+i),t.b("      </span>"),t.b("\n"+i),t.b("    </span>"),t.b("\n"+i),t.b("</li>"),t.fl()},partials:{"<fileIcon0":{name:"fileIcon",partials:{},subs:{}}},subs:{}}),defaultTemplates["file-summary-wrapper"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<div class="d2h-file-list-wrapper '),t.b(t.v(t.f("colorScheme",c,p,0))),t.b('">'),t.b("\n"+i),t.b('    <div class="d2h-file-list-header">'),t.b("\n"+i),t.b('        <span class="d2h-file-list-title">Files changed ('),t.b(t.v(t.f("filesNumber",c,p,0))),t.b(")</span>"),t.b("\n"+i),t.b('        <a class="d2h-file-switch d2h-hide">hide</a>'),t.b("\n"+i),t.b('        <a class="d2h-file-switch d2h-show">show</a>'),t.b("\n"+i),t.b("    </div>"),t.b("\n"+i),t.b('    <ol class="d2h-file-list">'),t.b("\n"+i),t.b("    "),t.b(t.t(t.f("files",c,p,0))),t.b("\n"+i),t.b("    </ol>"),t.b("\n"+i),t.b("</div>"),t.fl()},partials:{},subs:{}}),defaultTemplates["generic-block-header"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b("<tr>"),t.b("\n"+i),t.b('    <td class="'),t.b(t.v(t.f("lineClass",c,p,0))),t.b(" "),t.b(t.v(t.d("CSSLineClass.INFO",c,p,0))),t.b('"></td>'),t.b("\n"+i),t.b('    <td class="'),t.b(t.v(t.d("CSSLineClass.INFO",c,p,0))),t.b('">'),t.b("\n"+i),t.b('        <div class="'),t.b(t.v(t.f("contentClass",c,p,0))),t.b('">'),t.s(t.f("blockHeader",c,p,1),c,p,0,156,173,"{{ }}")&&(t.rs(c,p,function(c,p,t){t.b(t.t(t.f("blockHeader",c,p,0)))}),c.pop()),t.s(t.f("blockHeader",c,p,1),c,p,1,0,0,"")||t.b("&nbsp;"),t.b("</div>"),t.b("\n"+i),t.b("    </td>"),t.b("\n"+i),t.b("</tr>"),t.fl()},partials:{},subs:{}}),defaultTemplates["generic-empty-diff"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b("<tr>"),t.b("\n"+i),t.b('    <td class="'),t.b(t.v(t.d("CSSLineClass.INFO",c,p,0))),t.b('">'),t.b("\n"+i),t.b('        <div class="'),t.b(t.v(t.f("contentClass",c,p,0))),t.b('">'),t.b("\n"+i),t.b("            File without changes"),t.b("\n"+i),t.b("        </div>"),t.b("\n"+i),t.b("    </td>"),t.b("\n"+i),t.b("</tr>"),t.fl()},partials:{},subs:{}}),defaultTemplates["generic-file-path"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<span class="d2h-file-name-wrapper">'),t.b("\n"+i),t.b(t.rp("<fileIcon0",c,p,"    ")),t.b('    <span class="d2h-file-name">'),t.b(t.v(t.f("fileDiffName",c,p,0))),t.b("</span>"),t.b("\n"+i),t.b(t.rp("<fileTag1",c,p,"    ")),t.b("</span>"),t.b("\n"+i),t.b('<label class="d2h-file-collapse">'),t.b("\n"+i),t.b('    <input class="d2h-file-collapse-input" type="checkbox" name="viewed" value="viewed">'),t.b("\n"+i),t.b("    Viewed"),t.b("\n"+i),t.b("</label>"),t.fl()},partials:{"<fileIcon0":{name:"fileIcon",partials:{},subs:{}},"<fileTag1":{name:"fileTag",partials:{},subs:{}}},subs:{}}),defaultTemplates["generic-line"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b("<tr>"),t.b("\n"+i),t.b('    <td class="'),t.b(t.v(t.f("lineClass",c,p,0))),t.b(" "),t.b(t.v(t.f("type",c,p,0))),t.b('">'),t.b("\n"+i),t.b("      "),t.b(t.t(t.f("lineNumber",c,p,0))),t.b("\n"+i),t.b("    </td>"),t.b("\n"+i),t.b('    <td class="'),t.b(t.v(t.f("type",c,p,0))),t.b('">'),t.b("\n"+i),t.b('        <div class="'),t.b(t.v(t.f("contentClass",c,p,0))),t.b('">'),t.b("\n"+i),t.s(t.f("prefix",c,p,1),c,p,0,162,238,"{{ }}")&&(t.rs(c,p,function(c,p,t){t.b('            <span class="d2h-code-line-prefix">'),t.b(t.t(t.f("prefix",c,p,0))),t.b("</span>"),t.b("\n"+i)}),c.pop()),t.s(t.f("prefix",c,p,1),c,p,1,0,0,"")||(t.b('            <span class="d2h-code-line-prefix">&nbsp;</span>'),t.b("\n"+i)),t.s(t.f("content",c,p,1),c,p,0,371,445,"{{ }}")&&(t.rs(c,p,function(c,p,t){t.b('            <span class="d2h-code-line-ctn">'),t.b(t.t(t.f("content",c,p,0))),t.b("</span>"),t.b("\n"+i)}),c.pop()),t.s(t.f("content",c,p,1),c,p,1,0,0,"")||(t.b('            <span class="d2h-code-line-ctn"><br></span>'),t.b("\n"+i)),t.b("        </div>"),t.b("\n"+i),t.b("    </td>"),t.b("\n"+i),t.b("</tr>"),t.fl()},partials:{},subs:{}}),defaultTemplates["generic-wrapper"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<div class="d2h-wrapper '),t.b(t.v(t.f("colorScheme",c,p,0))),t.b('">'),t.b("\n"+i),t.b("    "),t.b(t.t(t.f("content",c,p,0))),t.b("\n"+i),t.b("</div>"),t.fl()},partials:{},subs:{}}),defaultTemplates["icon-file-added"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<svg aria-hidden="true" class="d2h-icon d2h-added" height="16" title="added" version="1.1" viewBox="0 0 14 16"'),t.b("\n"+i),t.b('     width="14">'),t.b("\n"+i),t.b('    <path d="M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM6 9H3V7h3V4h2v3h3v2H8v3H6V9z"></path>'),t.b("\n"+i),t.b("</svg>"),t.fl()},partials:{},subs:{}}),defaultTemplates["icon-file-changed"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<svg aria-hidden="true" class="d2h-icon d2h-changed" height="16" title="modified" version="1.1"'),t.b("\n"+i),t.b('     viewBox="0 0 14 16" width="14">'),t.b("\n"+i),t.b('    <path d="M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM4 8c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3-3-1.34-3-3z"></path>'),t.b("\n"+i),t.b("</svg>"),t.fl()},partials:{},subs:{}}),defaultTemplates["icon-file-deleted"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<svg aria-hidden="true" class="d2h-icon d2h-deleted" height="16" title="removed" version="1.1"'),t.b("\n"+i),t.b('     viewBox="0 0 14 16" width="14">'),t.b("\n"+i),t.b('    <path d="M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM11 9H3V7h8v2z"></path>'),t.b("\n"+i),t.b("</svg>"),t.fl()},partials:{},subs:{}}),defaultTemplates["icon-file-renamed"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<svg aria-hidden="true" class="d2h-icon d2h-moved" height="16" title="renamed" version="1.1"'),t.b("\n"+i),t.b('     viewBox="0 0 14 16" width="14">'),t.b("\n"+i),t.b('    <path d="M6 9H3V7h3V4l5 4-5 4V9z m8-7v12c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h12c0.55 0 1 0.45 1 1z m-1 0H1v12h12V2z"></path>'),t.b("\n"+i),t.b("</svg>"),t.fl()},partials:{},subs:{}}),defaultTemplates["icon-file"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<svg aria-hidden="true" class="d2h-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12">'),t.b("\n"+i),t.b('    <path d="M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z"></path>'),t.b("\n"+i),t.b("</svg>"),t.fl()},partials:{},subs:{}}),defaultTemplates["line-by-line-file-diff"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<div id="'),t.b(t.v(t.f("fileHtmlId",c,p,0))),t.b('" class="d2h-file-wrapper" data-lang="'),t.b(t.v(t.d("file.language",c,p,0))),t.b('">'),t.b("\n"+i),t.b('    <div class="d2h-file-header">'),t.b("\n"+i),t.b("    "),t.b(t.t(t.f("filePath",c,p,0))),t.b("\n"+i),t.b("    </div>"),t.b("\n"+i),t.b('    <div class="d2h-file-diff">'),t.b("\n"+i),t.b('        <div class="d2h-code-wrapper">'),t.b("\n"+i),t.b('            <table class="d2h-diff-table">'),t.b("\n"+i),t.b('                <tbody class="d2h-diff-tbody">'),t.b("\n"+i),t.b("                "),t.b(t.t(t.f("diffs",c,p,0))),t.b("\n"+i),t.b("                </tbody>"),t.b("\n"+i),t.b("            </table>"),t.b("\n"+i),t.b("        </div>"),t.b("\n"+i),t.b("    </div>"),t.b("\n"+i),t.b("</div>"),t.fl()},partials:{},subs:{}}),defaultTemplates["line-by-line-numbers"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<div class="line-num1">'),t.b(t.v(t.f("oldNumber",c,p,0))),t.b("</div>"),t.b("\n"+i),t.b('<div class="line-num2">'),t.b(t.v(t.f("newNumber",c,p,0))),t.b("</div>"),t.fl()},partials:{},subs:{}}),defaultTemplates["side-by-side-file-diff"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<div id="'),t.b(t.v(t.f("fileHtmlId",c,p,0))),t.b('" class="d2h-file-wrapper" data-lang="'),t.b(t.v(t.d("file.language",c,p,0))),t.b('">'),t.b("\n"+i),t.b('    <div class="d2h-file-header">'),t.b("\n"+i),t.b("      "),t.b(t.t(t.f("filePath",c,p,0))),t.b("\n"+i),t.b("    </div>"),t.b("\n"+i),t.b('    <div class="d2h-files-diff">'),t.b("\n"+i),t.b('        <div class="d2h-file-side-diff">'),t.b("\n"+i),t.b('            <div class="d2h-code-wrapper">'),t.b("\n"+i),t.b('                <table class="d2h-diff-table">'),t.b("\n"+i),t.b('                    <tbody class="d2h-diff-tbody">'),t.b("\n"+i),t.b("                    "),t.b(t.t(t.d("diffs.left",c,p,0))),t.b("\n"+i),t.b("                    </tbody>"),t.b("\n"+i),t.b("                </table>"),t.b("\n"+i),t.b("            </div>"),t.b("\n"+i),t.b("        </div>"),t.b("\n"+i),t.b('        <div class="d2h-file-side-diff">'),t.b("\n"+i),t.b('            <div class="d2h-code-wrapper">'),t.b("\n"+i),t.b('                <table class="d2h-diff-table">'),t.b("\n"+i),t.b('                    <tbody class="d2h-diff-tbody">'),t.b("\n"+i),t.b("                    "),t.b(t.t(t.d("diffs.right",c,p,0))),t.b("\n"+i),t.b("                    </tbody>"),t.b("\n"+i),t.b("                </table>"),t.b("\n"+i),t.b("            </div>"),t.b("\n"+i),t.b("        </div>"),t.b("\n"+i),t.b("    </div>"),t.b("\n"+i),t.b("</div>"),t.fl()},partials:{},subs:{}}),defaultTemplates["tag-file-added"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<span class="d2h-tag d2h-added d2h-added-tag">ADDED</span>'),t.fl()},partials:{},subs:{}}),defaultTemplates["tag-file-changed"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<span class="d2h-tag d2h-changed d2h-changed-tag">CHANGED</span>'),t.fl()},partials:{},subs:{}}),defaultTemplates["tag-file-deleted"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<span class="d2h-tag d2h-deleted d2h-deleted-tag">DELETED</span>'),t.fl()},partials:{},subs:{}}),defaultTemplates["tag-file-renamed"]=new hogan.Template({code:function(c,p,i){var t=this;return t.b(i=i||""),t.b('<span class="d2h-tag d2h-moved d2h-moved-tag">RENAMED</span>'),t.fl()},partials:{},subs:{}});class HoganJsUtils{constructor({compiledTemplates={},rawTemplates={}}){const compiledRawTemplates=Object.entries(rawTemplates).reduce((previousTemplates,[name,templateString])=>{const compiledTemplate=hogan.compile(templateString,{asString:!1});return Object.assign(Object.assign({},previousTemplates),{[name]:compiledTemplate})},{});this.preCompiledTemplates=Object.assign(Object.assign(Object.assign({},defaultTemplates),compiledTemplates),compiledRawTemplates)}static compile(templateString){return hogan.compile(templateString,{asString:!1})}render(namespace,view,params,partials,indent){const templateKey=this.templateKey(namespace,view);try{return this.preCompiledTemplates[templateKey].render(params,partials,indent)}catch(_e){throw new Error(`Could not find template to render '${templateKey}'`)}}template(namespace,view){return this.preCompiledTemplates[this.templateKey(namespace,view)]}templateKey(namespace,view){return`${namespace}-${view}`}}const defaultDiff2HtmlConfig=Object.assign(Object.assign(Object.assign({},defaultLineByLineRendererConfig),defaultSideBySideRendererConfig),{outputFormat:"line-by-line",drawFileList:!0});function html(diffInput,configuration={}){const config=Object.assign(Object.assign({},defaultDiff2HtmlConfig),configuration),diffJson="string"==typeof diffInput?parse(diffInput,config):diffInput,hoganUtils=new HoganJsUtils(config),{colorScheme}=config,fileListRendererConfig={colorScheme};return(config.drawFileList?new FileListRenderer(hoganUtils,fileListRendererConfig).render(diffJson):"")+("side-by-side"===config.outputFormat?new SideBySideRenderer(hoganUtils,config).render(diffJson):new LineByLineRenderer(hoganUtils,config).render(diffJson))}},"./node_modules/diff2html/lib/types.js":(__unused_webpack_module,exports)=>{"use strict";var LineType,ColorSchemeType;exports.d7=void 0,function(LineType){LineType.INSERT="insert",LineType.DELETE="delete",LineType.CONTEXT="context"}(LineType||(LineType={})),function(ColorSchemeType){ColorSchemeType.AUTO="auto",ColorSchemeType.DARK="dark",ColorSchemeType.LIGHT="light"}(ColorSchemeType||(exports.d7=ColorSchemeType={}))},"./node_modules/hogan.js/lib/compiler.js":(__unused_webpack_module,exports)=>{!function(Hogan){var rIsWhitespace=/\S/,rQuot=/\"/g,rNewline=/\n/g,rCr=/\r/g,rSlash=/\\/g,rLineSep=/\u2028/,rParagraphSep=/\u2029/;function cleanTripleStache(token){"}"===token.n.substr(token.n.length-1)&&(token.n=token.n.substring(0,token.n.length-1))}function trim(s){return s.trim?s.trim():s.replace(/^\s*|\s*$/g,"")}function tagChange(tag,text,index){if(text.charAt(index)!=tag.charAt(0))return!1;for(var i=1,l=tag.length;i<l;i++)if(text.charAt(index+i)!=tag.charAt(i))return!1;return!0}Hogan.tags={"#":1,"^":2,"<":3,$:4,"/":5,"!":6,">":7,"=":8,_v:9,"{":10,"&":11,_t:12},Hogan.scan=function scan(text,delimiters){var len=text.length,state=0,tagType=null,tag=null,buf="",tokens=[],seenTag=!1,i=0,lineStart=0,otag="{{",ctag="}}";function addBuf(){buf.length>0&&(tokens.push({tag:"_t",text:new String(buf)}),buf="")}function filterLine(haveSeenTag,noNewLine){if(addBuf(),haveSeenTag&&function lineIsWhitespace(){for(var isAllWhitespace=!0,j=lineStart;j<tokens.length;j++)if(!(isAllWhitespace=Hogan.tags[tokens[j].tag]<Hogan.tags._v||"_t"==tokens[j].tag&&null===tokens[j].text.match(rIsWhitespace)))return!1;return isAllWhitespace}())for(var next,j=lineStart;j<tokens.length;j++)tokens[j].text&&((next=tokens[j+1])&&">"==next.tag&&(next.indent=tokens[j].text.toString()),tokens.splice(j,1));else noNewLine||tokens.push({tag:"\n"});seenTag=!1,lineStart=tokens.length}function changeDelimiters(text,index){var close="="+ctag,closeIndex=text.indexOf(close,index),delimiters=trim(text.substring(text.indexOf("=",index)+1,closeIndex)).split(" ");return otag=delimiters[0],ctag=delimiters[delimiters.length-1],closeIndex+close.length-1}for(delimiters&&(delimiters=delimiters.split(" "),otag=delimiters[0],ctag=delimiters[1]),i=0;i<len;i++)0==state?tagChange(otag,text,i)?(--i,addBuf(),state=1):"\n"==text.charAt(i)?filterLine(seenTag):buf+=text.charAt(i):1==state?(i+=otag.length-1,"="==(tagType=(tag=Hogan.tags[text.charAt(i+1)])?text.charAt(i+1):"_v")?(i=changeDelimiters(text,i),state=0):(tag&&i++,state=2),seenTag=i):tagChange(ctag,text,i)?(tokens.push({tag:tagType,n:trim(buf),otag,ctag,i:"/"==tagType?seenTag-otag.length:i+ctag.length}),buf="",i+=ctag.length-1,state=0,"{"==tagType&&("}}"==ctag?i++:cleanTripleStache(tokens[tokens.length-1]))):buf+=text.charAt(i);return filterLine(seenTag,!0),tokens};var allowedInSuper={_t:!0,"\n":!0,$:!0,"/":!0};function buildTree(tokens,kind,stack,customTags){var tail,instructions=[],opener=null,token=null;for(tail=stack[stack.length-1];tokens.length>0;){if(token=tokens.shift(),tail&&"<"==tail.tag&&!(token.tag in allowedInSuper))throw new Error("Illegal content in < super tag.");if(Hogan.tags[token.tag]<=Hogan.tags.$||isOpener(token,customTags))stack.push(token),token.nodes=buildTree(tokens,token.tag,stack,customTags);else{if("/"==token.tag){if(0===stack.length)throw new Error("Closing tag without opener: /"+token.n);if(opener=stack.pop(),token.n!=opener.n&&!isCloser(token.n,opener.n,customTags))throw new Error("Nesting error: "+opener.n+" vs. "+token.n);return opener.end=token.i,instructions}"\n"==token.tag&&(token.last=0==tokens.length||"\n"==tokens[0].tag)}instructions.push(token)}if(stack.length>0)throw new Error("missing closing tag: "+stack.pop().n);return instructions}function isOpener(token,tags){for(var i=0,l=tags.length;i<l;i++)if(tags[i].o==token.n)return token.tag="#",!0}function isCloser(close,open,tags){for(var i=0,l=tags.length;i<l;i++)if(tags[i].c==close&&tags[i].o==open)return!0}function stringifyPartials(codeObj){var partials=[];for(var key in codeObj.partials)partials.push('"'+esc(key)+'":{name:"'+esc(codeObj.partials[key].name)+'", '+stringifyPartials(codeObj.partials[key])+"}");return"partials: {"+partials.join(",")+"}, subs: "+function stringifySubstitutions(obj){var items=[];for(var key in obj)items.push('"'+esc(key)+'": function(c,p,t,i) {'+obj[key]+"}");return"{ "+items.join(",")+" }"}(codeObj.subs)}Hogan.stringify=function(codeObj,text,options){return"{code: function (c,p,i) { "+Hogan.wrapMain(codeObj.code)+" },"+stringifyPartials(codeObj)+"}"};var serialNo=0;function esc(s){return s.replace(rSlash,"\\\\").replace(rQuot,'\\"').replace(rNewline,"\\n").replace(rCr,"\\r").replace(rLineSep,"\\u2028").replace(rParagraphSep,"\\u2029")}function chooseMethod(s){return~s.indexOf(".")?"d":"f"}function createPartial(node,context){var sym="<"+(context.prefix||"")+node.n+serialNo++;return context.partials[sym]={name:node.n,partials:{}},context.code+='t.b(t.rp("'+esc(sym)+'",c,p,"'+(node.indent||"")+'"));',sym}function tripleStache(node,context){context.code+="t.b(t.t(t."+chooseMethod(node.n)+'("'+esc(node.n)+'",c,p,0)));'}function write(s){return"t.b("+s+");"}Hogan.generate=function(tree,text,options){serialNo=0;var context={code:"",subs:{},partials:{}};return Hogan.walk(tree,context),options.asString?this.stringify(context,text,options):this.makeTemplate(context,text,options)},Hogan.wrapMain=function(code){return'var t=this;t.b(i=i||"");'+code+"return t.fl();"},Hogan.template=Hogan.Template,Hogan.makeTemplate=function(codeObj,text,options){var template=this.makePartials(codeObj);return template.code=new Function("c","p","i",this.wrapMain(codeObj.code)),new this.template(template,text,this,options)},Hogan.makePartials=function(codeObj){var key,template={subs:{},partials:codeObj.partials,name:codeObj.name};for(key in template.partials)template.partials[key]=this.makePartials(template.partials[key]);for(key in codeObj.subs)template.subs[key]=new Function("c","p","t","i",codeObj.subs[key]);return template},Hogan.codegen={"#":function(node,context){context.code+="if(t.s(t."+chooseMethod(node.n)+'("'+esc(node.n)+'",c,p,1),c,p,0,'+node.i+","+node.end+',"'+node.otag+" "+node.ctag+'")){t.rs(c,p,function(c,p,t){',Hogan.walk(node.nodes,context),context.code+="});c.pop();}"},"^":function(node,context){context.code+="if(!t.s(t."+chooseMethod(node.n)+'("'+esc(node.n)+'",c,p,1),c,p,1,0,0,"")){',Hogan.walk(node.nodes,context),context.code+="};"},">":createPartial,"<":function(node,context){var ctx={partials:{},code:"",subs:{},inPartial:!0};Hogan.walk(node.nodes,ctx);var template=context.partials[createPartial(node,context)];template.subs=ctx.subs,template.partials=ctx.partials},$:function(node,context){var ctx={subs:{},code:"",partials:context.partials,prefix:node.n};Hogan.walk(node.nodes,ctx),context.subs[node.n]=ctx.code,context.inPartial||(context.code+='t.sub("'+esc(node.n)+'",c,p,i);')},"\n":function(node,context){context.code+=write('"\\n"'+(node.last?"":" + i"))},_v:function(node,context){context.code+="t.b(t.v(t."+chooseMethod(node.n)+'("'+esc(node.n)+'",c,p,0)));'},_t:function(node,context){context.code+=write('"'+esc(node.text)+'"')},"{":tripleStache,"&":tripleStache},Hogan.walk=function(nodelist,context){for(var func,i=0,l=nodelist.length;i<l;i++)(func=Hogan.codegen[nodelist[i].tag])&&func(nodelist[i],context);return context},Hogan.parse=function(tokens,text,options){return buildTree(tokens,0,[],(options=options||{}).sectionTags||[])},Hogan.cache={},Hogan.cacheKey=function(text,options){return[text,!!options.asString,!!options.disableLambda,options.delimiters,!!options.modelGet].join("||")},Hogan.compile=function(text,options){options=options||{};var key=Hogan.cacheKey(text,options),template=this.cache[key];if(template){var partials=template.partials;for(var name in partials)delete partials[name].instance;return template}return template=this.generate(this.parse(this.scan(text,options.delimiters),text,options),text,options),this.cache[key]=template}}(exports)},"./node_modules/hogan.js/lib/hogan.js":(module,__unused_webpack_exports,__webpack_require__)=>{var Hogan=__webpack_require__("./node_modules/hogan.js/lib/compiler.js");Hogan.Template=__webpack_require__("./node_modules/hogan.js/lib/template.js").Template,Hogan.template=Hogan.Template,module.exports=Hogan},"./node_modules/hogan.js/lib/template.js":(__unused_webpack_module,exports)=>{!function(Hogan){function findInScope(key,scope,doModelGet){var val;return scope&&"object"==typeof scope&&(void 0!==scope[key]?val=scope[key]:doModelGet&&scope.get&&"function"==typeof scope.get&&(val=scope.get(key))),val}Hogan.Template=function(codeObj,text,compiler,options){codeObj=codeObj||{},this.r=codeObj.code||this.r,this.c=compiler,this.options=options||{},this.text=text||"",this.partials=codeObj.partials||{},this.subs=codeObj.subs||{},this.buf=""},Hogan.Template.prototype={r:function(context,partials,indent){return""},v:function hoganEscape(str){return str=coerceToString(str),hChars.test(str)?str.replace(rAmp,"&amp;").replace(rLt,"&lt;").replace(rGt,"&gt;").replace(rApos,"&#39;").replace(rQuot,"&quot;"):str},t:coerceToString,render:function render(context,partials,indent){return this.ri([context],partials||{},indent)},ri:function(context,partials,indent){return this.r(context,partials,indent)},ep:function(symbol,partials){var partial=this.partials[symbol],template=partials[partial.name];if(partial.instance&&partial.base==template)return partial.instance;if("string"==typeof template){if(!this.c)throw new Error("No compiler available.");template=this.c.compile(template,this.options)}if(!template)return null;if(this.partials[symbol].base=template,partial.subs){for(key in partials.stackText||(partials.stackText={}),partial.subs)partials.stackText[key]||(partials.stackText[key]=void 0!==this.activeSub&&partials.stackText[this.activeSub]?partials.stackText[this.activeSub]:this.text);template=function createSpecializedPartial(instance,subs,partials,stackSubs,stackPartials,stackText){function PartialTemplate(){}function Substitutions(){}var key;PartialTemplate.prototype=instance,Substitutions.prototype=instance.subs;var partial=new PartialTemplate;for(key in partial.subs=new Substitutions,partial.subsText={},partial.buf="",stackSubs=stackSubs||{},partial.stackSubs=stackSubs,partial.subsText=stackText,subs)stackSubs[key]||(stackSubs[key]=subs[key]);for(key in stackSubs)partial.subs[key]=stackSubs[key];for(key in stackPartials=stackPartials||{},partial.stackPartials=stackPartials,partials)stackPartials[key]||(stackPartials[key]=partials[key]);for(key in stackPartials)partial.partials[key]=stackPartials[key];return partial}(template,partial.subs,partial.partials,this.stackSubs,this.stackPartials,partials.stackText)}return this.partials[symbol].instance=template,template},rp:function(symbol,context,partials,indent){var partial=this.ep(symbol,partials);return partial?partial.ri(context,partials,indent):""},rs:function(context,partials,section){var tail=context[context.length-1];if(isArray(tail))for(var i=0;i<tail.length;i++)context.push(tail[i]),section(context,partials,this),context.pop();else section(context,partials,this)},s:function(val,ctx,partials,inverted,start,end,tags){var pass;return(!isArray(val)||0!==val.length)&&("function"==typeof val&&(val=this.ms(val,ctx,partials,inverted,start,end,tags)),pass=!!val,!inverted&&pass&&ctx&&ctx.push("object"==typeof val?val:ctx[ctx.length-1]),pass)},d:function(key,ctx,partials,returnFound){var found,names=key.split("."),val=this.f(names[0],ctx,partials,returnFound),doModelGet=this.options.modelGet,cx=null;if("."===key&&isArray(ctx[ctx.length-2]))val=ctx[ctx.length-1];else for(var i=1;i<names.length;i++)void 0!==(found=findInScope(names[i],val,doModelGet))?(cx=val,val=found):val="";return!(returnFound&&!val)&&(returnFound||"function"!=typeof val||(ctx.push(cx),val=this.mv(val,ctx,partials),ctx.pop()),val)},f:function(key,ctx,partials,returnFound){for(var val=!1,found=!1,doModelGet=this.options.modelGet,i=ctx.length-1;i>=0;i--)if(void 0!==(val=findInScope(key,ctx[i],doModelGet))){found=!0;break}return found?(returnFound||"function"!=typeof val||(val=this.mv(val,ctx,partials)),val):!returnFound&&""},ls:function(func,cx,partials,text,tags){var oldTags=this.options.delimiters;return this.options.delimiters=tags,this.b(this.ct(coerceToString(func.call(cx,text)),cx,partials)),this.options.delimiters=oldTags,!1},ct:function(text,cx,partials){if(this.options.disableLambda)throw new Error("Lambda features disabled.");return this.c.compile(text,this.options).render(cx,partials)},b:function(s){this.buf+=s},fl:function(){var r=this.buf;return this.buf="",r},ms:function(func,ctx,partials,inverted,start,end,tags){var textSource,cx=ctx[ctx.length-1],result=func.call(cx);return"function"==typeof result?!!inverted||(textSource=this.activeSub&&this.subsText&&this.subsText[this.activeSub]?this.subsText[this.activeSub]:this.text,this.ls(result,cx,partials,textSource.substring(start,end),tags)):result},mv:function(func,ctx,partials){var cx=ctx[ctx.length-1],result=func.call(cx);return"function"==typeof result?this.ct(coerceToString(result.call(cx)),cx,partials):result},sub:function(name,context,partials,indent){var f=this.subs[name];f&&(this.activeSub=name,f(context,partials,this,indent),this.activeSub=!1)}};var rAmp=/&/g,rLt=/</g,rGt=/>/g,rApos=/\'/g,rQuot=/\"/g,hChars=/[&<>\"\']/;function coerceToString(val){return String(null==val?"":val)}var isArray=Array.isArray||function(a){return"[object Array]"===Object.prototype.toString.call(a)}}(exports)}}]);