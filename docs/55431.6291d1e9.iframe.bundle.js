"use strict";(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[55431],{"./src/components/atoms/VirtualizedRowsFixed/VirtualizedRowsFixed.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{VirtualizedRowsFixed:()=>VirtualizedRowsFixed});var _tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/react-virtual/dist/esm/index.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const VirtualizedRowsFixed=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(props=>{const{rowHeight,size,renderRow,classNameContainer,classNameRows,classNameRow,getRowKey}=props,parentRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),rowVirtualizer=(0,_tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_0__.Te)({count:size,estimateSize:(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>rowHeight,[rowHeight]),overscan:5,getScrollElement:()=>parentRef.current,getItemKey:getRowKey});return react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{ref:parentRef,style:{height:"100%",width:"100%",overflow:"auto"},className:classNameContainer},react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:classNameRows,style:{height:"".concat(rowVirtualizer.getTotalSize(),"px"),width:"100%",position:"relative"}},rowVirtualizer.getVirtualItems().map(virtualRow=>react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{key:virtualRow.key,style:{position:"absolute",top:0,left:0,width:"100%",height:"".concat(virtualRow.size,"px"),transform:"translateY(".concat(virtualRow.start,"px)")},className:classNameRow},renderRow(virtualRow.index)))))});VirtualizedRowsFixed.__docgenInfo={description:"",methods:[],displayName:"VirtualizedRowsFixed",props:{rowHeight:{required:!0,tsType:{name:"number"},description:""},size:{required:!0,tsType:{name:"number"},description:""},renderRow:{required:!0,tsType:{name:"signature",type:"function",raw:"(index: number) => ReactNode",signature:{arguments:[{type:{name:"number"},name:"index"}],return:{name:"ReactNode"}}},description:""},classNameContainer:{required:!1,tsType:{name:"string"},description:""},classNameRows:{required:!1,tsType:{name:"string"},description:""},classNameRow:{required:!1,tsType:{name:"string"},description:""},getRowKey:{required:!1,tsType:{name:"signature",type:"function",raw:"(index: number) => string",signature:{arguments:[{type:{name:"number"},name:"index"}],return:{name:"string"}}},description:""}}}}}]);