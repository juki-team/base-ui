(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[2442],{"./node_modules/comma-separated-tokens/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function parse(value){const tokens=[],input=String(value||"");let index=input.indexOf(","),start=0,end=!1;for(;!end;){-1===index&&(index=input.length,end=!0);const token=input.slice(start,index).trim();!token&&end||tokens.push(token),start=index+1,index=input.indexOf(",",start)}return tokens}function stringify(values,options){const settings=options||{};return(""===values[values.length-1]?[...values,""]:values).join((settings.padRight?" ":"")+","+(!1===settings.padLeft?"":" ")).trim()}__webpack_require__.d(__webpack_exports__,{A:()=>stringify,q:()=>parse})},"./node_modules/inline-style-parser/index.js":module=>{var COMMENT_REGEX=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,NEWLINE_REGEX=/\n/g,WHITESPACE_REGEX=/^\s*/,PROPERTY_REGEX=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,COLON_REGEX=/^:\s*/,VALUE_REGEX=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,SEMICOLON_REGEX=/^[;\s]*/,TRIM_REGEX=/^\s+|\s+$/g;function trim(str){return str?str.replace(TRIM_REGEX,""):""}module.exports=function(style,options){if("string"!=typeof style)throw new TypeError("First argument must be a string");if(!style)return[];options=options||{};var lineno=1,column=1;function updatePosition(str){var lines=str.match(NEWLINE_REGEX);lines&&(lineno+=lines.length);var i=str.lastIndexOf("\n");column=~i?str.length-i:column+str.length}function position(){var start={line:lineno,column};return function(node){return node.position=new Position(start),whitespace(),node}}function Position(start){this.start=start,this.end={line:lineno,column},this.source=options.source}Position.prototype.content=style;var errorsList=[];function error(msg){var err=new Error(options.source+":"+lineno+":"+column+": "+msg);if(err.reason=msg,err.filename=options.source,err.line=lineno,err.column=column,err.source=style,!options.silent)throw err;errorsList.push(err)}function match(re){var m=re.exec(style);if(m){var str=m[0];return updatePosition(str),style=style.slice(str.length),m}}function whitespace(){match(WHITESPACE_REGEX)}function comments(rules){var c;for(rules=rules||[];c=comment();)!1!==c&&rules.push(c);return rules}function comment(){var pos=position();if("/"==style.charAt(0)&&"*"==style.charAt(1)){for(var i=2;""!=style.charAt(i)&&("*"!=style.charAt(i)||"/"!=style.charAt(i+1));)++i;if(i+=2,""===style.charAt(i-1))return error("End of comment missing");var str=style.slice(2,i-2);return column+=2,updatePosition(str),style=style.slice(i),column+=2,pos({type:"comment",comment:str})}}function declaration(){var pos=position(),prop=match(PROPERTY_REGEX);if(prop){if(comment(),!match(COLON_REGEX))return error("property missing ':'");var val=match(VALUE_REGEX),ret=pos({type:"declaration",property:trim(prop[0].replace(COMMENT_REGEX,"")),value:val?trim(val[0].replace(COMMENT_REGEX,"")):""});return match(SEMICOLON_REGEX),ret}}return whitespace(),function declarations(){var decl,decls=[];for(comments(decls);decl=declaration();)!1!==decl&&(decls.push(decl),comments(decls));return decls}()}},"./node_modules/property-information/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{qy:()=>property_information_html,JW:()=>property_information_svg});class Schema{constructor(property,normal,space){this.normal=normal,this.property=property,space&&(this.space=space)}}function merge(definitions,space){const property={},normal={};for(const definition of definitions)Object.assign(property,definition.property),Object.assign(normal,definition.normal);return new Schema(property,normal,space)}Schema.prototype.normal={},Schema.prototype.property={},Schema.prototype.space=void 0;var normalize=__webpack_require__("./node_modules/property-information/lib/normalize.js"),defined_info=__webpack_require__("./node_modules/property-information/lib/util/defined-info.js");function create(definition){const properties={},normals={};for(const[property,value]of Object.entries(definition.properties)){const info=new defined_info.E(property,definition.transform(definition.attributes||{},property),value,definition.space);definition.mustUseProperty&&definition.mustUseProperty.includes(property)&&(info.mustUseProperty=!0),properties[property]=info,normals[(0,normalize.S)(property)]=property,normals[(0,normalize.S)(info.attribute)]=property}return new Schema(properties,normals,definition.space)}var types=__webpack_require__("./node_modules/property-information/lib/util/types.js");const aria=create({properties:{ariaActiveDescendant:null,ariaAtomic:types.booleanish,ariaAutoComplete:null,ariaBusy:types.booleanish,ariaChecked:types.booleanish,ariaColCount:types.number,ariaColIndex:types.number,ariaColSpan:types.number,ariaControls:types.spaceSeparated,ariaCurrent:null,ariaDescribedBy:types.spaceSeparated,ariaDetails:null,ariaDisabled:types.booleanish,ariaDropEffect:types.spaceSeparated,ariaErrorMessage:null,ariaExpanded:types.booleanish,ariaFlowTo:types.spaceSeparated,ariaGrabbed:types.booleanish,ariaHasPopup:null,ariaHidden:types.booleanish,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:types.spaceSeparated,ariaLevel:types.number,ariaLive:null,ariaModal:types.booleanish,ariaMultiLine:types.booleanish,ariaMultiSelectable:types.booleanish,ariaOrientation:null,ariaOwns:types.spaceSeparated,ariaPlaceholder:null,ariaPosInSet:types.number,ariaPressed:types.booleanish,ariaReadOnly:types.booleanish,ariaRelevant:null,ariaRequired:types.booleanish,ariaRoleDescription:types.spaceSeparated,ariaRowCount:types.number,ariaRowIndex:types.number,ariaRowSpan:types.number,ariaSelected:types.booleanish,ariaSetSize:types.number,ariaSort:null,ariaValueMax:types.number,ariaValueMin:types.number,ariaValueNow:types.number,ariaValueText:null,role:null},transform:(_,property)=>"role"===property?property:"aria-"+property.slice(4).toLowerCase()});function caseSensitiveTransform(attributes,attribute){return attribute in attributes?attributes[attribute]:attribute}function caseInsensitiveTransform(attributes,property){return caseSensitiveTransform(attributes,property.toLowerCase())}const html=create({attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:types.commaSeparated,acceptCharset:types.spaceSeparated,accessKey:types.spaceSeparated,action:null,allow:null,allowFullScreen:types.boolean,allowPaymentRequest:types.boolean,allowUserMedia:types.boolean,alt:null,as:null,async:types.boolean,autoCapitalize:null,autoComplete:types.spaceSeparated,autoFocus:types.boolean,autoPlay:types.boolean,blocking:types.spaceSeparated,capture:null,charSet:null,checked:types.boolean,cite:null,className:types.spaceSeparated,cols:types.number,colSpan:null,content:null,contentEditable:types.booleanish,controls:types.boolean,controlsList:types.spaceSeparated,coords:types.number|types.commaSeparated,crossOrigin:null,data:null,dateTime:null,decoding:null,default:types.boolean,defer:types.boolean,dir:null,dirName:null,disabled:types.boolean,download:types.overloadedBoolean,draggable:types.booleanish,encType:null,enterKeyHint:null,fetchPriority:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:types.boolean,formTarget:null,headers:types.spaceSeparated,height:types.number,hidden:types.overloadedBoolean,high:types.number,href:null,hrefLang:null,htmlFor:types.spaceSeparated,httpEquiv:types.spaceSeparated,id:null,imageSizes:null,imageSrcSet:null,inert:types.boolean,inputMode:null,integrity:null,is:null,isMap:types.boolean,itemId:null,itemProp:types.spaceSeparated,itemRef:types.spaceSeparated,itemScope:types.boolean,itemType:types.spaceSeparated,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:types.boolean,low:types.number,manifest:null,max:null,maxLength:types.number,media:null,method:null,min:null,minLength:types.number,multiple:types.boolean,muted:types.boolean,name:null,nonce:null,noModule:types.boolean,noValidate:types.boolean,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeToggle:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:types.boolean,optimum:types.number,pattern:null,ping:types.spaceSeparated,placeholder:null,playsInline:types.boolean,popover:null,popoverTarget:null,popoverTargetAction:null,poster:null,preload:null,readOnly:types.boolean,referrerPolicy:null,rel:types.spaceSeparated,required:types.boolean,reversed:types.boolean,rows:types.number,rowSpan:types.number,sandbox:types.spaceSeparated,scope:null,scoped:types.boolean,seamless:types.boolean,selected:types.boolean,shadowRootClonable:types.boolean,shadowRootDelegatesFocus:types.boolean,shadowRootMode:null,shape:null,size:types.number,sizes:null,slot:null,span:types.number,spellCheck:types.booleanish,src:null,srcDoc:null,srcLang:null,srcSet:null,start:types.number,step:null,style:null,tabIndex:types.number,target:null,title:null,translate:null,type:null,typeMustMatch:types.boolean,useMap:null,value:types.booleanish,width:types.number,wrap:null,writingSuggestions:null,align:null,aLink:null,archive:types.spaceSeparated,axis:null,background:null,bgColor:null,border:types.number,borderColor:null,bottomMargin:types.number,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:types.boolean,declare:types.boolean,event:null,face:null,frame:null,frameBorder:null,hSpace:types.number,leftMargin:types.number,link:null,longDesc:null,lowSrc:null,marginHeight:types.number,marginWidth:types.number,noResize:types.boolean,noHref:types.boolean,noShade:types.boolean,noWrap:types.boolean,object:null,profile:null,prompt:null,rev:null,rightMargin:types.number,rules:null,scheme:null,scrolling:types.booleanish,standby:null,summary:null,text:null,topMargin:types.number,valueType:null,version:null,vAlign:null,vLink:null,vSpace:types.number,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:types.boolean,disableRemotePlayback:types.boolean,prefix:null,property:null,results:types.number,security:null,unselectable:null},space:"html",transform:caseInsensitiveTransform}),svg=create({attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",transformOrigin:"transform-origin",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},properties:{about:types.commaOrSpaceSeparated,accentHeight:types.number,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:types.number,amplitude:types.number,arabicForm:null,ascent:types.number,attributeName:null,attributeType:null,azimuth:types.number,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:types.number,by:null,calcMode:null,capHeight:types.number,className:types.spaceSeparated,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:types.number,diffuseConstant:types.number,direction:null,display:null,dur:null,divisor:types.number,dominantBaseline:null,download:types.boolean,dx:null,dy:null,edgeMode:null,editable:null,elevation:types.number,enableBackground:null,end:null,event:null,exponent:types.number,externalResourcesRequired:null,fill:null,fillOpacity:types.number,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:types.commaSeparated,g2:types.commaSeparated,glyphName:types.commaSeparated,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:types.number,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:types.number,horizOriginX:types.number,horizOriginY:types.number,id:null,ideographic:types.number,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:types.number,k:types.number,k1:types.number,k2:types.number,k3:types.number,k4:types.number,kernelMatrix:types.commaOrSpaceSeparated,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:types.number,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:types.number,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:types.number,overlineThickness:types.number,paintOrder:null,panose1:null,path:null,pathLength:types.number,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:types.spaceSeparated,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:types.number,pointsAtY:types.number,pointsAtZ:types.number,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:types.commaOrSpaceSeparated,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:types.commaOrSpaceSeparated,rev:types.commaOrSpaceSeparated,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:types.commaOrSpaceSeparated,requiredFeatures:types.commaOrSpaceSeparated,requiredFonts:types.commaOrSpaceSeparated,requiredFormats:types.commaOrSpaceSeparated,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:types.number,specularExponent:types.number,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:types.number,strikethroughThickness:types.number,string:null,stroke:null,strokeDashArray:types.commaOrSpaceSeparated,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:types.number,strokeOpacity:types.number,strokeWidth:null,style:null,surfaceScale:types.number,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:types.commaOrSpaceSeparated,tabIndex:types.number,tableValues:null,target:null,targetX:types.number,targetY:types.number,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:types.commaOrSpaceSeparated,to:null,transform:null,transformOrigin:null,u1:null,u2:null,underlinePosition:types.number,underlineThickness:types.number,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:types.number,values:null,vAlphabetic:types.number,vMathematical:types.number,vectorEffect:null,vHanging:types.number,vIdeographic:types.number,version:null,vertAdvY:types.number,vertOriginX:types.number,vertOriginY:types.number,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:types.number,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null},space:"svg",transform:caseSensitiveTransform}),xlink=create({properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null},space:"xlink",transform:(_,property)=>"xlink:"+property.slice(5).toLowerCase()}),xmlns=create({attributes:{xmlnsxlink:"xmlns:xlink"},properties:{xmlnsXLink:null,xmlns:null},space:"xmlns",transform:caseInsensitiveTransform}),xml=create({properties:{xmlBase:null,xmlLang:null,xmlSpace:null},space:"xml",transform:(_,property)=>"xml:"+property.slice(3).toLowerCase()}),property_information_html=merge([aria,html,xlink,xmlns,xml],"html"),property_information_svg=merge([aria,svg,xlink,xmlns,xml],"svg")},"./node_modules/property-information/lib/find.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{I:()=>find});var _util_defined_info_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/property-information/lib/util/defined-info.js"),_util_info_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/property-information/lib/util/info.js"),_normalize_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/property-information/lib/normalize.js");const cap=/[A-Z]/g,dash=/-[a-z]/g,valid=/^data[-\w.:]+$/i;function find(schema,value){const normal=(0,_normalize_js__WEBPACK_IMPORTED_MODULE_2__.S)(value);let property=value,Type=_util_info_js__WEBPACK_IMPORTED_MODULE_1__.R;if(normal in schema.normal)return schema.property[schema.normal[normal]];if(normal.length>4&&"data"===normal.slice(0,4)&&valid.test(value)){if("-"===value.charAt(4)){const rest=value.slice(5).replace(dash,camelcase);property="data"+rest.charAt(0).toUpperCase()+rest.slice(1)}else{const rest=value.slice(4);if(!dash.test(rest)){let dashes=rest.replace(cap,kebab);"-"!==dashes.charAt(0)&&(dashes="-"+dashes),value="data"+dashes}}Type=_util_defined_info_js__WEBPACK_IMPORTED_MODULE_0__.E}return new Type(property,value)}function kebab($0){return"-"+$0.toLowerCase()}function camelcase($0){return $0.charAt(1).toUpperCase()}},"./node_modules/property-information/lib/normalize.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function normalize(value){return value.toLowerCase()}__webpack_require__.d(__webpack_exports__,{S:()=>normalize})},"./node_modules/property-information/lib/util/defined-info.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{E:()=>DefinedInfo});var _info_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/property-information/lib/util/info.js"),_types_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/property-information/lib/util/types.js");const checks=Object.keys(_types_js__WEBPACK_IMPORTED_MODULE_1__);class DefinedInfo extends _info_js__WEBPACK_IMPORTED_MODULE_0__.R{constructor(property,attribute,mask,space){let index=-1;if(super(property,attribute),mark(this,"space",space),"number"==typeof mask)for(;++index<checks.length;){const check=checks[index];mark(this,checks[index],(mask&_types_js__WEBPACK_IMPORTED_MODULE_1__[check])===_types_js__WEBPACK_IMPORTED_MODULE_1__[check])}}}function mark(values,key,value){value&&(values[key]=value)}DefinedInfo.prototype.defined=!0},"./node_modules/property-information/lib/util/info.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>Info});class Info{constructor(property,attribute){this.attribute=attribute,this.property=property}}Info.prototype.attribute="",Info.prototype.booleanish=!1,Info.prototype.boolean=!1,Info.prototype.commaOrSpaceSeparated=!1,Info.prototype.commaSeparated=!1,Info.prototype.defined=!1,Info.prototype.mustUseProperty=!1,Info.prototype.number=!1,Info.prototype.overloadedBoolean=!1,Info.prototype.property="",Info.prototype.spaceSeparated=!1,Info.prototype.space=void 0},"./node_modules/property-information/lib/util/types.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{boolean:()=>boolean,booleanish:()=>booleanish,commaOrSpaceSeparated:()=>commaOrSpaceSeparated,commaSeparated:()=>commaSeparated,number:()=>number,overloadedBoolean:()=>overloadedBoolean,spaceSeparated:()=>spaceSeparated});let powers=0;const boolean=increment(),booleanish=increment(),overloadedBoolean=increment(),number=increment(),spaceSeparated=increment(),commaSeparated=increment(),commaOrSpaceSeparated=increment();function increment(){return 2**++powers}},"./node_modules/react-markdown/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{oz:()=>Markdown});var lib_default=__webpack_require__("./node_modules/devlop/lib/default.js"),comma_separated_tokens=__webpack_require__("./node_modules/comma-separated-tokens/index.js");const nameRe=/^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,nameReJsx=/^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,emptyOptions={};function lib_name(name,options){return((options||emptyOptions).jsx?nameReJsx:nameRe).test(name)}const re=/[ \t\n\f\r]/g;function empty(value){return""===value.replace(re,"")}var property_information=__webpack_require__("./node_modules/property-information/index.js"),find=__webpack_require__("./node_modules/property-information/lib/find.js");const hastToReact={classId:"classID",dataType:"datatype",itemId:"itemID",strokeDashArray:"strokeDasharray",strokeDashOffset:"strokeDashoffset",strokeLineCap:"strokeLinecap",strokeLineJoin:"strokeLinejoin",strokeMiterLimit:"strokeMiterlimit",typeOf:"typeof",xLinkActuate:"xlinkActuate",xLinkArcRole:"xlinkArcrole",xLinkHref:"xlinkHref",xLinkRole:"xlinkRole",xLinkShow:"xlinkShow",xLinkTitle:"xlinkTitle",xLinkType:"xlinkType",xmlnsXLink:"xmlnsXlink"};var space_separated_tokens=__webpack_require__("./node_modules/space-separated-tokens/index.js"),cjs=__webpack_require__("./node_modules/style-to-js/cjs/index.js"),cjs_default=__webpack_require__.n(cjs);const pointEnd=point("end"),pointStart=point("start");function point(type){return function point(node){const point=node&&node.position&&node.position[type]||{};if("number"==typeof point.line&&point.line>0&&"number"==typeof point.column&&point.column>0)return{line:point.line,column:point.column,offset:"number"==typeof point.offset&&point.offset>-1?point.offset:void 0}}}var lib=__webpack_require__("./node_modules/vfile-message/lib/index.js");const own={}.hasOwnProperty,emptyMap=new Map,cap=/[A-Z]/g,tableElements=new Set(["table","tbody","thead","tfoot","tr"]),tableCellElement=new Set(["td","th"]),docs="https://github.com/syntax-tree/hast-util-to-jsx-runtime";function toJsxRuntime(tree,options){if(!options||void 0===options.Fragment)throw new TypeError("Expected `Fragment` in options");const filePath=options.filePath||void 0;let create;if(options.development){if("function"!=typeof options.jsxDEV)throw new TypeError("Expected `jsxDEV` in options when `development: true`");create=function developmentCreate(filePath,jsxDEV){return create;function create(node,type,props,key){const isStaticChildren=Array.isArray(props.children),point=pointStart(node);return jsxDEV(type,props,key,isStaticChildren,{columnNumber:point?point.column-1:void 0,fileName:filePath,lineNumber:point?point.line:void 0},void 0)}}(filePath,options.jsxDEV)}else{if("function"!=typeof options.jsx)throw new TypeError("Expected `jsx` in production options");if("function"!=typeof options.jsxs)throw new TypeError("Expected `jsxs` in production options");create=function productionCreate(_,jsx,jsxs){return create;function create(_,type,props,key){const fn=Array.isArray(props.children)?jsxs:jsx;return key?fn(type,props,key):fn(type,props)}}(0,options.jsx,options.jsxs)}const state={Fragment:options.Fragment,ancestors:[],components:options.components||{},create,elementAttributeNameCase:options.elementAttributeNameCase||"react",evaluater:options.createEvaluater?options.createEvaluater():void 0,filePath,ignoreInvalidStyle:options.ignoreInvalidStyle||!1,passKeys:!1!==options.passKeys,passNode:options.passNode||!1,schema:"svg"===options.space?property_information.JW:property_information.qy,stylePropertyNameCase:options.stylePropertyNameCase||"dom",tableCellAlignToStyle:!1!==options.tableCellAlignToStyle},result=one(state,tree,void 0);return result&&"string"!=typeof result?result:state.create(tree,state.Fragment,{children:result||void 0},void 0)}function one(state,node,key){return"element"===node.type?function lib_element(state,node,key){const parentSchema=state.schema;let schema=parentSchema;"svg"===node.tagName.toLowerCase()&&"html"===parentSchema.space&&(schema=property_information.JW,state.schema=schema);state.ancestors.push(node);const type=findComponentFromName(state,node.tagName,!1),props=function createElementProps(state,node){const props={};let alignValue,prop;for(prop in node.properties)if("children"!==prop&&own.call(node.properties,prop)){const result=createProperty(state,prop,node.properties[prop]);if(result){const[key,value]=result;state.tableCellAlignToStyle&&"align"===key&&"string"==typeof value&&tableCellElement.has(node.tagName)?alignValue=value:props[key]=value}}if(alignValue){(props.style||(props.style={}))["css"===state.stylePropertyNameCase?"text-align":"textAlign"]=alignValue}return props}(state,node);let children=createChildren(state,node);tableElements.has(node.tagName)&&(children=children.filter(function(child){return"string"!=typeof child||!function whitespace(thing){return"object"==typeof thing?"text"===thing.type&&empty(thing.value):empty(thing)}(child)}));return addNode(state,props,type,node),addChildren(props,children),state.ancestors.pop(),state.schema=parentSchema,state.create(node,type,props,key)}(state,node,key):"mdxFlowExpression"===node.type||"mdxTextExpression"===node.type?function mdxExpression(state,node){if(node.data&&node.data.estree&&state.evaluater){const expression=node.data.estree.body[0];return(0,lib_default.ok)("ExpressionStatement"===expression.type),state.evaluater.evaluateExpression(expression.expression)}crashEstree(state,node.position)}(state,node):"mdxJsxFlowElement"===node.type||"mdxJsxTextElement"===node.type?function mdxJsxElement(state,node,key){const parentSchema=state.schema;let schema=parentSchema;"svg"===node.name&&"html"===parentSchema.space&&(schema=property_information.JW,state.schema=schema);state.ancestors.push(node);const type=null===node.name?state.Fragment:findComponentFromName(state,node.name,!0),props=function createJsxElementProps(state,node){const props={};for(const attribute of node.attributes)if("mdxJsxExpressionAttribute"===attribute.type)if(attribute.data&&attribute.data.estree&&state.evaluater){const expression=attribute.data.estree.body[0];(0,lib_default.ok)("ExpressionStatement"===expression.type);const objectExpression=expression.expression;(0,lib_default.ok)("ObjectExpression"===objectExpression.type);const property=objectExpression.properties[0];(0,lib_default.ok)("SpreadElement"===property.type),Object.assign(props,state.evaluater.evaluateExpression(property.argument))}else crashEstree(state,node.position);else{const name=attribute.name;let value;if(attribute.value&&"object"==typeof attribute.value)if(attribute.value.data&&attribute.value.data.estree&&state.evaluater){const expression=attribute.value.data.estree.body[0];(0,lib_default.ok)("ExpressionStatement"===expression.type),value=state.evaluater.evaluateExpression(expression.expression)}else crashEstree(state,node.position);else value=null===attribute.value||attribute.value;props[name]=value}return props}(state,node),children=createChildren(state,node);return addNode(state,props,type,node),addChildren(props,children),state.ancestors.pop(),state.schema=parentSchema,state.create(node,type,props,key)}(state,node,key):"mdxjsEsm"===node.type?function mdxEsm(state,node){if(node.data&&node.data.estree&&state.evaluater)return state.evaluater.evaluateProgram(node.data.estree);crashEstree(state,node.position)}(state,node):"root"===node.type?function root(state,node,key){const props={};return addChildren(props,createChildren(state,node)),state.create(node,state.Fragment,props,key)}(state,node,key):"text"===node.type?function lib_text(_,node){return node.value}(0,node):void 0}function addNode(state,props,type,node){"string"!=typeof type&&type!==state.Fragment&&state.passNode&&(props.node=node)}function addChildren(props,children){if(children.length>0){const value=children.length>1?children:children[0];value&&(props.children=value)}}function createChildren(state,node){const children=[];let index=-1;const countsByName=state.passKeys?new Map:emptyMap;for(;++index<node.children.length;){const child=node.children[index];let key;if(state.passKeys){const name="element"===child.type?child.tagName:"mdxJsxFlowElement"===child.type||"mdxJsxTextElement"===child.type?child.name:void 0;if(name){const count=countsByName.get(name)||0;key=name+"-"+count,countsByName.set(name,count+1)}}const result=one(state,child,key);void 0!==result&&children.push(result)}return children}function createProperty(state,prop,value){const info=(0,find.I)(state.schema,prop);if(!(null==value||"number"==typeof value&&Number.isNaN(value))){if(Array.isArray(value)&&(value=info.commaSeparated?(0,comma_separated_tokens.A)(value):(0,space_separated_tokens.A)(value)),"style"===info.property){let styleObject="object"==typeof value?value:function parseStyle(state,value){try{return cjs_default()(value,{reactCompat:!0})}catch(error){if(state.ignoreInvalidStyle)return{};const cause=error,message=new lib.o("Cannot parse `style` attribute",{ancestors:state.ancestors,cause,ruleId:"style",source:"hast-util-to-jsx-runtime"});throw message.file=state.filePath||void 0,message.url=docs+"#cannot-parse-style-attribute",message}}(state,String(value));return"css"===state.stylePropertyNameCase&&(styleObject=function transformStylesToCssCasing(domCasing){const cssCasing={};let from;for(from in domCasing)own.call(domCasing,from)&&(cssCasing[transformStyleToCssCasing(from)]=domCasing[from]);return cssCasing}(styleObject)),["style",styleObject]}return["react"===state.elementAttributeNameCase&&info.space?hastToReact[info.property]||info.property:info.attribute,value]}}function findComponentFromName(state,name,allowExpression){let result;if(allowExpression)if(name.includes(".")){const identifiers=name.split(".");let node,index=-1;for(;++index<identifiers.length;){const prop=lib_name(identifiers[index])?{type:"Identifier",name:identifiers[index]}:{type:"Literal",value:identifiers[index]};node=node?{type:"MemberExpression",object:node,property:prop,computed:Boolean(index&&"Literal"===prop.type),optional:!1}:prop}(0,lib_default.ok)(node,"always a result"),result=node}else result=lib_name(name)&&!/^[a-z]/.test(name)?{type:"Identifier",name}:{type:"Literal",value:name};else result={type:"Literal",value:name};if("Literal"===result.type){const name=result.value;return own.call(state.components,name)?state.components[name]:name}if(state.evaluater)return state.evaluater.evaluateExpression(result);crashEstree(state)}function crashEstree(state,place){const message=new lib.o("Cannot handle MDX estrees without `createEvaluater`",{ancestors:state.ancestors,place,ruleId:"mdx-estree",source:"hast-util-to-jsx-runtime"});throw message.file=state.filePath||void 0,message.url=docs+"#cannot-handle-mdx-estrees-without-createevaluater",message}function transformStyleToCssCasing(from){let to=from.replace(cap,toDash);return"ms-"===to.slice(0,3)&&(to="-"+to),to}function toDash($0){return"-"+$0.toLowerCase()}const urlAttributes={action:["form"],cite:["blockquote","del","ins","q"],data:["object"],formAction:["button","input"],href:["a","area","base","link"],icon:["menuitem"],itemId:null,manifest:["html"],ping:["a","area"],poster:["video"],src:["audio","embed","iframe","img","input","script","source","track","video"]};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),remark_parse_lib=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/remark-parse/lib/index.js"));const env="object"==typeof self?self:globalThis,deserialize=serialized=>(($,_)=>{const as=(out,index)=>($.set(index,out),out),unpair=index=>{if($.has(index))return $.get(index);const[type,value]=_[index];switch(type){case 0:case-1:return as(value,index);case 1:{const arr=as([],index);for(const index of value)arr.push(unpair(index));return arr}case 2:{const object=as({},index);for(const[key,index]of value)object[unpair(key)]=unpair(index);return object}case 3:return as(new Date(value),index);case 4:{const{source,flags}=value;return as(new RegExp(source,flags),index)}case 5:{const map=as(new Map,index);for(const[key,index]of value)map.set(unpair(key),unpair(index));return map}case 6:{const set=as(new Set,index);for(const index of value)set.add(unpair(index));return set}case 7:{const{name,message}=value;return as(new env[name](message),index)}case 8:return as(BigInt(value),index);case"BigInt":return as(Object(BigInt(value)),index);case"ArrayBuffer":return as(new Uint8Array(value).buffer,value);case"DataView":{const{buffer}=new Uint8Array(value);return as(new DataView(buffer),value)}}return as(new env[type](value),index)};return unpair})(new Map,serialized)(0),{toString:serialize_toString}={},{keys}=Object,typeOf=value=>{const type=typeof value;if("object"!==type||!value)return[0,type];const asString=serialize_toString.call(value).slice(8,-1);switch(asString){case"Array":return[1,""];case"Object":return[2,""];case"Date":return[3,""];case"RegExp":return[4,""];case"Map":return[5,""];case"Set":return[6,""];case"DataView":return[1,asString]}return asString.includes("Array")?[1,asString]:asString.includes("Error")?[7,asString]:[2,asString]},shouldSkip=([TYPE,type])=>0===TYPE&&("function"===type||"symbol"===type),serialize=(value,{json,lossy}={})=>{const _=[];return((strict,json,$,_)=>{const as=(out,value)=>{const index=_.push(out)-1;return $.set(value,index),index},pair=value=>{if($.has(value))return $.get(value);let[TYPE,type]=typeOf(value);switch(TYPE){case 0:{let entry=value;switch(type){case"bigint":TYPE=8,entry=value.toString();break;case"function":case"symbol":if(strict)throw new TypeError("unable to serialize "+type);entry=null;break;case"undefined":return as([-1],value)}return as([TYPE,entry],value)}case 1:{if(type){let spread=value;return"DataView"===type?spread=new Uint8Array(value.buffer):"ArrayBuffer"===type&&(spread=new Uint8Array(value)),as([type,[...spread]],value)}const arr=[],index=as([TYPE,arr],value);for(const entry of value)arr.push(pair(entry));return index}case 2:{if(type)switch(type){case"BigInt":return as([type,value.toString()],value);case"Boolean":case"Number":case"String":return as([type,value.valueOf()],value)}if(json&&"toJSON"in value)return pair(value.toJSON());const entries=[],index=as([TYPE,entries],value);for(const key of keys(value))!strict&&shouldSkip(typeOf(value[key]))||entries.push([pair(key),pair(value[key])]);return index}case 3:return as([TYPE,value.toISOString()],value);case 4:{const{source,flags}=value;return as([TYPE,{source,flags}],value)}case 5:{const entries=[],index=as([TYPE,entries],value);for(const[key,entry]of value)(strict||!shouldSkip(typeOf(key))&&!shouldSkip(typeOf(entry)))&&entries.push([pair(key),pair(entry)]);return index}case 6:{const entries=[],index=as([TYPE,entries],value);for(const entry of value)!strict&&shouldSkip(typeOf(entry))||entries.push(pair(entry));return index}}const{message}=value;return as([TYPE,{name:type,message}],value)};return pair})(!(json||lossy),!!json,new Map,_)(value),_},esm="function"==typeof structuredClone?(any,options)=>options&&("json"in options||"lossy"in options)?deserialize(serialize(any,options)):structuredClone(any):(any,options)=>deserialize(serialize(any,options));var micromark_util_character=__webpack_require__("./node_modules/micromark-util-character/index.js");function normalizeUri(value){const result=[];let index=-1,start=0,skip=0;for(;++index<value.length;){const code=value.charCodeAt(index);let replace="";if(37===code&&(0,micromark_util_character.lV)(value.charCodeAt(index+1))&&(0,micromark_util_character.lV)(value.charCodeAt(index+2)))skip=2;else if(code<128)/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))||(replace=String.fromCharCode(code));else if(code>55295&&code<57344){const next=value.charCodeAt(index+1);code<56320&&next>56319&&next<57344?(replace=String.fromCharCode(code,next),skip=1):replace="�"}else replace=String.fromCharCode(code);replace&&(result.push(value.slice(start,index),encodeURIComponent(replace)),start=index+skip+1,replace=""),skip&&(index+=skip,skip=0)}return result.join("")+value.slice(start)}function defaultFootnoteBackContent(_,rereferenceIndex){const result=[{type:"text",value:"↩"}];return rereferenceIndex>1&&result.push({type:"element",tagName:"sup",properties:{},children:[{type:"text",value:String(rereferenceIndex)}]}),result}function defaultFootnoteBackLabel(referenceIndex,rereferenceIndex){return"Back to reference "+(referenceIndex+1)+(rereferenceIndex>1?"-"+rereferenceIndex:"")}var unist_util_visit_lib=__webpack_require__("./node_modules/unist-util-visit/lib/index.js");function revert(state,node){const subtype=node.referenceType;let suffix="]";if("collapsed"===subtype?suffix+="[]":"full"===subtype&&(suffix+="["+(node.label||node.identifier)+"]"),"imageReference"===node.type)return[{type:"text",value:"!["+node.alt+suffix}];const contents=state.all(node),head=contents[0];head&&"text"===head.type?head.value="["+head.value:contents.unshift({type:"text",value:"["});const tail=contents[contents.length-1];return tail&&"text"===tail.type?tail.value+=suffix:contents.push({type:"text",value:suffix}),contents}function listItemLoose(node){const spread=node.spread;return null==spread?node.children.length>1:spread}function trimLines(value){const source=String(value),search=/\r?\n|\r/g;let match=search.exec(source),last=0;const lines=[];for(;match;)lines.push(trimLine(source.slice(last,match.index),last>0,!0),match[0]),last=match.index+match[0].length,match=search.exec(source);return lines.push(trimLine(source.slice(last),last>0,!1)),lines.join("")}function trimLine(value,start,end){let startIndex=0,endIndex=value.length;if(start){let code=value.codePointAt(startIndex);for(;9===code||32===code;)startIndex++,code=value.codePointAt(startIndex)}if(end){let code=value.codePointAt(endIndex-1);for(;9===code||32===code;)endIndex--,code=value.codePointAt(endIndex-1)}return endIndex>startIndex?value.slice(startIndex,endIndex):""}const handlers_handlers={blockquote:function blockquote(state,node){const result={type:"element",tagName:"blockquote",properties:{},children:state.wrap(state.all(node),!0)};return state.patch(node,result),state.applyData(node,result)},break:function hardBreak(state,node){const result={type:"element",tagName:"br",properties:{},children:[]};return state.patch(node,result),[state.applyData(node,result),{type:"text",value:"\n"}]},code:function code(state,node){const value=node.value?node.value+"\n":"",properties={};node.lang&&(properties.className=["language-"+node.lang]);let result={type:"element",tagName:"code",properties,children:[{type:"text",value}]};return node.meta&&(result.data={meta:node.meta}),state.patch(node,result),result=state.applyData(node,result),result={type:"element",tagName:"pre",properties:{},children:[result]},state.patch(node,result),result},delete:function strikethrough(state,node){const result={type:"element",tagName:"del",properties:{},children:state.all(node)};return state.patch(node,result),state.applyData(node,result)},emphasis:function emphasis(state,node){const result={type:"element",tagName:"em",properties:{},children:state.all(node)};return state.patch(node,result),state.applyData(node,result)},footnoteReference:function footnoteReference(state,node){const clobberPrefix="string"==typeof state.options.clobberPrefix?state.options.clobberPrefix:"user-content-",id=String(node.identifier).toUpperCase(),safeId=normalizeUri(id.toLowerCase()),index=state.footnoteOrder.indexOf(id);let counter,reuseCounter=state.footnoteCounts.get(id);void 0===reuseCounter?(reuseCounter=0,state.footnoteOrder.push(id),counter=state.footnoteOrder.length):counter=index+1,reuseCounter+=1,state.footnoteCounts.set(id,reuseCounter);const link={type:"element",tagName:"a",properties:{href:"#"+clobberPrefix+"fn-"+safeId,id:clobberPrefix+"fnref-"+safeId+(reuseCounter>1?"-"+reuseCounter:""),dataFootnoteRef:!0,ariaDescribedBy:["footnote-label"]},children:[{type:"text",value:String(counter)}]};state.patch(node,link);const sup={type:"element",tagName:"sup",properties:{},children:[link]};return state.patch(node,sup),state.applyData(node,sup)},heading:function heading(state,node){const result={type:"element",tagName:"h"+node.depth,properties:{},children:state.all(node)};return state.patch(node,result),state.applyData(node,result)},html:function html(state,node){if(state.options.allowDangerousHtml){const result={type:"raw",value:node.value};return state.patch(node,result),state.applyData(node,result)}},imageReference:function imageReference(state,node){const id=String(node.identifier).toUpperCase(),definition=state.definitionById.get(id);if(!definition)return revert(state,node);const properties={src:normalizeUri(definition.url||""),alt:node.alt};null!==definition.title&&void 0!==definition.title&&(properties.title=definition.title);const result={type:"element",tagName:"img",properties,children:[]};return state.patch(node,result),state.applyData(node,result)},image:function image_image(state,node){const properties={src:normalizeUri(node.url)};null!==node.alt&&void 0!==node.alt&&(properties.alt=node.alt),null!==node.title&&void 0!==node.title&&(properties.title=node.title);const result={type:"element",tagName:"img",properties,children:[]};return state.patch(node,result),state.applyData(node,result)},inlineCode:function inlineCode(state,node){const text={type:"text",value:node.value.replace(/\r?\n|\r/g," ")};state.patch(node,text);const result={type:"element",tagName:"code",properties:{},children:[text]};return state.patch(node,result),state.applyData(node,result)},linkReference:function linkReference(state,node){const id=String(node.identifier).toUpperCase(),definition=state.definitionById.get(id);if(!definition)return revert(state,node);const properties={href:normalizeUri(definition.url||"")};null!==definition.title&&void 0!==definition.title&&(properties.title=definition.title);const result={type:"element",tagName:"a",properties,children:state.all(node)};return state.patch(node,result),state.applyData(node,result)},link:function link_link(state,node){const properties={href:normalizeUri(node.url)};null!==node.title&&void 0!==node.title&&(properties.title=node.title);const result={type:"element",tagName:"a",properties,children:state.all(node)};return state.patch(node,result),state.applyData(node,result)},listItem:function listItem(state,node,parent){const results=state.all(node),loose=parent?function listLoose(node){let loose=!1;if("list"===node.type){loose=node.spread||!1;const children=node.children;let index=-1;for(;!loose&&++index<children.length;)loose=listItemLoose(children[index])}return loose}(parent):listItemLoose(node),properties={},children=[];if("boolean"==typeof node.checked){const head=results[0];let paragraph;head&&"element"===head.type&&"p"===head.tagName?paragraph=head:(paragraph={type:"element",tagName:"p",properties:{},children:[]},results.unshift(paragraph)),paragraph.children.length>0&&paragraph.children.unshift({type:"text",value:" "}),paragraph.children.unshift({type:"element",tagName:"input",properties:{type:"checkbox",checked:node.checked,disabled:!0},children:[]}),properties.className=["task-list-item"]}let index=-1;for(;++index<results.length;){const child=results[index];(loose||0!==index||"element"!==child.type||"p"!==child.tagName)&&children.push({type:"text",value:"\n"}),"element"!==child.type||"p"!==child.tagName||loose?children.push(child):children.push(...child.children)}const tail=results[results.length-1];tail&&(loose||"element"!==tail.type||"p"!==tail.tagName)&&children.push({type:"text",value:"\n"});const result={type:"element",tagName:"li",properties,children};return state.patch(node,result),state.applyData(node,result)},list:function list(state,node){const properties={},results=state.all(node);let index=-1;for("number"==typeof node.start&&1!==node.start&&(properties.start=node.start);++index<results.length;){const child=results[index];if("element"===child.type&&"li"===child.tagName&&child.properties&&Array.isArray(child.properties.className)&&child.properties.className.includes("task-list-item")){properties.className=["contains-task-list"];break}}const result={type:"element",tagName:node.ordered?"ol":"ul",properties,children:state.wrap(results,!0)};return state.patch(node,result),state.applyData(node,result)},paragraph:function paragraph(state,node){const result={type:"element",tagName:"p",properties:{},children:state.all(node)};return state.patch(node,result),state.applyData(node,result)},root:function root_root(state,node){const result={type:"root",children:state.wrap(state.all(node))};return state.patch(node,result),state.applyData(node,result)},strong:function strong(state,node){const result={type:"element",tagName:"strong",properties:{},children:state.all(node)};return state.patch(node,result),state.applyData(node,result)},table:function table(state,node){const rows=state.all(node),firstRow=rows.shift(),tableContent=[];if(firstRow){const head={type:"element",tagName:"thead",properties:{},children:state.wrap([firstRow],!0)};state.patch(node.children[0],head),tableContent.push(head)}if(rows.length>0){const body={type:"element",tagName:"tbody",properties:{},children:state.wrap(rows,!0)},start=pointStart(node.children[1]),end=pointEnd(node.children[node.children.length-1]);start&&end&&(body.position={start,end}),tableContent.push(body)}const result={type:"element",tagName:"table",properties:{},children:state.wrap(tableContent,!0)};return state.patch(node,result),state.applyData(node,result)},tableCell:function tableCell(state,node){const result={type:"element",tagName:"td",properties:{},children:state.all(node)};return state.patch(node,result),state.applyData(node,result)},tableRow:function tableRow(state,node,parent){const siblings=parent?parent.children:void 0,tagName=0===(siblings?siblings.indexOf(node):1)?"th":"td",align=parent&&"table"===parent.type?parent.align:void 0,length=align?align.length:node.children.length;let cellIndex=-1;const cells=[];for(;++cellIndex<length;){const cell=node.children[cellIndex],properties={},alignValue=align?align[cellIndex]:void 0;alignValue&&(properties.align=alignValue);let result={type:"element",tagName,properties,children:[]};cell&&(result.children=state.all(cell),state.patch(cell,result),result=state.applyData(cell,result)),cells.push(result)}const result={type:"element",tagName:"tr",properties:{},children:state.wrap(cells,!0)};return state.patch(node,result),state.applyData(node,result)},text:function text_text(state,node){const result={type:"text",value:trimLines(String(node.value))};return state.patch(node,result),state.applyData(node,result)},thematicBreak:function thematicBreak(state,node){const result={type:"element",tagName:"hr",properties:{},children:[]};return state.patch(node,result),state.applyData(node,result)},toml:ignore,yaml:ignore,definition:ignore,footnoteDefinition:ignore};function ignore(){}const state_own={}.hasOwnProperty,state_emptyOptions={};function patch(from,to){from.position&&(to.position=function position(node){const start=pointStart(node),end=pointEnd(node);if(start&&end)return{start,end}}(from))}function applyData(from,to){let result=to;if(from&&from.data){const hName=from.data.hName,hChildren=from.data.hChildren,hProperties=from.data.hProperties;if("string"==typeof hName)if("element"===result.type)result.tagName=hName;else{result={type:"element",tagName:hName,properties:{},children:"children"in result?result.children:[result]}}"element"===result.type&&hProperties&&Object.assign(result.properties,esm(hProperties)),"children"in result&&result.children&&null!=hChildren&&(result.children=hChildren)}return result}function defaultUnknownHandler(state,node){const data=node.data||{},result=!("value"in node)||state_own.call(data,"hProperties")||state_own.call(data,"hChildren")?{type:"element",tagName:"div",properties:{},children:state.all(node)}:{type:"text",value:node.value};return state.patch(node,result),state.applyData(node,result)}function wrap(nodes,loose){const result=[];let index=-1;for(loose&&result.push({type:"text",value:"\n"});++index<nodes.length;)index&&result.push({type:"text",value:"\n"}),result.push(nodes[index]);return loose&&nodes.length>0&&result.push({type:"text",value:"\n"}),result}function trimMarkdownSpaceStart(value){let index=0,code=value.charCodeAt(index);for(;9===code||32===code;)index++,code=value.charCodeAt(index);return value.slice(index)}function toHast(tree,options){const state=function createState(tree,options){const settings=options||state_emptyOptions,definitionById=new Map,footnoteById=new Map,footnoteCounts=new Map,handlers={...handlers_handlers,...settings.handlers},state={all:function all(parent){const values=[];if("children"in parent){const nodes=parent.children;let index=-1;for(;++index<nodes.length;){const result=state.one(nodes[index],parent);if(result){if(index&&"break"===nodes[index-1].type&&(Array.isArray(result)||"text"!==result.type||(result.value=trimMarkdownSpaceStart(result.value)),!Array.isArray(result)&&"element"===result.type)){const head=result.children[0];head&&"text"===head.type&&(head.value=trimMarkdownSpaceStart(head.value))}Array.isArray(result)?values.push(...result):values.push(result)}}}return values},applyData,definitionById,footnoteById,footnoteCounts,footnoteOrder:[],handlers,one:function one(node,parent){const type=node.type,handle=state.handlers[type];if(state_own.call(state.handlers,type)&&handle)return handle(state,node,parent);if(state.options.passThrough&&state.options.passThrough.includes(type)){if("children"in node){const{children,...shallow}=node,result=esm(shallow);return result.children=state.all(node),result}return esm(node)}return(state.options.unknownHandler||defaultUnknownHandler)(state,node,parent)},options:settings,patch,wrap};return(0,unist_util_visit_lib.YR)(tree,function(node){if("definition"===node.type||"footnoteDefinition"===node.type){const map="definition"===node.type?definitionById:footnoteById,id=String(node.identifier).toUpperCase();map.has(id)||map.set(id,node)}}),state}(tree,options),node=state.one(tree,void 0),foot=function footer(state){const clobberPrefix="string"==typeof state.options.clobberPrefix?state.options.clobberPrefix:"user-content-",footnoteBackContent=state.options.footnoteBackContent||defaultFootnoteBackContent,footnoteBackLabel=state.options.footnoteBackLabel||defaultFootnoteBackLabel,footnoteLabel=state.options.footnoteLabel||"Footnotes",footnoteLabelTagName=state.options.footnoteLabelTagName||"h2",footnoteLabelProperties=state.options.footnoteLabelProperties||{className:["sr-only"]},listItems=[];let referenceIndex=-1;for(;++referenceIndex<state.footnoteOrder.length;){const definition=state.footnoteById.get(state.footnoteOrder[referenceIndex]);if(!definition)continue;const content=state.all(definition),id=String(definition.identifier).toUpperCase(),safeId=normalizeUri(id.toLowerCase());let rereferenceIndex=0;const backReferences=[],counts=state.footnoteCounts.get(id);for(;void 0!==counts&&++rereferenceIndex<=counts;){backReferences.length>0&&backReferences.push({type:"text",value:" "});let children="string"==typeof footnoteBackContent?footnoteBackContent:footnoteBackContent(referenceIndex,rereferenceIndex);"string"==typeof children&&(children={type:"text",value:children}),backReferences.push({type:"element",tagName:"a",properties:{href:"#"+clobberPrefix+"fnref-"+safeId+(rereferenceIndex>1?"-"+rereferenceIndex:""),dataFootnoteBackref:"",ariaLabel:"string"==typeof footnoteBackLabel?footnoteBackLabel:footnoteBackLabel(referenceIndex,rereferenceIndex),className:["data-footnote-backref"]},children:Array.isArray(children)?children:[children]})}const tail=content[content.length-1];if(tail&&"element"===tail.type&&"p"===tail.tagName){const tailTail=tail.children[tail.children.length-1];tailTail&&"text"===tailTail.type?tailTail.value+=" ":tail.children.push({type:"text",value:" "}),tail.children.push(...backReferences)}else content.push(...backReferences);const listItem={type:"element",tagName:"li",properties:{id:clobberPrefix+"fn-"+safeId},children:state.wrap(content,!0)};state.patch(definition,listItem),listItems.push(listItem)}if(0!==listItems.length)return{type:"element",tagName:"section",properties:{dataFootnotes:!0,className:["footnotes"]},children:[{type:"element",tagName:footnoteLabelTagName,properties:{...esm(footnoteLabelProperties),id:"footnote-label"},children:[{type:"text",value:footnoteLabel}]},{type:"text",value:"\n"},{type:"element",tagName:"ol",properties:{},children:state.wrap(listItems,!0)},{type:"text",value:"\n"}]}}(state),result=Array.isArray(node)?{type:"root",children:node}:node||{type:"root",children:[]};return foot&&((0,lib_default.ok)("children"in result),result.children.push({type:"text",value:"\n"},foot)),result}function remarkRehype(destination,options){return destination&&"run"in destination?async function(tree,file){const hastTree=toHast(tree,{file,...options});await destination.run(hastTree,file)}:function(tree,file){return toHast(tree,{file,...destination||options})}}var unified_lib=__webpack_require__("./node_modules/unified/lib/index.js"),vfile_lib=__webpack_require__("./node_modules/vfile/lib/index.js");const changelog="https://github.com/remarkjs/react-markdown/blob/main/changelog.md",emptyPlugins=[],emptyRemarkRehypeOptions={allowDangerousHtml:!0},safeProtocol=/^(https?|ircs?|mailto|xmpp)$/i,deprecations=[{from:"astPlugins",id:"remove-buggy-html-in-markdown-parser"},{from:"allowDangerousHtml",id:"remove-buggy-html-in-markdown-parser"},{from:"allowNode",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"allowElement"},{from:"allowedTypes",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"allowedElements"},{from:"className",id:"remove-classname"},{from:"disallowedTypes",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"disallowedElements"},{from:"escapeHtml",id:"remove-buggy-html-in-markdown-parser"},{from:"includeElementIndex",id:"#remove-includeelementindex"},{from:"includeNodeIndex",id:"change-includenodeindex-to-includeelementindex"},{from:"linkTarget",id:"remove-linktarget"},{from:"plugins",id:"change-plugins-to-remarkplugins",to:"remarkPlugins"},{from:"rawSourcePos",id:"#remove-rawsourcepos"},{from:"renderers",id:"change-renderers-to-components",to:"components"},{from:"source",id:"change-source-to-children",to:"children"},{from:"sourcePos",id:"#remove-sourcepos"},{from:"transformImageUri",id:"#add-urltransform",to:"urlTransform"},{from:"transformLinkUri",id:"#add-urltransform",to:"urlTransform"}];function Markdown(options){const processor=createProcessor(options),file=createFile(options);return post(processor.runSync(processor.parse(file),file),options)}function createProcessor(options){const rehypePlugins=options.rehypePlugins||emptyPlugins,remarkPlugins=options.remarkPlugins||emptyPlugins,remarkRehypeOptions=options.remarkRehypeOptions?{...options.remarkRehypeOptions,...emptyRemarkRehypeOptions}:emptyRemarkRehypeOptions;return(0,unified_lib.l)().use(remark_parse_lib.A).use(remarkPlugins).use(remarkRehype,remarkRehypeOptions).use(rehypePlugins)}function createFile(options){const children=options.children||"",file=new vfile_lib.T;return"string"==typeof children?file.value=children:(0,lib_default.HB)("Unexpected value `"+children+"` for `children` prop, expected `string`"),file}function post(tree,options){const allowedElements=options.allowedElements,allowElement=options.allowElement,components=options.components,disallowedElements=options.disallowedElements,skipHtml=options.skipHtml,unwrapDisallowed=options.unwrapDisallowed,urlTransform=options.urlTransform||defaultUrlTransform;for(const deprecation of deprecations)Object.hasOwn(options,deprecation.from)&&(0,lib_default.HB)("Unexpected `"+deprecation.from+"` prop, "+(deprecation.to?"use `"+deprecation.to+"` instead":"remove it")+" (see <"+changelog+"#"+deprecation.id+"> for more info)");return allowedElements&&disallowedElements&&(0,lib_default.HB)("Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other"),(0,unist_util_visit_lib.YR)(tree,function transform(node,index,parent){if("raw"===node.type&&parent&&"number"==typeof index)return skipHtml?parent.children.splice(index,1):parent.children[index]={type:"text",value:node.value},index;if("element"===node.type){let key;for(key in urlAttributes)if(Object.hasOwn(urlAttributes,key)&&Object.hasOwn(node.properties,key)){const value=node.properties[key],test=urlAttributes[key];(null===test||test.includes(node.tagName))&&(node.properties[key]=urlTransform(String(value||""),key,node))}}if("element"===node.type){let remove=allowedElements?!allowedElements.includes(node.tagName):!!disallowedElements&&disallowedElements.includes(node.tagName);if(!remove&&allowElement&&"number"==typeof index&&(remove=!allowElement(node,index,parent)),remove&&parent&&"number"==typeof index)return unwrapDisallowed&&node.children?parent.children.splice(index,1,...node.children):parent.children.splice(index,1),index}}),toJsxRuntime(tree,{Fragment:jsx_runtime.Fragment,components,ignoreInvalidStyle:!0,jsx:jsx_runtime.jsx,jsxs:jsx_runtime.jsxs,passKeys:!0,passNode:!0})}function defaultUrlTransform(value){const colon=value.indexOf(":"),questionMark=value.indexOf("?"),numberSign=value.indexOf("#"),slash=value.indexOf("/");return-1===colon||-1!==slash&&colon>slash||-1!==questionMark&&colon>questionMark||-1!==numberSign&&colon>numberSign||safeProtocol.test(value.slice(0,colon))?value:""}},"./node_modules/rehype-katex/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>rehypeKatex});var property_information=__webpack_require__("./node_modules/property-information/index.js"),comma_separated_tokens=__webpack_require__("./node_modules/comma-separated-tokens/index.js");const search=/[#.]/g;var find=__webpack_require__("./node_modules/property-information/lib/find.js"),normalize=__webpack_require__("./node_modules/property-information/lib/normalize.js"),space_separated_tokens=__webpack_require__("./node_modules/space-separated-tokens/index.js");function createH(schema,defaultTagName,caseSensitive){const adjust=caseSensitive?function createAdjustMap(values){const result=new Map;for(const value of values)result.set(value.toLowerCase(),value);return result}(caseSensitive):void 0;return function h(selector,properties,...children){let node;if(null==selector){node={type:"root",children:[]};const child=properties;children.unshift(child)}else{node=function parseSelector(selector,defaultTagName){const value=selector||"",props={};let previous,tagName,start=0;for(;start<value.length;){search.lastIndex=start;const match=search.exec(value),subvalue=value.slice(start,match?match.index:value.length);subvalue&&(previous?"#"===previous?props.id=subvalue:Array.isArray(props.className)?props.className.push(subvalue):props.className=[subvalue]:tagName=subvalue,start+=subvalue.length),match&&(previous=match[0],start++)}return{type:"element",tagName:tagName||defaultTagName||"div",properties:props,children:[]}}(selector,defaultTagName);const lower=node.tagName.toLowerCase(),adjusted=adjust?adjust.get(lower):void 0;if(node.tagName=adjusted||lower,function isChild(value){if(null===value||"object"!=typeof value||Array.isArray(value))return!0;if("string"!=typeof value.type)return!1;const record=value,keys=Object.keys(value);for(const key of keys){const value=record[key];if(value&&"object"==typeof value){if(!Array.isArray(value))return!0;const list=value;for(const item of list)if("number"!=typeof item&&"string"!=typeof item)return!0}}if("children"in value&&Array.isArray(value.children))return!0;return!1}(properties))children.unshift(properties);else for(const[key,value]of Object.entries(properties))addProperty(schema,node.properties,key,value)}for(const child of children)addChild(node.children,child);return"element"===node.type&&"template"===node.tagName&&(node.content={type:"root",children:node.children},node.children=[]),node}}function addProperty(schema,properties,key,value){const info=(0,find.I)(schema,key);let result;if(null!=value){if("number"==typeof value){if(Number.isNaN(value))return;result=value}else result="boolean"==typeof value?value:"string"==typeof value?info.spaceSeparated?(0,space_separated_tokens.q)(value):info.commaSeparated?(0,comma_separated_tokens.q)(value):info.commaOrSpaceSeparated?(0,space_separated_tokens.q)((0,comma_separated_tokens.q)(value).join(" ")):parsePrimitive(info,info.property,value):Array.isArray(value)?[...value]:"style"===info.property?function style(styles){const result=[];for(const[key,value]of Object.entries(styles))result.push([key,value].join(": "));return result.join("; ")}(value):String(value);if(Array.isArray(result)){const finalResult=[];for(const item of result)finalResult.push(parsePrimitive(info,info.property,item));result=finalResult}"className"===info.property&&Array.isArray(properties.className)&&(result=properties.className.concat(result)),properties[info.property]=result}}function addChild(nodes,value){if(null==value);else if("number"==typeof value||"string"==typeof value)nodes.push({type:"text",value:String(value)});else if(Array.isArray(value))for(const child of value)addChild(nodes,child);else{if("object"!=typeof value||!("type"in value))throw new Error("Expected node, nodes, or string, got `"+value+"`");"root"===value.type?addChild(nodes,value.children):nodes.push(value)}}function parsePrimitive(info,name,value){if("string"==typeof value){if(info.number&&value&&!Number.isNaN(Number(value)))return Number(value);if((info.boolean||info.overloadedBoolean)&&(""===value||(0,normalize.S)(value)===(0,normalize.S)(name)))return!0}return value}const h=createH(property_information.qy,"div"),s=createH(property_information.JW,"g",["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","solidColor","textArea","textPath"]),webNamespaces={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function transform(node,options){const transformed=function one(node,options){switch(node.nodeType){case 1:return function lib_element(node,options){const space=node.namespaceURI,x=space===webNamespaces.svg?s:h,tagName=space===webNamespaces.html?node.tagName.toLowerCase():node.tagName,content=space===webNamespaces.html&&"template"===tagName?node.content:node,attributes=node.getAttributeNames(),properties={};let index=-1;for(;++index<attributes.length;)properties[attributes[index]]=node.getAttribute(attributes[index])||"";return x(tagName,properties,lib_all(content,options))}(node,options);case 3:return function lib_text(node){return{type:"text",value:node.nodeValue||""}}(node);case 8:return function comment(node){return{type:"comment",value:node.nodeValue||""}}(node);case 9:return root(node,options);case 10:return{type:"doctype"};case 11:return root(node,options);default:return}}(node,options);return transformed&&options.afterTransform&&options.afterTransform(node,transformed),transformed}function root(node,options){return{type:"root",children:lib_all(node,options)}}function lib_all(node,options){const nodes=node.childNodes,children=[];let index=-1;for(;++index<nodes.length;){const child=transform(nodes[index],options);void 0!==child&&children.push(child)}return children}const parser=new DOMParser;function fromHtmlIsomorphic(value,options){return function fromDom(tree,options){return transform(tree,options||{})||{type:"root",children:[]}}(options?.fragment?function parseFragment(value){const template=document.createElement("template");return template.innerHTML=value,template.content}(value):parser.parseFromString(value,"text/html"))}var lib=__webpack_require__("./node_modules/unist-util-is/lib/index.js");const findAfter=function(parent,index,test){const is=(0,lib.C)(test);if(!parent||!parent.type||!parent.children)throw new Error("Expected parent node");if("number"==typeof index){if(index<0||index===Number.POSITIVE_INFINITY)throw new Error("Expected positive finite number as index")}else if((index=parent.children.indexOf(index))<0)throw new Error("Expected child node or index");for(;++index<parent.children.length;)if(is(parent.children[index],index,parent))return parent.children[index]},convertElement=function(test){if(null==test)return hast_util_is_element_lib_element;if("string"==typeof test)return function tagNameFactory(check){return castFactory(tagName);function tagName(element){return element.tagName===check}}(test);if("object"==typeof test)return function anyFactory(tests){const checks=[];let index=-1;for(;++index<tests.length;)checks[index]=convertElement(tests[index]);return castFactory(any);function any(...parameters){let index=-1;for(;++index<checks.length;)if(checks[index].apply(this,parameters))return!0;return!1}}(test);if("function"==typeof test)return castFactory(test);throw new Error("Expected function, string, or array as `test`")};function castFactory(testFunction){return function check(value,index,parent){return Boolean(looksLikeAnElement(value)&&testFunction.call(this,value,"number"==typeof index?index:void 0,parent||void 0))}}function hast_util_is_element_lib_element(element){return Boolean(element&&"object"==typeof element&&"type"in element&&"element"===element.type&&"tagName"in element&&"string"==typeof element.tagName)}function looksLikeAnElement(value){return null!==value&&"object"==typeof value&&"type"in value&&"tagName"in value}const searchLineFeeds=/\n/g,searchTabOrSpaces=/[\t ]+/g,br=convertElement("br"),cell=convertElement(function isCell(node){return"td"===node.tagName||"th"===node.tagName}),p=convertElement("p"),row=convertElement("tr"),notRendered=convertElement(["datalist","head","noembed","noframes","noscript","rp","script","style","template","title",function lib_hidden(node){return Boolean((node.properties||{}).hidden)},function closedDialog(node){return"dialog"===node.tagName&&!(node.properties||{}).open}]),blockOrCaption=convertElement(["address","article","aside","blockquote","body","caption","center","dd","dialog","dir","dl","dt","div","figure","figcaption","footer","form,","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","legend","li","listing","main","menu","nav","ol","p","plaintext","pre","section","ul","xmp"]);function renderedTextCollection(node,parent,info){return"element"===node.type?function collectElement(node,parent,info){const whitespace=inferWhitespace(node,info),children=node.children||[];let prefix,suffix,index=-1,items=[];if(notRendered(node))return items;br(node)||row(node)&&findAfter(parent,node,row)?suffix="\n":p(node)?(prefix=2,suffix=2):blockOrCaption(node)&&(prefix=1,suffix=1);for(;++index<children.length;)items=items.concat(renderedTextCollection(children[index],node,{whitespace,breakBefore:index?void 0:prefix,breakAfter:index<children.length-1?br(children[index+1]):suffix}));cell(node)&&findAfter(parent,node,cell)&&items.push("\t");prefix&&items.unshift(prefix);suffix&&items.push(suffix);return items}(node,parent,info):"text"===node.type?"normal"===info.whitespace?collectText(node,info):function collectPreText(node){return[String(node.value)]}(node):[]}function collectText(node,info){const value=String(node.value),lines=[],result=[];let start=0;for(;start<=value.length;){searchLineFeeds.lastIndex=start;const match=searchLineFeeds.exec(value),end=match&&"index"in match?match.index:value.length;lines.push(trimAndCollapseSpacesAndTabs(value.slice(start,end).replace(/[\u061C\u200E\u200F\u202A-\u202E\u2066-\u2069]/g,""),0!==start||info.breakBefore,end!==value.length||info.breakAfter)),start=end+1}let join,index=-1;for(;++index<lines.length;)8203===lines[index].charCodeAt(lines[index].length-1)||index<lines.length-1&&8203===lines[index+1].charCodeAt(0)?(result.push(lines[index]),join=void 0):lines[index]?("number"==typeof join&&result.push(join),result.push(lines[index]),join=0):0!==index&&index!==lines.length-1||result.push(0);return result}function trimAndCollapseSpacesAndTabs(value,breakBefore,breakAfter){const result=[];let end,start=0;for(;start<value.length;){searchTabOrSpaces.lastIndex=start;const match=searchTabOrSpaces.exec(value);end=match?match.index:value.length,start||end||!match||breakBefore||result.push(""),start!==end&&result.push(value.slice(start,end)),start=match?end+match[0].length:end}return start===end||breakAfter||result.push(""),result.join(" ")}function inferWhitespace(node,info){if("element"===node.type){const properties=node.properties||{};switch(node.tagName){case"listing":case"plaintext":case"xmp":return"pre";case"nobr":return"nowrap";case"pre":return properties.wrap?"pre-wrap":"pre";case"td":case"th":return properties.noWrap?"nowrap":info.whitespace;case"textarea":return"pre-wrap"}}return info.whitespace}var katex=__webpack_require__("./node_modules/katex/dist/katex.mjs"),unist_util_visit_parents_lib=__webpack_require__("./node_modules/unist-util-visit-parents/lib/index.js");const emptyOptions={},emptyClasses=[];function rehypeKatex(options){const settings=options||emptyOptions;return function(tree,file){(0,unist_util_visit_parents_lib.VG)(tree,"element",function(element,parents){const classes=Array.isArray(element.properties.className)?element.properties.className:emptyClasses,languageMath=classes.includes("language-math"),mathDisplay=classes.includes("math-display"),mathInline=classes.includes("math-inline");let displayMode=mathDisplay;if(!languageMath&&!mathDisplay&&!mathInline)return;let parent=parents[parents.length-1],scope=element;if("code"===element.tagName&&languageMath&&parent&&"element"===parent.type&&"pre"===parent.tagName&&(scope=parent,parent=parents[parents.length-2],displayMode=!0),!parent)return;const value=function toText(tree,options){const options_=options||{},children="children"in tree?tree.children:[],block=blockOrCaption(tree),whitespace=inferWhitespace(tree,{whitespace:options_.whitespace||"normal",breakBefore:!1,breakAfter:!1}),results=[];"text"!==tree.type&&"comment"!==tree.type||results.push(...collectText(tree,{whitespace,breakBefore:!0,breakAfter:!0}));let index=-1;for(;++index<children.length;)results.push(...renderedTextCollection(children[index],tree,{whitespace,breakBefore:index?void 0:block,breakAfter:index<children.length-1?br(children[index+1]):block}));const result=[];let count;for(index=-1;++index<results.length;){const value=results[index];"number"==typeof value?void 0!==count&&value>count&&(count=value):value&&(void 0!==count&&count>-1&&result.push("\n".repeat(count)||" "),count=-1,result.push(value))}return result.join("")}(scope,{whitespace:"pre"});let result;try{result=katex.default.renderToString(value,{...settings,displayMode,throwOnError:!0})}catch(error){const cause=error,ruleId=cause.name.toLowerCase();file.message("Could not render math with KaTeX",{ancestors:[...parents,element],cause,place:element.position,ruleId,source:"rehype-katex"});try{result=katex.default.renderToString(value,{...settings,displayMode,strict:"ignore",throwOnError:!1})}catch{result=[{type:"element",tagName:"span",properties:{className:["katex-error"],style:"color:"+(settings.errorColor||"#cc0000"),title:String(error)},children:[{type:"text",value}]}]}}if("string"==typeof result){result=fromHtmlIsomorphic(result,{fragment:!0}).children}const index=parent.children.indexOf(scope);return parent.children.splice(index,1,...result),unist_util_visit_parents_lib._Z})}}},"./node_modules/space-separated-tokens/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function parse(value){const input=String(value||"").trim();return input?input.split(/[ \t\n\r\f]+/g):[]}function stringify(values){return values.join(" ").trim()}__webpack_require__.d(__webpack_exports__,{A:()=>stringify,q:()=>parse})},"./node_modules/style-to-js/cjs/index.js":function(module,__unused_webpack_exports,__webpack_require__){"use strict";var style_to_object_1=(this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}})(__webpack_require__("./node_modules/style-to-object/cjs/index.js")),utilities_1=__webpack_require__("./node_modules/style-to-js/cjs/utilities.js");function StyleToJS(style,options){var output={};return style&&"string"==typeof style?((0,style_to_object_1.default)(style,function(property,value){property&&value&&(output[(0,utilities_1.camelCase)(property,options)]=value)}),output):output}StyleToJS.default=StyleToJS,module.exports=StyleToJS},"./node_modules/style-to-js/cjs/utilities.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.camelCase=void 0;var CUSTOM_PROPERTY_REGEX=/^--[a-zA-Z0-9_-]+$/,HYPHEN_REGEX=/-([a-z])/g,NO_HYPHEN_REGEX=/^[^-]+$/,VENDOR_PREFIX_REGEX=/^-(webkit|moz|ms|o|khtml)-/,MS_VENDOR_PREFIX_REGEX=/^-(ms)-/,capitalize=function(match,character){return character.toUpperCase()},trimHyphen=function(match,prefix){return"".concat(prefix,"-")};exports.camelCase=function(property,options){return void 0===options&&(options={}),function(property){return!property||NO_HYPHEN_REGEX.test(property)||CUSTOM_PROPERTY_REGEX.test(property)}(property)?property:(property=property.toLowerCase(),(property=options.reactCompat?property.replace(MS_VENDOR_PREFIX_REGEX,trimHyphen):property.replace(VENDOR_PREFIX_REGEX,trimHyphen)).replace(HYPHEN_REGEX,capitalize))}},"./node_modules/style-to-object/cjs/index.js":function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function StyleToObject(style,iterator){var styleObject=null;if(!style||"string"!=typeof style)return styleObject;var declarations=(0,inline_style_parser_1.default)(style),hasIterator="function"==typeof iterator;return declarations.forEach(function(declaration){if("declaration"===declaration.type){var property=declaration.property,value=declaration.value;hasIterator?iterator(property,value,declaration):value&&((styleObject=styleObject||{})[property]=value)}}),styleObject};var inline_style_parser_1=__importDefault(__webpack_require__("./node_modules/inline-style-parser/index.js"))}}]);