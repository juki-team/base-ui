"use strict";(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[24010],{"./node_modules/@chevrotain/regexp-to-ast/lib/src/api.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function cc(char){return char.charCodeAt(0)}function insertToSet(item,set){Array.isArray(item)?item.forEach(function(subItem){set.push(subItem)}):set.push(item)}function addFlag(flagObj,flagKey){if(!0===flagObj[flagKey])throw"duplicate flag "+flagKey;flagObj[flagKey];flagObj[flagKey]=!0}function ASSERT_EXISTS(obj){if(void 0===obj)throw Error("Internal Error - Should never get here!");return!0}function ASSERT_NEVER_REACH_HERE(){throw Error("Internal Error - Should never get here!")}function isCharacter(obj){return"Character"===obj.type}__webpack_require__.d(__webpack_exports__,{z:()=>BaseRegExpVisitor,H:()=>RegExpParser});const digitsCharCodes=[];for(let i=cc("0");i<=cc("9");i++)digitsCharCodes.push(i);const wordCharCodes=[cc("_")].concat(digitsCharCodes);for(let i=cc("a");i<=cc("z");i++)wordCharCodes.push(i);for(let i=cc("A");i<=cc("Z");i++)wordCharCodes.push(i);const whitespaceCodes=[cc(" "),cc("\f"),cc("\n"),cc("\r"),cc("\t"),cc("\v"),cc("\t"),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc(" "),cc("\u2028"),cc("\u2029"),cc(" "),cc(" "),cc("　"),cc("\ufeff")],hexDigitPattern=/[0-9a-fA-F]/,decimalPattern=/[0-9]/,decimalPatternNoZero=/[1-9]/;class RegExpParser{constructor(){this.idx=0,this.input="",this.groupIdx=0}saveState(){return{idx:this.idx,input:this.input,groupIdx:this.groupIdx}}restoreState(newState){this.idx=newState.idx,this.input=newState.input,this.groupIdx=newState.groupIdx}pattern(input){this.idx=0,this.input=input,this.groupIdx=0,this.consumeChar("/");const value=this.disjunction();this.consumeChar("/");const flags={type:"Flags",loc:{begin:this.idx,end:input.length},global:!1,ignoreCase:!1,multiLine:!1,unicode:!1,sticky:!1};for(;this.isRegExpFlag();)switch(this.popChar()){case"g":addFlag(flags,"global");break;case"i":addFlag(flags,"ignoreCase");break;case"m":addFlag(flags,"multiLine");break;case"u":addFlag(flags,"unicode");break;case"y":addFlag(flags,"sticky")}if(this.idx!==this.input.length)throw Error("Redundant input: "+this.input.substring(this.idx));return{type:"Pattern",flags,value,loc:this.loc(0)}}disjunction(){const alts=[],begin=this.idx;for(alts.push(this.alternative());"|"===this.peekChar();)this.consumeChar("|"),alts.push(this.alternative());return{type:"Disjunction",value:alts,loc:this.loc(begin)}}alternative(){const terms=[],begin=this.idx;for(;this.isTerm();)terms.push(this.term());return{type:"Alternative",value:terms,loc:this.loc(begin)}}term(){return this.isAssertion()?this.assertion():this.atom()}assertion(){const begin=this.idx;switch(this.popChar()){case"^":return{type:"StartAnchor",loc:this.loc(begin)};case"$":return{type:"EndAnchor",loc:this.loc(begin)};case"\\":switch(this.popChar()){case"b":return{type:"WordBoundary",loc:this.loc(begin)};case"B":return{type:"NonWordBoundary",loc:this.loc(begin)}}throw Error("Invalid Assertion Escape");case"(":let type;switch(this.consumeChar("?"),this.popChar()){case"=":type="Lookahead";break;case"!":type="NegativeLookahead"}ASSERT_EXISTS(type);const disjunction=this.disjunction();return this.consumeChar(")"),{type,value:disjunction,loc:this.loc(begin)}}return ASSERT_NEVER_REACH_HERE()}quantifier(isBacktracking=!1){let range;const begin=this.idx;switch(this.popChar()){case"*":range={atLeast:0,atMost:1/0};break;case"+":range={atLeast:1,atMost:1/0};break;case"?":range={atLeast:0,atMost:1};break;case"{":const atLeast=this.integerIncludingZero();switch(this.popChar()){case"}":range={atLeast,atMost:atLeast};break;case",":let atMost;this.isDigit()?(atMost=this.integerIncludingZero(),range={atLeast,atMost}):range={atLeast,atMost:1/0},this.consumeChar("}")}if(!0===isBacktracking&&void 0===range)return;ASSERT_EXISTS(range)}if(!0!==isBacktracking||void 0!==range)return ASSERT_EXISTS(range)?("?"===this.peekChar(0)?(this.consumeChar("?"),range.greedy=!1):range.greedy=!0,range.type="Quantifier",range.loc=this.loc(begin),range):void 0}atom(){let atom;const begin=this.idx;switch(this.peekChar()){case".":atom=this.dotAll();break;case"\\":atom=this.atomEscape();break;case"[":atom=this.characterClass();break;case"(":atom=this.group()}return void 0===atom&&this.isPatternCharacter()&&(atom=this.patternCharacter()),ASSERT_EXISTS(atom)?(atom.loc=this.loc(begin),this.isQuantifier()&&(atom.quantifier=this.quantifier()),atom):ASSERT_NEVER_REACH_HERE()}dotAll(){return this.consumeChar("."),{type:"Set",complement:!0,value:[cc("\n"),cc("\r"),cc("\u2028"),cc("\u2029")]}}atomEscape(){switch(this.consumeChar("\\"),this.peekChar()){case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":return this.decimalEscapeAtom();case"d":case"D":case"s":case"S":case"w":case"W":return this.characterClassEscape();case"f":case"n":case"r":case"t":case"v":return this.controlEscapeAtom();case"c":return this.controlLetterEscapeAtom();case"0":return this.nulCharacterAtom();case"x":return this.hexEscapeSequenceAtom();case"u":return this.regExpUnicodeEscapeSequenceAtom();default:return this.identityEscapeAtom()}}decimalEscapeAtom(){return{type:"GroupBackReference",value:this.positiveInteger()}}characterClassEscape(){let set,complement=!1;switch(this.popChar()){case"d":set=digitsCharCodes;break;case"D":set=digitsCharCodes,complement=!0;break;case"s":set=whitespaceCodes;break;case"S":set=whitespaceCodes,complement=!0;break;case"w":set=wordCharCodes;break;case"W":set=wordCharCodes,complement=!0}return ASSERT_EXISTS(set)?{type:"Set",value:set,complement}:ASSERT_NEVER_REACH_HERE()}controlEscapeAtom(){let escapeCode;switch(this.popChar()){case"f":escapeCode=cc("\f");break;case"n":escapeCode=cc("\n");break;case"r":escapeCode=cc("\r");break;case"t":escapeCode=cc("\t");break;case"v":escapeCode=cc("\v")}return ASSERT_EXISTS(escapeCode)?{type:"Character",value:escapeCode}:ASSERT_NEVER_REACH_HERE()}controlLetterEscapeAtom(){this.consumeChar("c");const letter=this.popChar();if(!1===/[a-zA-Z]/.test(letter))throw Error("Invalid ");return{type:"Character",value:letter.toUpperCase().charCodeAt(0)-64}}nulCharacterAtom(){return this.consumeChar("0"),{type:"Character",value:cc("\0")}}hexEscapeSequenceAtom(){return this.consumeChar("x"),this.parseHexDigits(2)}regExpUnicodeEscapeSequenceAtom(){return this.consumeChar("u"),this.parseHexDigits(4)}identityEscapeAtom(){return{type:"Character",value:cc(this.popChar())}}classPatternCharacterAtom(){switch(this.peekChar()){case"\n":case"\r":case"\u2028":case"\u2029":case"\\":case"]":throw Error("TBD");default:return{type:"Character",value:cc(this.popChar())}}}characterClass(){const set=[];let complement=!1;for(this.consumeChar("["),"^"===this.peekChar(0)&&(this.consumeChar("^"),complement=!0);this.isClassAtom();){const from=this.classAtom();from.type;if(isCharacter(from)&&this.isRangeDash()){this.consumeChar("-");const to=this.classAtom();to.type;if(isCharacter(to)){if(to.value<from.value)throw Error("Range out of order in character class");set.push({from:from.value,to:to.value})}else insertToSet(from.value,set),set.push(cc("-")),insertToSet(to.value,set)}else insertToSet(from.value,set)}return this.consumeChar("]"),{type:"Set",complement,value:set}}classAtom(){switch(this.peekChar()){case"]":case"\n":case"\r":case"\u2028":case"\u2029":throw Error("TBD");case"\\":return this.classEscape();default:return this.classPatternCharacterAtom()}}classEscape(){switch(this.consumeChar("\\"),this.peekChar()){case"b":return this.consumeChar("b"),{type:"Character",value:cc("\b")};case"d":case"D":case"s":case"S":case"w":case"W":return this.characterClassEscape();case"f":case"n":case"r":case"t":case"v":return this.controlEscapeAtom();case"c":return this.controlLetterEscapeAtom();case"0":return this.nulCharacterAtom();case"x":return this.hexEscapeSequenceAtom();case"u":return this.regExpUnicodeEscapeSequenceAtom();default:return this.identityEscapeAtom()}}group(){let capturing=!0;if(this.consumeChar("("),"?"===this.peekChar(0))this.consumeChar("?"),this.consumeChar(":"),capturing=!1;else this.groupIdx++;const value=this.disjunction();this.consumeChar(")");const groupAst={type:"Group",capturing,value};return capturing&&(groupAst.idx=this.groupIdx),groupAst}positiveInteger(){let number=this.popChar();if(!1===decimalPatternNoZero.test(number))throw Error("Expecting a positive integer");for(;decimalPattern.test(this.peekChar(0));)number+=this.popChar();return parseInt(number,10)}integerIncludingZero(){let number=this.popChar();if(!1===decimalPattern.test(number))throw Error("Expecting an integer");for(;decimalPattern.test(this.peekChar(0));)number+=this.popChar();return parseInt(number,10)}patternCharacter(){const nextChar=this.popChar();switch(nextChar){case"\n":case"\r":case"\u2028":case"\u2029":case"^":case"$":case"\\":case".":case"*":case"+":case"?":case"(":case")":case"[":case"|":throw Error("TBD");default:return{type:"Character",value:cc(nextChar)}}}isRegExpFlag(){switch(this.peekChar(0)){case"g":case"i":case"m":case"u":case"y":return!0;default:return!1}}isRangeDash(){return"-"===this.peekChar()&&this.isClassAtom(1)}isDigit(){return decimalPattern.test(this.peekChar(0))}isClassAtom(howMuch=0){switch(this.peekChar(howMuch)){case"]":case"\n":case"\r":case"\u2028":case"\u2029":return!1;default:return!0}}isTerm(){return this.isAtom()||this.isAssertion()}isAtom(){if(this.isPatternCharacter())return!0;switch(this.peekChar(0)){case".":case"\\":case"[":case"(":return!0;default:return!1}}isAssertion(){switch(this.peekChar(0)){case"^":case"$":return!0;case"\\":switch(this.peekChar(1)){case"b":case"B":return!0;default:return!1}case"(":return"?"===this.peekChar(1)&&("="===this.peekChar(2)||"!"===this.peekChar(2));default:return!1}}isQuantifier(){const prevState=this.saveState();try{return void 0!==this.quantifier(!0)}catch(e){return!1}finally{this.restoreState(prevState)}}isPatternCharacter(){switch(this.peekChar()){case"^":case"$":case"\\":case".":case"*":case"+":case"?":case"(":case")":case"[":case"|":case"/":case"\n":case"\r":case"\u2028":case"\u2029":return!1;default:return!0}}parseHexDigits(howMany){let hexString="";for(let i=0;i<howMany;i++){const hexChar=this.popChar();if(!1===hexDigitPattern.test(hexChar))throw Error("Expecting a HexDecimal digits");hexString+=hexChar}return{type:"Character",value:parseInt(hexString,16)}}peekChar(howMuch=0){return this.input[this.idx+howMuch]}popChar(){const nextChar=this.peekChar(0);return this.consumeChar(void 0),nextChar}consumeChar(char){if(void 0!==char&&this.input[this.idx]!==char)throw Error("Expected: '"+char+"' but found: '"+this.input[this.idx]+"' at offset: "+this.idx);if(this.idx>=this.input.length)throw Error("Unexpected end of input");this.idx++}loc(begin){return{begin,end:this.idx}}}class BaseRegExpVisitor{visitChildren(node){for(const key in node){const child=node[key];node.hasOwnProperty(key)&&(void 0!==child.type?this.visit(child):Array.isArray(child)&&child.forEach(subChild=>{this.visit(subChild)},this))}}visit(node){switch(node.type){case"Pattern":this.visitPattern(node);break;case"Flags":this.visitFlags(node);break;case"Disjunction":this.visitDisjunction(node);break;case"Alternative":this.visitAlternative(node);break;case"StartAnchor":this.visitStartAnchor(node);break;case"EndAnchor":this.visitEndAnchor(node);break;case"WordBoundary":this.visitWordBoundary(node);break;case"NonWordBoundary":this.visitNonWordBoundary(node);break;case"Lookahead":this.visitLookahead(node);break;case"NegativeLookahead":this.visitNegativeLookahead(node);break;case"Character":this.visitCharacter(node);break;case"Set":this.visitSet(node);break;case"Group":this.visitGroup(node);break;case"GroupBackReference":this.visitGroupBackReference(node);break;case"Quantifier":this.visitQuantifier(node)}this.visitChildren(node)}visitPattern(node){}visitFlags(node){}visitDisjunction(node){}visitAlternative(node){}visitStartAnchor(node){}visitEndAnchor(node){}visitWordBoundary(node){}visitNonWordBoundary(node){}visitLookahead(node){}visitNegativeLookahead(node){}visitCharacter(node){}visitSet(node){}visitGroup(node){}visitGroupBackReference(node){}visitQuantifier(node){}}},"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{mR:()=>AbstractMermaidTokenBuilder,dg:()=>AbstractMermaidValueConverter,jE:()=>ArchitectureGeneratedModule,Tm:()=>CommonValueConverter,eZ:()=>GitGraphGeneratedModule,e5:()=>InfoGeneratedModule,sr:()=>MermaidGeneratedSharedModule,AM:()=>PacketGeneratedModule,KX:()=>PieGeneratedModule,YP:()=>RadarGeneratedModule,eV:()=>TreemapGeneratedModule,K2:()=>__name});var syntax_tree=__webpack_require__("./node_modules/langium/lib/syntax-tree.js"),default_module=__webpack_require__("./node_modules/langium/lib/default-module.js"),dependency_injection=__webpack_require__("./node_modules/langium/lib/dependency-injection.js"),ast=__webpack_require__("./node_modules/langium/lib/languages/generated/ast.js"),file_system_provider=__webpack_require__("./node_modules/langium/lib/workspace/file-system-provider.js"),esm=__webpack_require__("./node_modules/vscode-uri/lib/esm/index.mjs");const minimalGrammarModule={Grammar:()=>{},LanguageMetaData:()=>({caseInsensitive:!1,fileExtensions:[".langium"],languageId:"langium"})},minimalSharedGrammarModule={AstReflection:()=>new ast.QX};function loadGrammarFromJson(json){var _a;const services=function createMinimalGrammarServices(){const shared=(0,dependency_injection.WQ)((0,default_module.u)(file_system_provider.D),minimalSharedGrammarModule),grammar=(0,dependency_injection.WQ)((0,default_module.t)({shared}),minimalGrammarModule);return shared.ServiceRegistry.register(grammar),grammar}(),astNode=services.serializer.JsonSerializer.deserialize(json);return services.shared.workspace.LangiumDocumentFactory.fromModel(astNode,esm.r.parse(`memory://${null!==(_a=astNode.name)&&void 0!==_a?_a:"grammar"}.langium`)),astNode}var value_converter=__webpack_require__("./node_modules/langium/lib/parser/value-converter.js"),token_builder=__webpack_require__("./node_modules/langium/lib/parser/token-builder.js"),__defProp=Object.defineProperty,__name=(target,value)=>__defProp(target,"name",{value,configurable:!0});__name(function isArchitecture(item){return reflection.isInstance(item,"Architecture")},"isArchitecture");__name(function isBranch(item){return reflection.isInstance(item,"Branch")},"isBranch");__name(function isCommit(item){return reflection.isInstance(item,"Commit")},"isCommit");__name(function isGitGraph(item){return reflection.isInstance(item,"GitGraph")},"isGitGraph");__name(function isInfo(item){return reflection.isInstance(item,"Info")},"isInfo");__name(function isMerge(item){return reflection.isInstance(item,"Merge")},"isMerge");__name(function isPacket(item){return reflection.isInstance(item,"Packet")},"isPacket");__name(function isPacketBlock(item){return reflection.isInstance(item,"PacketBlock")},"isPacketBlock");__name(function isPie(item){return reflection.isInstance(item,"Pie")},"isPie");__name(function isPieSection(item){return reflection.isInstance(item,"PieSection")},"isPieSection");__name(function isTreemap(item){return reflection.isInstance(item,"Treemap")},"isTreemap");var loadedInfoGrammar,loadedPacketGrammar,loadedPieGrammar,loadedArchitectureGrammar,loadedGitGraphGrammar,loadedRadarGrammar,loadedTreemapGrammar,MermaidAstReflection=class extends syntax_tree.kD{static{__name(this,"MermaidAstReflection")}getAllTypes(){return["Architecture","Axis","Branch","Checkout","CherryPicking","ClassDefStatement","Commit","Curve","Direction","Edge","Entry","GitGraph","Group","Info","Item","Junction","Leaf","Merge","Option","Packet","PacketBlock","Pie","PieSection","Radar","Section","Service","Statement","Treemap","TreemapRow"]}computeIsSubtype(subtype,supertype){switch(subtype){case"Branch":case"Checkout":case"CherryPicking":case"Commit":case"Merge":return this.isSubtype("Statement",supertype);case"Direction":return this.isSubtype("GitGraph",supertype);case"Leaf":case"Section":return this.isSubtype("Item",supertype);default:return!1}}getReferenceType(refInfo){const referenceId=`${refInfo.container.$type}:${refInfo.property}`;if("Entry:axis"===referenceId)return"Axis";throw new Error(`${referenceId} is not a valid reference id.`)}getTypeMetaData(type){switch(type){case"Architecture":return{name:"Architecture",properties:[{name:"accDescr"},{name:"accTitle"},{name:"edges",defaultValue:[]},{name:"groups",defaultValue:[]},{name:"junctions",defaultValue:[]},{name:"services",defaultValue:[]},{name:"title"}]};case"Axis":return{name:"Axis",properties:[{name:"label"},{name:"name"}]};case"Branch":return{name:"Branch",properties:[{name:"name"},{name:"order"}]};case"Checkout":return{name:"Checkout",properties:[{name:"branch"}]};case"CherryPicking":return{name:"CherryPicking",properties:[{name:"id"},{name:"parent"},{name:"tags",defaultValue:[]}]};case"ClassDefStatement":return{name:"ClassDefStatement",properties:[{name:"className"},{name:"styleText"}]};case"Commit":return{name:"Commit",properties:[{name:"id"},{name:"message"},{name:"tags",defaultValue:[]},{name:"type"}]};case"Curve":return{name:"Curve",properties:[{name:"entries",defaultValue:[]},{name:"label"},{name:"name"}]};case"Edge":return{name:"Edge",properties:[{name:"lhsDir"},{name:"lhsGroup",defaultValue:!1},{name:"lhsId"},{name:"lhsInto",defaultValue:!1},{name:"rhsDir"},{name:"rhsGroup",defaultValue:!1},{name:"rhsId"},{name:"rhsInto",defaultValue:!1},{name:"title"}]};case"Entry":return{name:"Entry",properties:[{name:"axis"},{name:"value"}]};case"GitGraph":return{name:"GitGraph",properties:[{name:"accDescr"},{name:"accTitle"},{name:"statements",defaultValue:[]},{name:"title"}]};case"Group":return{name:"Group",properties:[{name:"icon"},{name:"id"},{name:"in"},{name:"title"}]};case"Info":return{name:"Info",properties:[{name:"accDescr"},{name:"accTitle"},{name:"title"}]};case"Item":return{name:"Item",properties:[{name:"classSelector"},{name:"name"}]};case"Junction":return{name:"Junction",properties:[{name:"id"},{name:"in"}]};case"Merge":return{name:"Merge",properties:[{name:"branch"},{name:"id"},{name:"tags",defaultValue:[]},{name:"type"}]};case"Option":return{name:"Option",properties:[{name:"name"},{name:"value",defaultValue:!1}]};case"Packet":return{name:"Packet",properties:[{name:"accDescr"},{name:"accTitle"},{name:"blocks",defaultValue:[]},{name:"title"}]};case"PacketBlock":return{name:"PacketBlock",properties:[{name:"bits"},{name:"end"},{name:"label"},{name:"start"}]};case"Pie":return{name:"Pie",properties:[{name:"accDescr"},{name:"accTitle"},{name:"sections",defaultValue:[]},{name:"showData",defaultValue:!1},{name:"title"}]};case"PieSection":return{name:"PieSection",properties:[{name:"label"},{name:"value"}]};case"Radar":return{name:"Radar",properties:[{name:"accDescr"},{name:"accTitle"},{name:"axes",defaultValue:[]},{name:"curves",defaultValue:[]},{name:"options",defaultValue:[]},{name:"title"}]};case"Service":return{name:"Service",properties:[{name:"icon"},{name:"iconText"},{name:"id"},{name:"in"},{name:"title"}]};case"Treemap":return{name:"Treemap",properties:[{name:"accDescr"},{name:"accTitle"},{name:"title"},{name:"TreemapRows",defaultValue:[]}]};case"TreemapRow":return{name:"TreemapRow",properties:[{name:"indent"},{name:"item"}]};case"Direction":return{name:"Direction",properties:[{name:"accDescr"},{name:"accTitle"},{name:"dir"},{name:"statements",defaultValue:[]},{name:"title"}]};case"Leaf":return{name:"Leaf",properties:[{name:"classSelector"},{name:"name"},{name:"value"}]};case"Section":return{name:"Section",properties:[{name:"classSelector"},{name:"name"}]};default:return{name:type,properties:[]}}}},reflection=new MermaidAstReflection,InfoGrammar=__name(()=>loadedInfoGrammar??(loadedInfoGrammar=loadGrammarFromJson('{"$type":"Grammar","isDeclared":true,"name":"Info","imports":[],"rules":[{"$type":"ParserRule","entry":true,"name":"Info","definition":{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[],"cardinality":"*"},{"$type":"Keyword","value":"info"},{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[],"cardinality":"*"},{"$type":"Group","elements":[{"$type":"Keyword","value":"showInfo"},{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[],"cardinality":"*"}],"cardinality":"?"},{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[],"cardinality":"?"}]},"definesHiddenTokens":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"EOL","dataType":"string","definition":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[],"cardinality":"+"},{"$type":"EndOfFile"}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"TitleAndAccessibilities","definition":{"$type":"Group","elements":[{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"accDescr","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@4"},"arguments":[]}},{"$type":"Assignment","feature":"accTitle","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@5"},"arguments":[]}},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@6"},"arguments":[]}}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@1"},"arguments":[]}],"cardinality":"+"},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"BOOLEAN","type":{"$type":"ReturnType","name":"boolean"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"true"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"false"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_DESCR","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accDescr(?:[\\\\t ]*:([^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)|\\\\s*{([^}]*)})/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accTitle[\\\\t ]*:(?:[^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*title(?:[\\\\t ][^\\\\n\\\\r]*?(?=%%)|[\\\\t ][^\\\\n\\\\r]*|)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"FLOAT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/[0-9]+\\\\.[0-9]+(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"INT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/0|[1-9][0-9]*(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NUMBER","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@7"}},{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@8"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"STRING","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*\\"|\'([^\'\\\\\\\\]|\\\\\\\\.)*\'/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ID","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/[\\\\w]([-\\\\w]*\\\\w)?/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NEWLINE","definition":{"$type":"RegexToken","regex":"/\\\\r?\\\\n/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","hidden":true,"name":"WHITESPACE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]+/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"YAML","definition":{"$type":"RegexToken","regex":"/---[\\\\t ]*\\\\r?\\\\n(?:[\\\\S\\\\s]*?\\\\r?\\\\n)?---(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"DIRECTIVE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%{[\\\\S\\\\s]*?}%%(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"SINGLE_LINE_COMMENT","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%[^\\\\n\\\\r]*/"},"fragment":false}],"definesHiddenTokens":false,"hiddenTokens":[],"interfaces":[],"types":[],"usedGrammars":[]}')),"InfoGrammar"),PacketGrammar=__name(()=>loadedPacketGrammar??(loadedPacketGrammar=loadGrammarFromJson('{"$type":"Grammar","isDeclared":true,"name":"Packet","imports":[],"rules":[{"$type":"ParserRule","entry":true,"name":"Packet","definition":{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[],"cardinality":"*"},{"$type":"Alternatives","elements":[{"$type":"Keyword","value":"packet"},{"$type":"Keyword","value":"packet-beta"}]},{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@3"},"arguments":[]},{"$type":"Assignment","feature":"blocks","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@1"},"arguments":[]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[]}],"cardinality":"*"}]},"definesHiddenTokens":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"PacketBlock","definition":{"$type":"Group","elements":[{"$type":"Alternatives","elements":[{"$type":"Group","elements":[{"$type":"Assignment","feature":"start","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@9"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"Keyword","value":"-"},{"$type":"Assignment","feature":"end","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@9"},"arguments":[]}}],"cardinality":"?"}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"+"},{"$type":"Assignment","feature":"bits","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@9"},"arguments":[]}}]}]},{"$type":"Keyword","value":":"},{"$type":"Assignment","feature":"label","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@11"},"arguments":[]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"EOL","dataType":"string","definition":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[],"cardinality":"+"},{"$type":"EndOfFile"}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"TitleAndAccessibilities","definition":{"$type":"Group","elements":[{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"accDescr","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@5"},"arguments":[]}},{"$type":"Assignment","feature":"accTitle","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@6"},"arguments":[]}},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@7"},"arguments":[]}}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]}],"cardinality":"+"},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"BOOLEAN","type":{"$type":"ReturnType","name":"boolean"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"true"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"false"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_DESCR","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accDescr(?:[\\\\t ]*:([^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)|\\\\s*{([^}]*)})/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accTitle[\\\\t ]*:(?:[^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*title(?:[\\\\t ][^\\\\n\\\\r]*?(?=%%)|[\\\\t ][^\\\\n\\\\r]*|)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"FLOAT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/[0-9]+\\\\.[0-9]+(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"INT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/0|[1-9][0-9]*(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NUMBER","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@8"}},{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@9"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"STRING","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*\\"|\'([^\'\\\\\\\\]|\\\\\\\\.)*\'/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ID","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/[\\\\w]([-\\\\w]*\\\\w)?/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NEWLINE","definition":{"$type":"RegexToken","regex":"/\\\\r?\\\\n/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","hidden":true,"name":"WHITESPACE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]+/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"YAML","definition":{"$type":"RegexToken","regex":"/---[\\\\t ]*\\\\r?\\\\n(?:[\\\\S\\\\s]*?\\\\r?\\\\n)?---(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"DIRECTIVE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%{[\\\\S\\\\s]*?}%%(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"SINGLE_LINE_COMMENT","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%[^\\\\n\\\\r]*/"},"fragment":false}],"definesHiddenTokens":false,"hiddenTokens":[],"interfaces":[],"types":[],"usedGrammars":[]}')),"PacketGrammar"),PieGrammar=__name(()=>loadedPieGrammar??(loadedPieGrammar=loadGrammarFromJson('{"$type":"Grammar","isDeclared":true,"name":"Pie","imports":[],"rules":[{"$type":"ParserRule","entry":true,"name":"Pie","definition":{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[],"cardinality":"*"},{"$type":"Keyword","value":"pie"},{"$type":"Assignment","feature":"showData","operator":"?=","terminal":{"$type":"Keyword","value":"showData"},"cardinality":"?"},{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@3"},"arguments":[]},{"$type":"Assignment","feature":"sections","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@1"},"arguments":[]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[]}],"cardinality":"*"}]},"definesHiddenTokens":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"PieSection","definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"label","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@11"},"arguments":[]}},{"$type":"Keyword","value":":"},{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@10"},"arguments":[]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"EOL","dataType":"string","definition":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[],"cardinality":"+"},{"$type":"EndOfFile"}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"TitleAndAccessibilities","definition":{"$type":"Group","elements":[{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"accDescr","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@5"},"arguments":[]}},{"$type":"Assignment","feature":"accTitle","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@6"},"arguments":[]}},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@7"},"arguments":[]}}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]}],"cardinality":"+"},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"BOOLEAN","type":{"$type":"ReturnType","name":"boolean"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"true"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"false"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_DESCR","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accDescr(?:[\\\\t ]*:([^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)|\\\\s*{([^}]*)})/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accTitle[\\\\t ]*:(?:[^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*title(?:[\\\\t ][^\\\\n\\\\r]*?(?=%%)|[\\\\t ][^\\\\n\\\\r]*|)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"FLOAT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/[0-9]+\\\\.[0-9]+(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"INT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/0|[1-9][0-9]*(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NUMBER","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@8"}},{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@9"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"STRING","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*\\"|\'([^\'\\\\\\\\]|\\\\\\\\.)*\'/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ID","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/[\\\\w]([-\\\\w]*\\\\w)?/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NEWLINE","definition":{"$type":"RegexToken","regex":"/\\\\r?\\\\n/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","hidden":true,"name":"WHITESPACE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]+/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"YAML","definition":{"$type":"RegexToken","regex":"/---[\\\\t ]*\\\\r?\\\\n(?:[\\\\S\\\\s]*?\\\\r?\\\\n)?---(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"DIRECTIVE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%{[\\\\S\\\\s]*?}%%(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"SINGLE_LINE_COMMENT","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%[^\\\\n\\\\r]*/"},"fragment":false}],"definesHiddenTokens":false,"hiddenTokens":[],"interfaces":[],"types":[],"usedGrammars":[]}')),"PieGrammar"),ArchitectureGrammar=__name(()=>loadedArchitectureGrammar??(loadedArchitectureGrammar=loadGrammarFromJson('{"$type":"Grammar","isDeclared":true,"name":"Architecture","imports":[],"rules":[{"$type":"ParserRule","entry":true,"name":"Architecture","definition":{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@23"},"arguments":[],"cardinality":"*"},{"$type":"Keyword","value":"architecture-beta"},{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@23"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@1"},"arguments":[]}],"cardinality":"*"}]},"definesHiddenTokens":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"Statement","definition":{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"groups","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@5"},"arguments":[]}},{"$type":"Assignment","feature":"services","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@6"},"arguments":[]}},{"$type":"Assignment","feature":"junctions","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@7"},"arguments":[]}},{"$type":"Assignment","feature":"edges","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]}}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"LeftPort","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":":"},{"$type":"Assignment","feature":"lhsDir","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@9"},"arguments":[]}}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"RightPort","definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"rhsDir","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@9"},"arguments":[]}},{"$type":"Keyword","value":":"}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"Arrow","definition":{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]},{"$type":"Assignment","feature":"lhsInto","operator":"?=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@11"},"arguments":[]},"cardinality":"?"},{"$type":"Alternatives","elements":[{"$type":"Keyword","value":"--"},{"$type":"Group","elements":[{"$type":"Keyword","value":"-"},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@29"},"arguments":[]}},{"$type":"Keyword","value":"-"}]}]},{"$type":"Assignment","feature":"rhsInto","operator":"?=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@11"},"arguments":[]},"cardinality":"?"},{"$type":"RuleCall","rule":{"$ref":"#/rules@3"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Group","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":"group"},{"$type":"Assignment","feature":"id","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}},{"$type":"Assignment","feature":"icon","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@28"},"arguments":[]},"cardinality":"?"},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@29"},"arguments":[]},"cardinality":"?"},{"$type":"Group","elements":[{"$type":"Keyword","value":"in"},{"$type":"Assignment","feature":"in","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}}],"cardinality":"?"},{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Service","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":"service"},{"$type":"Assignment","feature":"id","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}},{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"iconText","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@21"},"arguments":[]}},{"$type":"Assignment","feature":"icon","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@28"},"arguments":[]}}],"cardinality":"?"},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@29"},"arguments":[]},"cardinality":"?"},{"$type":"Group","elements":[{"$type":"Keyword","value":"in"},{"$type":"Assignment","feature":"in","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}}],"cardinality":"?"},{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Junction","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":"junction"},{"$type":"Assignment","feature":"id","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"Keyword","value":"in"},{"$type":"Assignment","feature":"in","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}}],"cardinality":"?"},{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Edge","definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"lhsId","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}},{"$type":"Assignment","feature":"lhsGroup","operator":"?=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@10"},"arguments":[]},"cardinality":"?"},{"$type":"RuleCall","rule":{"$ref":"#/rules@4"},"arguments":[]},{"$type":"Assignment","feature":"rhsId","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}},{"$type":"Assignment","feature":"rhsGroup","operator":"?=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@10"},"arguments":[]},"cardinality":"?"},{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"ARROW_DIRECTION","definition":{"$type":"TerminalAlternatives","elements":[{"$type":"TerminalAlternatives","elements":[{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"L"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"R"}}]},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"T"}}]},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"B"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ARROW_GROUP","definition":{"$type":"RegexToken","regex":"/\\\\{group\\\\}/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ARROW_INTO","definition":{"$type":"RegexToken","regex":"/<|>/"},"fragment":false,"hidden":false},{"$type":"ParserRule","fragment":true,"name":"EOL","dataType":"string","definition":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@23"},"arguments":[],"cardinality":"+"},{"$type":"EndOfFile"}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"TitleAndAccessibilities","definition":{"$type":"Group","elements":[{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"accDescr","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@15"},"arguments":[]}},{"$type":"Assignment","feature":"accTitle","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@16"},"arguments":[]}},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[]}],"cardinality":"+"},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"BOOLEAN","type":{"$type":"ReturnType","name":"boolean"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"true"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"false"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_DESCR","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accDescr(?:[\\\\t ]*:([^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)|\\\\s*{([^}]*)})/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accTitle[\\\\t ]*:(?:[^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*title(?:[\\\\t ][^\\\\n\\\\r]*?(?=%%)|[\\\\t ][^\\\\n\\\\r]*|)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"FLOAT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/[0-9]+\\\\.[0-9]+(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"INT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/0|[1-9][0-9]*(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NUMBER","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@18"}},{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@19"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"STRING","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*\\"|\'([^\'\\\\\\\\]|\\\\\\\\.)*\'/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ID","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/[\\\\w]([-\\\\w]*\\\\w)?/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NEWLINE","definition":{"$type":"RegexToken","regex":"/\\\\r?\\\\n/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","hidden":true,"name":"WHITESPACE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]+/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"YAML","definition":{"$type":"RegexToken","regex":"/---[\\\\t ]*\\\\r?\\\\n(?:[\\\\S\\\\s]*?\\\\r?\\\\n)?---(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"DIRECTIVE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%{[\\\\S\\\\s]*?}%%(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"SINGLE_LINE_COMMENT","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%[^\\\\n\\\\r]*/"},"fragment":false},{"$type":"TerminalRule","name":"ARCH_ICON","definition":{"$type":"RegexToken","regex":"/\\\\([\\\\w-:]+\\\\)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ARCH_TITLE","definition":{"$type":"RegexToken","regex":"/\\\\[[\\\\w ]+\\\\]/"},"fragment":false,"hidden":false}],"definesHiddenTokens":false,"hiddenTokens":[],"interfaces":[],"types":[],"usedGrammars":[]}')),"ArchitectureGrammar"),GitGraphGrammar=__name(()=>loadedGitGraphGrammar??(loadedGitGraphGrammar=loadGrammarFromJson('{"$type":"Grammar","isDeclared":true,"name":"GitGraph","imports":[],"rules":[{"$type":"ParserRule","entry":true,"name":"GitGraph","definition":{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[],"cardinality":"*"},{"$type":"Alternatives","elements":[{"$type":"Keyword","value":"gitGraph"},{"$type":"Group","elements":[{"$type":"Keyword","value":"gitGraph"},{"$type":"Keyword","value":":"}]},{"$type":"Keyword","value":"gitGraph:"},{"$type":"Group","elements":[{"$type":"Keyword","value":"gitGraph"},{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]},{"$type":"Keyword","value":":"}]}]},{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@9"},"arguments":[]},{"$type":"Assignment","feature":"statements","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@1"},"arguments":[]}}],"cardinality":"*"}]},"definesHiddenTokens":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Statement","definition":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@3"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@4"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@5"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@6"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@7"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Direction","definition":{"$type":"Assignment","feature":"dir","operator":"=","terminal":{"$type":"Alternatives","elements":[{"$type":"Keyword","value":"LR"},{"$type":"Keyword","value":"TB"},{"$type":"Keyword","value":"BT"}]}},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Commit","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":"commit"},{"$type":"Alternatives","elements":[{"$type":"Group","elements":[{"$type":"Keyword","value":"id:"},{"$type":"Assignment","feature":"id","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"msg:","cardinality":"?"},{"$type":"Assignment","feature":"message","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"tag:"},{"$type":"Assignment","feature":"tags","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"type:"},{"$type":"Assignment","feature":"type","operator":"=","terminal":{"$type":"Alternatives","elements":[{"$type":"Keyword","value":"NORMAL"},{"$type":"Keyword","value":"REVERSE"},{"$type":"Keyword","value":"HIGHLIGHT"}]}}]}],"cardinality":"*"},{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Branch","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":"branch"},{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@24"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}]}},{"$type":"Group","elements":[{"$type":"Keyword","value":"order:"},{"$type":"Assignment","feature":"order","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@15"},"arguments":[]}}],"cardinality":"?"},{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Merge","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":"merge"},{"$type":"Assignment","feature":"branch","operator":"=","terminal":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@24"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}]}},{"$type":"Alternatives","elements":[{"$type":"Group","elements":[{"$type":"Keyword","value":"id:"},{"$type":"Assignment","feature":"id","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"tag:"},{"$type":"Assignment","feature":"tags","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"type:"},{"$type":"Assignment","feature":"type","operator":"=","terminal":{"$type":"Alternatives","elements":[{"$type":"Keyword","value":"NORMAL"},{"$type":"Keyword","value":"REVERSE"},{"$type":"Keyword","value":"HIGHLIGHT"}]}}]}],"cardinality":"*"},{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Checkout","definition":{"$type":"Group","elements":[{"$type":"Alternatives","elements":[{"$type":"Keyword","value":"checkout"},{"$type":"Keyword","value":"switch"}]},{"$type":"Assignment","feature":"branch","operator":"=","terminal":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@24"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"CherryPicking","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":"cherry-pick"},{"$type":"Alternatives","elements":[{"$type":"Group","elements":[{"$type":"Keyword","value":"id:"},{"$type":"Assignment","feature":"id","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"tag:"},{"$type":"Assignment","feature":"tags","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"parent:"},{"$type":"Assignment","feature":"parent","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]}],"cardinality":"*"},{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"EOL","dataType":"string","definition":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[],"cardinality":"+"},{"$type":"EndOfFile"}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"TitleAndAccessibilities","definition":{"$type":"Group","elements":[{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"accDescr","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@11"},"arguments":[]}},{"$type":"Assignment","feature":"accTitle","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[]}},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[]}}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]}],"cardinality":"+"},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"BOOLEAN","type":{"$type":"ReturnType","name":"boolean"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"true"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"false"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_DESCR","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accDescr(?:[\\\\t ]*:([^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)|\\\\s*{([^}]*)})/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accTitle[\\\\t ]*:(?:[^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*title(?:[\\\\t ][^\\\\n\\\\r]*?(?=%%)|[\\\\t ][^\\\\n\\\\r]*|)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"FLOAT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/[0-9]+\\\\.[0-9]+(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"INT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/0|[1-9][0-9]*(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NUMBER","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@14"}},{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@15"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"STRING","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*\\"|\'([^\'\\\\\\\\]|\\\\\\\\.)*\'/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ID","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/[\\\\w]([-\\\\w]*\\\\w)?/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NEWLINE","definition":{"$type":"RegexToken","regex":"/\\\\r?\\\\n/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","hidden":true,"name":"WHITESPACE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]+/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"YAML","definition":{"$type":"RegexToken","regex":"/---[\\\\t ]*\\\\r?\\\\n(?:[\\\\S\\\\s]*?\\\\r?\\\\n)?---(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"DIRECTIVE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%{[\\\\S\\\\s]*?}%%(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"SINGLE_LINE_COMMENT","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%[^\\\\n\\\\r]*/"},"fragment":false},{"$type":"TerminalRule","name":"REFERENCE","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/\\\\w([-\\\\./\\\\w]*[-\\\\w])?/"},"fragment":false,"hidden":false}],"definesHiddenTokens":false,"hiddenTokens":[],"interfaces":[],"types":[],"usedGrammars":[]}')),"GitGraphGrammar"),RadarGrammar=__name(()=>loadedRadarGrammar??(loadedRadarGrammar=loadGrammarFromJson('{"$type":"Grammar","isDeclared":true,"name":"Radar","imports":[],"rules":[{"$type":"ParserRule","entry":true,"name":"Radar","definition":{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"*"},{"$type":"Alternatives","elements":[{"$type":"Keyword","value":"radar-beta"},{"$type":"Keyword","value":"radar-beta:"},{"$type":"Group","elements":[{"$type":"Keyword","value":"radar-beta"},{"$type":"Keyword","value":":"}]}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"*"},{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@10"},"arguments":[]},{"$type":"Group","elements":[{"$type":"Keyword","value":"axis"},{"$type":"Assignment","feature":"axes","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"Keyword","value":","},{"$type":"Assignment","feature":"axes","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]}}],"cardinality":"*"}]},{"$type":"Group","elements":[{"$type":"Keyword","value":"curve"},{"$type":"Assignment","feature":"curves","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@3"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"Keyword","value":","},{"$type":"Assignment","feature":"curves","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@3"},"arguments":[]}}],"cardinality":"*"}]},{"$type":"Group","elements":[{"$type":"Assignment","feature":"options","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@7"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"Keyword","value":","},{"$type":"Assignment","feature":"options","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@7"},"arguments":[]}}],"cardinality":"*"}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[]}],"cardinality":"*"}]},"definesHiddenTokens":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"Label","definition":{"$type":"Group","elements":[{"$type":"Keyword","value":"["},{"$type":"Assignment","feature":"label","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@18"},"arguments":[]}},{"$type":"Keyword","value":"]"}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Axis","definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@1"},"arguments":[],"cardinality":"?"}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Curve","definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@1"},"arguments":[],"cardinality":"?"},{"$type":"Keyword","value":"{"},{"$type":"RuleCall","rule":{"$ref":"#/rules@4"},"arguments":[]},{"$type":"Keyword","value":"}"}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"Entries","definition":{"$type":"Alternatives","elements":[{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"*"},{"$type":"Assignment","feature":"entries","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@6"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"Keyword","value":","},{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"*"},{"$type":"Assignment","feature":"entries","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@6"},"arguments":[]}}],"cardinality":"*"},{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"*"}]},{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"*"},{"$type":"Assignment","feature":"entries","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@5"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"Keyword","value":","},{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"*"},{"$type":"Assignment","feature":"entries","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@5"},"arguments":[]}}],"cardinality":"*"},{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"*"}]}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"DetailedEntry","returnType":{"$ref":"#/interfaces@0"},"definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"axis","operator":"=","terminal":{"$type":"CrossReference","type":{"$ref":"#/rules@2"},"terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[]},"deprecatedSyntax":false}},{"$type":"Keyword","value":":","cardinality":"?"},{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"NumberEntry","returnType":{"$ref":"#/interfaces@0"},"definition":{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Option","definition":{"$type":"Alternatives","elements":[{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"Keyword","value":"showLegend"}},{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@11"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"Keyword","value":"ticks"}},{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"Keyword","value":"max"}},{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"Keyword","value":"min"}},{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}}]},{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"Keyword","value":"graticule"}},{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]}}]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"GRATICULE","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"circle"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"polygon"}}]},"fragment":false,"hidden":false},{"$type":"ParserRule","fragment":true,"name":"EOL","dataType":"string","definition":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[],"cardinality":"+"},{"$type":"EndOfFile"}]},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","fragment":true,"name":"TitleAndAccessibilities","definition":{"$type":"Group","elements":[{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"accDescr","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@12"},"arguments":[]}},{"$type":"Assignment","feature":"accTitle","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@13"},"arguments":[]}},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@14"},"arguments":[]}}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@9"},"arguments":[]}],"cardinality":"+"},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"BOOLEAN","type":{"$type":"ReturnType","name":"boolean"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"true"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"false"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_DESCR","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accDescr(?:[\\\\t ]*:([^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)|\\\\s*{([^}]*)})/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accTitle[\\\\t ]*:(?:[^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*title(?:[\\\\t ][^\\\\n\\\\r]*?(?=%%)|[\\\\t ][^\\\\n\\\\r]*|)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"FLOAT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/[0-9]+\\\\.[0-9]+(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"INT","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"RegexToken","regex":"/0|[1-9][0-9]*(?!\\\\.)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NUMBER","type":{"$type":"ReturnType","name":"number"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@15"}},{"$type":"TerminalRuleCall","rule":{"$ref":"#/rules@16"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"STRING","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/\\"([^\\"\\\\\\\\]|\\\\\\\\.)*\\"|\'([^\'\\\\\\\\]|\\\\\\\\.)*\'/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ID","type":{"$type":"ReturnType","name":"string"},"definition":{"$type":"RegexToken","regex":"/[\\\\w]([-\\\\w]*\\\\w)?/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NEWLINE","definition":{"$type":"RegexToken","regex":"/\\\\r?\\\\n/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","hidden":true,"name":"WHITESPACE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]+/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"YAML","definition":{"$type":"RegexToken","regex":"/---[\\\\t ]*\\\\r?\\\\n(?:[\\\\S\\\\s]*?\\\\r?\\\\n)?---(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"DIRECTIVE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%{[\\\\S\\\\s]*?}%%(?:\\\\r?\\\\n|(?!\\\\S))/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"SINGLE_LINE_COMMENT","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*%%[^\\\\n\\\\r]*/"},"fragment":false}],"interfaces":[{"$type":"Interface","name":"Entry","attributes":[{"$type":"TypeAttribute","name":"axis","isOptional":true,"type":{"$type":"ReferenceType","referenceType":{"$type":"SimpleType","typeRef":{"$ref":"#/rules@2"}}}},{"$type":"TypeAttribute","name":"value","type":{"$type":"SimpleType","primitiveType":"number"},"isOptional":false}],"superTypes":[]}],"definesHiddenTokens":false,"hiddenTokens":[],"types":[],"usedGrammars":[]}')),"RadarGrammar"),TreemapGrammar=__name(()=>loadedTreemapGrammar??(loadedTreemapGrammar=loadGrammarFromJson('{"$type":"Grammar","isDeclared":true,"name":"Treemap","rules":[{"$type":"ParserRule","fragment":true,"name":"TitleAndAccessibilities","definition":{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"accDescr","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@2"},"arguments":[]}},{"$type":"Assignment","feature":"accTitle","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@3"},"arguments":[]}},{"$type":"Assignment","feature":"title","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@4"},"arguments":[]}}],"cardinality":"+"},"definesHiddenTokens":false,"entry":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"BOOLEAN","type":{"$type":"ReturnType","name":"boolean"},"definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"true"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"false"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_DESCR","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accDescr(?:[\\\\t ]*:([^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)|\\\\s*{([^}]*)})/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ACC_TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*accTitle[\\\\t ]*:(?:[^\\\\n\\\\r]*?(?=%%)|[^\\\\n\\\\r]*)/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"TITLE","definition":{"$type":"RegexToken","regex":"/[\\\\t ]*title(?:[\\\\t ][^\\\\n\\\\r]*?(?=%%)|[\\\\t ][^\\\\n\\\\r]*|)/"},"fragment":false,"hidden":false},{"$type":"ParserRule","entry":true,"name":"Treemap","returnType":{"$ref":"#/interfaces@4"},"definition":{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@6"},"arguments":[]},{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@0"},"arguments":[]},{"$type":"Assignment","feature":"TreemapRows","operator":"+=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@14"},"arguments":[]}}],"cardinality":"*"}]},"definesHiddenTokens":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"TREEMAP_KEYWORD","definition":{"$type":"TerminalAlternatives","elements":[{"$type":"CharacterRange","left":{"$type":"Keyword","value":"treemap-beta"}},{"$type":"CharacterRange","left":{"$type":"Keyword","value":"treemap"}}]},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"CLASS_DEF","definition":{"$type":"RegexToken","regex":"/classDef\\\\s+([a-zA-Z_][a-zA-Z0-9_]+)(?:\\\\s+([^;\\\\r\\\\n]*))?(?:;)?/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"STYLE_SEPARATOR","definition":{"$type":"CharacterRange","left":{"$type":"Keyword","value":":::"}},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"SEPARATOR","definition":{"$type":"CharacterRange","left":{"$type":"Keyword","value":":"}},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"COMMA","definition":{"$type":"CharacterRange","left":{"$type":"Keyword","value":","}},"fragment":false,"hidden":false},{"$type":"TerminalRule","hidden":true,"name":"WS","definition":{"$type":"RegexToken","regex":"/[ \\\\t]+/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"ML_COMMENT","definition":{"$type":"RegexToken","regex":"/\\\\%\\\\%[^\\\\n]*/"},"fragment":false},{"$type":"TerminalRule","hidden":true,"name":"NL","definition":{"$type":"RegexToken","regex":"/\\\\r?\\\\n/"},"fragment":false},{"$type":"ParserRule","name":"TreemapRow","definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"indent","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[]},"cardinality":"?"},{"$type":"Alternatives","elements":[{"$type":"Assignment","feature":"item","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@16"},"arguments":[]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@15"},"arguments":[]}]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"ClassDef","dataType":"string","definition":{"$type":"RuleCall","rule":{"$ref":"#/rules@7"},"arguments":[]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Item","returnType":{"$ref":"#/interfaces@0"},"definition":{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@18"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@17"},"arguments":[]}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Section","returnType":{"$ref":"#/interfaces@1"},"definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@23"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]},{"$type":"Assignment","feature":"classSelector","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[]}}],"cardinality":"?"}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"ParserRule","name":"Leaf","returnType":{"$ref":"#/interfaces@2"},"definition":{"$type":"Group","elements":[{"$type":"Assignment","feature":"name","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@23"},"arguments":[]}},{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[],"cardinality":"?"},{"$type":"Alternatives","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@9"},"arguments":[]},{"$type":"RuleCall","rule":{"$ref":"#/rules@10"},"arguments":[]}]},{"$type":"RuleCall","rule":{"$ref":"#/rules@19"},"arguments":[],"cardinality":"?"},{"$type":"Assignment","feature":"value","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@22"},"arguments":[]}},{"$type":"Group","elements":[{"$type":"RuleCall","rule":{"$ref":"#/rules@8"},"arguments":[]},{"$type":"Assignment","feature":"classSelector","operator":"=","terminal":{"$type":"RuleCall","rule":{"$ref":"#/rules@20"},"arguments":[]}}],"cardinality":"?"}]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"INDENTATION","definition":{"$type":"RegexToken","regex":"/[ \\\\t]{1,}/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"ID2","definition":{"$type":"RegexToken","regex":"/[a-zA-Z_][a-zA-Z0-9_]*/"},"fragment":false,"hidden":false},{"$type":"TerminalRule","name":"NUMBER2","definition":{"$type":"RegexToken","regex":"/[0-9_\\\\.\\\\,]+/"},"fragment":false,"hidden":false},{"$type":"ParserRule","name":"MyNumber","dataType":"number","definition":{"$type":"RuleCall","rule":{"$ref":"#/rules@21"},"arguments":[]},"definesHiddenTokens":false,"entry":false,"fragment":false,"hiddenTokens":[],"parameters":[],"wildcard":false},{"$type":"TerminalRule","name":"STRING2","definition":{"$type":"RegexToken","regex":"/\\"[^\\"]*\\"|\'[^\']*\'/"},"fragment":false,"hidden":false}],"interfaces":[{"$type":"Interface","name":"Item","attributes":[{"$type":"TypeAttribute","name":"name","type":{"$type":"SimpleType","primitiveType":"string"},"isOptional":false},{"$type":"TypeAttribute","name":"classSelector","isOptional":true,"type":{"$type":"SimpleType","primitiveType":"string"}}],"superTypes":[]},{"$type":"Interface","name":"Section","superTypes":[{"$ref":"#/interfaces@0"}],"attributes":[]},{"$type":"Interface","name":"Leaf","superTypes":[{"$ref":"#/interfaces@0"}],"attributes":[{"$type":"TypeAttribute","name":"value","type":{"$type":"SimpleType","primitiveType":"number"},"isOptional":false}]},{"$type":"Interface","name":"ClassDefStatement","attributes":[{"$type":"TypeAttribute","name":"className","type":{"$type":"SimpleType","primitiveType":"string"},"isOptional":false},{"$type":"TypeAttribute","name":"styleText","type":{"$type":"SimpleType","primitiveType":"string"},"isOptional":false}],"superTypes":[]},{"$type":"Interface","name":"Treemap","attributes":[{"$type":"TypeAttribute","name":"TreemapRows","type":{"$type":"ArrayType","elementType":{"$type":"SimpleType","typeRef":{"$ref":"#/rules@14"}}},"isOptional":false},{"$type":"TypeAttribute","name":"title","isOptional":true,"type":{"$type":"SimpleType","primitiveType":"string"}},{"$type":"TypeAttribute","name":"accTitle","isOptional":true,"type":{"$type":"SimpleType","primitiveType":"string"}},{"$type":"TypeAttribute","name":"accDescr","isOptional":true,"type":{"$type":"SimpleType","primitiveType":"string"}}],"superTypes":[]}],"definesHiddenTokens":false,"hiddenTokens":[],"imports":[],"types":[],"usedGrammars":[],"$comment":"/**\\n * Treemap grammar for Langium\\n * Converted from mindmap grammar\\n *\\n * The ML_COMMENT and NL hidden terminals handle whitespace, comments, and newlines\\n * before the treemap keyword, allowing for empty lines and comments before the\\n * treemap declaration.\\n */"}')),"TreemapGrammar"),InfoLanguageMetaData={languageId:"info",fileExtensions:[".mmd",".mermaid"],caseInsensitive:!1,mode:"production"},PacketLanguageMetaData={languageId:"packet",fileExtensions:[".mmd",".mermaid"],caseInsensitive:!1,mode:"production"},PieLanguageMetaData={languageId:"pie",fileExtensions:[".mmd",".mermaid"],caseInsensitive:!1,mode:"production"},ArchitectureLanguageMetaData={languageId:"architecture",fileExtensions:[".mmd",".mermaid"],caseInsensitive:!1,mode:"production"},GitGraphLanguageMetaData={languageId:"gitGraph",fileExtensions:[".mmd",".mermaid"],caseInsensitive:!1,mode:"production"},RadarLanguageMetaData={languageId:"radar",fileExtensions:[".mmd",".mermaid"],caseInsensitive:!1,mode:"production"},TreemapLanguageMetaData={languageId:"treemap",fileExtensions:[".mmd",".mermaid"],caseInsensitive:!1,mode:"production"},MermaidGeneratedSharedModule={AstReflection:__name(()=>new MermaidAstReflection,"AstReflection")},InfoGeneratedModule={Grammar:__name(()=>InfoGrammar(),"Grammar"),LanguageMetaData:__name(()=>InfoLanguageMetaData,"LanguageMetaData"),parser:{}},PacketGeneratedModule={Grammar:__name(()=>PacketGrammar(),"Grammar"),LanguageMetaData:__name(()=>PacketLanguageMetaData,"LanguageMetaData"),parser:{}},PieGeneratedModule={Grammar:__name(()=>PieGrammar(),"Grammar"),LanguageMetaData:__name(()=>PieLanguageMetaData,"LanguageMetaData"),parser:{}},ArchitectureGeneratedModule={Grammar:__name(()=>ArchitectureGrammar(),"Grammar"),LanguageMetaData:__name(()=>ArchitectureLanguageMetaData,"LanguageMetaData"),parser:{}},GitGraphGeneratedModule={Grammar:__name(()=>GitGraphGrammar(),"Grammar"),LanguageMetaData:__name(()=>GitGraphLanguageMetaData,"LanguageMetaData"),parser:{}},RadarGeneratedModule={Grammar:__name(()=>RadarGrammar(),"Grammar"),LanguageMetaData:__name(()=>RadarLanguageMetaData,"LanguageMetaData"),parser:{}},TreemapGeneratedModule={Grammar:__name(()=>TreemapGrammar(),"Grammar"),LanguageMetaData:__name(()=>TreemapLanguageMetaData,"LanguageMetaData"),parser:{}},rulesRegexes={ACC_DESCR:/accDescr(?:[\t ]*:([^\n\r]*)|\s*{([^}]*)})/,ACC_TITLE:/accTitle[\t ]*:([^\n\r]*)/,TITLE:/title([\t ][^\n\r]*|)/},AbstractMermaidValueConverter=class extends value_converter.d{static{__name(this,"AbstractMermaidValueConverter")}runConverter(rule,input,cstNode){let value=this.runCommonConverter(rule,input,cstNode);return void 0===value&&(value=this.runCustomConverter(rule,input,cstNode)),void 0===value?super.runConverter(rule,input,cstNode):value}runCommonConverter(rule,input,_cstNode){const regex=rulesRegexes[rule.name];if(void 0===regex)return;const match=regex.exec(input);return null!==match?void 0!==match[1]?match[1].trim().replace(/[\t ]{2,}/gm," "):void 0!==match[2]?match[2].replace(/^\s*/gm,"").replace(/\s+$/gm,"").replace(/[\t ]{2,}/gm," ").replace(/[\n\r]{2,}/gm,"\n"):void 0:void 0}},CommonValueConverter=class extends AbstractMermaidValueConverter{static{__name(this,"CommonValueConverter")}runCustomConverter(_rule,_input,_cstNode){}},AbstractMermaidTokenBuilder=class extends token_builder.Q{static{__name(this,"AbstractMermaidTokenBuilder")}constructor(keywords){super(),this.keywords=new Set(keywords)}buildKeywordTokens(rules,terminalTokens,options){const tokenTypes=super.buildKeywordTokens(rules,terminalTokens,options);return tokenTypes.forEach(tokenType=>{this.keywords.has(tokenType.name)&&void 0!==tokenType.PATTERN&&(tokenType.PATTERN=new RegExp(tokenType.PATTERN.toString()+"(?:(?=%%)|(?!\\S))"))}),tokenTypes}};(class extends AbstractMermaidTokenBuilder{static{__name(this,"CommonTokenBuilder")}})},"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>createGitGraphServices});var _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs"),langium__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/default-module.js"),langium__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/dependency-injection.js"),langium__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/workspace/file-system-provider.js"),GitGraphTokenBuilder=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.mR{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"GitGraphTokenBuilder")}constructor(){super(["gitGraph"])}},GitGraphModule={parser:{TokenBuilder:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new GitGraphTokenBuilder,"TokenBuilder"),ValueConverter:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.Tm,"ValueConverter")}};function createGitGraphServices(context=langium__WEBPACK_IMPORTED_MODULE_3__.D){const shared=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.u)(context),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.sr),GitGraph=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.t)({shared}),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.eZ,GitGraphModule);return shared.ServiceRegistry.register(GitGraph),{shared,GitGraph}}(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(createGitGraphServices,"createGitGraphServices")},"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-JEIROHC2.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>createArchitectureServices});var _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs"),langium__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/default-module.js"),langium__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/dependency-injection.js"),langium__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/workspace/file-system-provider.js"),ArchitectureTokenBuilder=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.mR{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"ArchitectureTokenBuilder")}constructor(){super(["architecture"])}},ArchitectureValueConverter=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.dg{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"ArchitectureValueConverter")}runCustomConverter(rule,input,_cstNode){return"ARCH_ICON"===rule.name?input.replace(/[()]/g,"").trim():"ARCH_TEXT_ICON"===rule.name?input.replace(/["()]/g,""):"ARCH_TITLE"===rule.name?input.replace(/[[\]]/g,"").trim():void 0}},ArchitectureModule={parser:{TokenBuilder:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new ArchitectureTokenBuilder,"TokenBuilder"),ValueConverter:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new ArchitectureValueConverter,"ValueConverter")}};function createArchitectureServices(context=langium__WEBPACK_IMPORTED_MODULE_3__.D){const shared=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.u)(context),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.sr),Architecture=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.t)({shared}),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.jE,ArchitectureModule);return shared.ServiceRegistry.register(Architecture),{shared,Architecture}}(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(createArchitectureServices,"createArchitectureServices")},"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>createPacketServices});var _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs"),langium__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/default-module.js"),langium__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/dependency-injection.js"),langium__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/workspace/file-system-provider.js"),PacketTokenBuilder=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.mR{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"PacketTokenBuilder")}constructor(){super(["packet"])}},PacketModule={parser:{TokenBuilder:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new PacketTokenBuilder,"TokenBuilder"),ValueConverter:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.Tm,"ValueConverter")}};function createPacketServices(context=langium__WEBPACK_IMPORTED_MODULE_3__.D){const shared=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.u)(context),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.sr),Packet=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.t)({shared}),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.AM,PacketModule);return shared.ServiceRegistry.register(Packet),{shared,Packet}}(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(createPacketServices,"createPacketServices")},"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{v:()=>createInfoServices});var _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs"),langium__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/default-module.js"),langium__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/dependency-injection.js"),langium__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/workspace/file-system-provider.js"),InfoTokenBuilder=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.mR{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"InfoTokenBuilder")}constructor(){super(["info","showInfo"])}},InfoModule={parser:{TokenBuilder:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new InfoTokenBuilder,"TokenBuilder"),ValueConverter:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.Tm,"ValueConverter")}};function createInfoServices(context=langium__WEBPACK_IMPORTED_MODULE_3__.D){const shared=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.u)(context),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.sr),Info=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.t)({shared}),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.e5,InfoModule);return shared.ServiceRegistry.register(Info),{shared,Info}}(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(createInfoServices,"createInfoServices")},"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f:()=>createRadarServices});var _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs"),langium__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/default-module.js"),langium__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/dependency-injection.js"),langium__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/workspace/file-system-provider.js"),RadarTokenBuilder=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.mR{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"RadarTokenBuilder")}constructor(){super(["radar-beta"])}},RadarModule={parser:{TokenBuilder:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new RadarTokenBuilder,"TokenBuilder"),ValueConverter:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.Tm,"ValueConverter")}};function createRadarServices(context=langium__WEBPACK_IMPORTED_MODULE_3__.D){const shared=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.u)(context),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.sr),Radar=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.t)({shared}),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.YP,RadarModule);return shared.ServiceRegistry.register(Radar),{shared,Radar}}(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(createRadarServices,"createRadarServices")},"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f:()=>createPieServices});var _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs"),langium__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/default-module.js"),langium__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/dependency-injection.js"),langium__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/workspace/file-system-provider.js"),PieTokenBuilder=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.mR{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"PieTokenBuilder")}constructor(){super(["pie","showData"])}},PieValueConverter=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.dg{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"PieValueConverter")}runCustomConverter(rule,input,_cstNode){if("PIE_SECTION_LABEL"===rule.name)return input.replace(/"/g,"").trim()}},PieModule={parser:{TokenBuilder:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new PieTokenBuilder,"TokenBuilder"),ValueConverter:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new PieValueConverter,"ValueConverter")}};function createPieServices(context=langium__WEBPACK_IMPORTED_MODULE_3__.D){const shared=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.u)(context),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.sr),Pie=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.t)({shared}),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.KX,PieModule);return shared.ServiceRegistry.register(Pie),{shared,Pie}}(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(createPieServices,"createPieServices")},"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>createTreemapServices});var _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs"),langium__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/default-module.js"),langium__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/dependency-injection.js"),langium__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/workspace/file-system-provider.js"),TreemapTokenBuilder=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.mR{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"TreemapTokenBuilder")}constructor(){super(["treemap"])}},classDefRegex=/classDef\s+([A-Z_a-z]\w+)(?:\s+([^\n\r;]*))?;?/,TreemapValueConverter=class extends _chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.dg{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"TreemapValueConverter")}runCustomConverter(rule,input,_cstNode){if("NUMBER2"===rule.name)return parseFloat(input.replace(/,/g,""));if("SEPARATOR"===rule.name)return input.substring(1,input.length-1);if("STRING2"===rule.name)return input.substring(1,input.length-1);if("INDENTATION"===rule.name)return input.length;if("ClassDef"===rule.name){if("string"!=typeof input)return input;const match=classDefRegex.exec(input);if(match)return{$type:"ClassDefStatement",className:match[1],styleText:match[2]||void 0}}}};function registerValidationChecks(services){const validator=services.validation.TreemapValidator,registry=services.validation.ValidationRegistry;if(registry){const checks={Treemap:validator.checkSingleRoot.bind(validator)};registry.register(checks,validator)}}(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(registerValidationChecks,"registerValidationChecks");var TreemapValidator=class{static{(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(this,"TreemapValidator")}checkSingleRoot(doc,accept){let rootNodeIndentation;for(const row of doc.TreemapRows)row.item&&(void 0===rootNodeIndentation&&void 0===row.indent?rootNodeIndentation=0:(void 0===row.indent||void 0!==rootNodeIndentation&&rootNodeIndentation>=parseInt(row.indent,10))&&accept("error","Multiple root nodes are not allowed in a treemap.",{node:row,property:"item"}))}},TreemapModule={parser:{TokenBuilder:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new TreemapTokenBuilder,"TokenBuilder"),ValueConverter:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new TreemapValueConverter,"ValueConverter")},validation:{TreemapValidator:(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(()=>new TreemapValidator,"TreemapValidator")}};function createTreemapServices(context=langium__WEBPACK_IMPORTED_MODULE_3__.D){const shared=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.u)(context),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.sr),Treemap=(0,langium__WEBPACK_IMPORTED_MODULE_2__.WQ)((0,langium__WEBPACK_IMPORTED_MODULE_1__.t)({shared}),_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.eV,TreemapModule);return shared.ServiceRegistry.register(Treemap),registerValidationChecks(Treemap),{shared,Treemap}}(0,_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_0__.K2)(createTreemapServices,"createTreemapServices")},"./node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{qg:()=>parse});__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs"),__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs"),__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs"),__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs"),__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-JEIROHC2.mjs"),__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs"),__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs");var _chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs"),parsers={},initializers={info:(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(async()=>{const{createInfoServices:createInfoServices2}=await __webpack_require__.e(34903).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/info-63CPKGFF.mjs")),parser=createInfoServices2().Info.parser.LangiumParser;parsers.info=parser},"info"),packet:(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(async()=>{const{createPacketServices:createPacketServices2}=await __webpack_require__.e(74579).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/packet-HUATNLJX.mjs")),parser=createPacketServices2().Packet.parser.LangiumParser;parsers.packet=parser},"packet"),pie:(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(async()=>{const{createPieServices:createPieServices2}=await __webpack_require__.e(25941).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/pie-WTHONI2E.mjs")),parser=createPieServices2().Pie.parser.LangiumParser;parsers.pie=parser},"pie"),architecture:(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(async()=>{const{createArchitectureServices:createArchitectureServices2}=await __webpack_require__.e(99213).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/architecture-O4VJ6CD3.mjs")),parser=createArchitectureServices2().Architecture.parser.LangiumParser;parsers.architecture=parser},"architecture"),gitGraph:(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(async()=>{const{createGitGraphServices:createGitGraphServices2}=await __webpack_require__.e(387).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/gitGraph-ZV4HHKMB.mjs")),parser=createGitGraphServices2().GitGraph.parser.LangiumParser;parsers.gitGraph=parser},"gitGraph"),radar:(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(async()=>{const{createRadarServices:createRadarServices2}=await __webpack_require__.e(41101).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/radar-NJJJXTRR.mjs")),parser=createRadarServices2().Radar.parser.LangiumParser;parsers.radar=parser},"radar"),treemap:(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(async()=>{const{createTreemapServices:createTreemapServices2}=await __webpack_require__.e(42713).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/treemap-75Q7IDZK.mjs")),parser=createTreemapServices2().Treemap.parser.LangiumParser;parsers.treemap=parser},"treemap")};async function parse(diagramType,text){const initializer=initializers[diagramType];if(!initializer)throw new Error(`Unknown diagram type: ${diagramType}`);parsers[diagramType]||await initializer();const result=parsers[diagramType].parse(text);if(result.lexerErrors.length>0||result.parserErrors.length>0)throw new MermaidParseError(result);return result.value}(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(parse,"parse");var MermaidParseError=class extends Error{constructor(result){super(`Parsing failed: ${result.lexerErrors.map(err=>err.message).join("\n")} ${result.parserErrors.map(err=>err.message).join("\n")}`),this.result=result}static{(0,_chunks_mermaid_parser_core_chunk_4KMFLZZN_mjs__WEBPACK_IMPORTED_MODULE_7__.K2)(this,"MermaidParseError")}}},"./node_modules/chevrotain/lib/src/api.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ak:()=>Alternation,mT:()=>EMPTY_ALT,LT:()=>EOF,jr:()=>EmbeddedActionsParser,T6:()=>LLkLookaheadStrategy,JG:()=>Lexer,wL:()=>model_NonTerminal,c$:()=>Option,Y2:()=>Repetition,$P:()=>RepetitionMandatory,Cy:()=>RepetitionMandatoryWithSeparator,Pp:()=>RepetitionWithSeparator,BK:()=>Terminal,PW:()=>defaultLexerErrorProvider,my:()=>defaultParserErrorProvider,jk:()=>getLookaheadPaths,Sk:()=>tokens_public_tokenLabel,G:()=>tokenMatcher});var forEach=__webpack_require__("./node_modules/lodash-es/forEach.js"),lodash_es_values=__webpack_require__("./node_modules/lodash-es/values.js"),isEmpty=__webpack_require__("./node_modules/lodash-es/isEmpty.js"),lodash_es_map=__webpack_require__("./node_modules/lodash-es/map.js"),has=__webpack_require__("./node_modules/lodash-es/has.js"),clone=__webpack_require__("./node_modules/lodash-es/clone.js");function toFastProperties(toBecomeFast){function FakeConstructor(){}FakeConstructor.prototype=toBecomeFast;const fakeInstance=new FakeConstructor;function fakeAccess(){return typeof fakeInstance.bar}return fakeAccess(),fakeAccess(),toBecomeFast}const _baseSlice=function baseSlice(array,start,end){var index=-1,length=array.length;start<0&&(start=-start>length?0:length+start),(end=end>length?length:end)<0&&(end+=length),length=start>end?0:end-start>>>0,start>>>=0;for(var result=Array(length);++index<length;)result[index]=array[index+start];return result};var toInteger=__webpack_require__("./node_modules/lodash-es/toInteger.js");const lodash_es_drop=function drop(array,n,guard){var length=null==array?0:array.length;return length?(n=guard||void 0===n?1:(0,toInteger.A)(n),_baseSlice(array,n<0?0:n,length)):[]};var isString=__webpack_require__("./node_modules/lodash-es/isString.js"),_assignValue=__webpack_require__("./node_modules/lodash-es/_assignValue.js"),_copyObject=__webpack_require__("./node_modules/lodash-es/_copyObject.js"),_createAssigner=__webpack_require__("./node_modules/lodash-es/_createAssigner.js"),isArrayLike=__webpack_require__("./node_modules/lodash-es/isArrayLike.js"),_isPrototype=__webpack_require__("./node_modules/lodash-es/_isPrototype.js"),keys=__webpack_require__("./node_modules/lodash-es/keys.js"),assign_hasOwnProperty=Object.prototype.hasOwnProperty;const lodash_es_assign=(0,_createAssigner.A)(function(object,source){if((0,_isPrototype.A)(source)||(0,isArrayLike.A)(source))(0,_copyObject.A)(source,(0,keys.A)(source),object);else for(var key in source)assign_hasOwnProperty.call(source,key)&&(0,_assignValue.A)(object,key,source[key])});var _arrayMap=__webpack_require__("./node_modules/lodash-es/_arrayMap.js"),_baseIteratee=__webpack_require__("./node_modules/lodash-es/_baseIteratee.js"),_basePickBy=__webpack_require__("./node_modules/lodash-es/_basePickBy.js"),_getAllKeysIn=__webpack_require__("./node_modules/lodash-es/_getAllKeysIn.js");const lodash_es_pickBy=function pickBy(object,predicate){if(null==object)return{};var props=(0,_arrayMap.A)((0,_getAllKeysIn.A)(object),function(prop){return[prop]});return predicate=(0,_baseIteratee.A)(predicate),(0,_basePickBy.A)(object,props,function(value,path){return predicate(value,path[0])})};var _baseGetTag=__webpack_require__("./node_modules/lodash-es/_baseGetTag.js"),isObjectLike=__webpack_require__("./node_modules/lodash-es/isObjectLike.js");const _baseIsRegExp=function baseIsRegExp(value){return(0,isObjectLike.A)(value)&&"[object RegExp]"==(0,_baseGetTag.A)(value)};var _baseUnary=__webpack_require__("./node_modules/lodash-es/_baseUnary.js"),_nodeUtil=__webpack_require__("./node_modules/lodash-es/_nodeUtil.js"),nodeIsRegExp=_nodeUtil.A&&_nodeUtil.A.isRegExp;const lodash_es_isRegExp=nodeIsRegExp?(0,_baseUnary.A)(nodeIsRegExp):_baseIsRegExp;function tokenLabel(tokType){return function hasTokenLabel(obj){return(0,isString.A)(obj.LABEL)&&""!==obj.LABEL}(tokType)?tokType.LABEL:tokType.name}class AbstractProduction{get definition(){return this._definition}set definition(value){this._definition=value}constructor(_definition){this._definition=_definition}accept(visitor){visitor.visit(this),(0,forEach.A)(this.definition,prod=>{prod.accept(visitor)})}}class model_NonTerminal extends AbstractProduction{constructor(options){super([]),this.idx=1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}set definition(definition){}get definition(){return void 0!==this.referencedRule?this.referencedRule.definition:[]}accept(visitor){visitor.visit(this)}}class Rule extends AbstractProduction{constructor(options){super(options.definition),this.orgText="",lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}}class Alternative extends AbstractProduction{constructor(options){super(options.definition),this.ignoreAmbiguities=!1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}}class Option extends AbstractProduction{constructor(options){super(options.definition),this.idx=1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}}class RepetitionMandatory extends AbstractProduction{constructor(options){super(options.definition),this.idx=1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}}class RepetitionMandatoryWithSeparator extends AbstractProduction{constructor(options){super(options.definition),this.idx=1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}}class Repetition extends AbstractProduction{constructor(options){super(options.definition),this.idx=1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}}class RepetitionWithSeparator extends AbstractProduction{constructor(options){super(options.definition),this.idx=1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}}class Alternation extends AbstractProduction{get definition(){return this._definition}set definition(value){this._definition=value}constructor(options){super(options.definition),this.idx=1,this.ignoreAmbiguities=!1,this.hasPredicates=!1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}}class Terminal{constructor(options){this.idx=1,lodash_es_assign(this,lodash_es_pickBy(options,v=>void 0!==v))}accept(visitor){visitor.visit(this)}}function serializeProduction(node){function convertDefinition(definition){return(0,lodash_es_map.A)(definition,serializeProduction)}if(node instanceof model_NonTerminal){const serializedNonTerminal={type:"NonTerminal",name:node.nonTerminalName,idx:node.idx};return(0,isString.A)(node.label)&&(serializedNonTerminal.label=node.label),serializedNonTerminal}if(node instanceof Alternative)return{type:"Alternative",definition:convertDefinition(node.definition)};if(node instanceof Option)return{type:"Option",idx:node.idx,definition:convertDefinition(node.definition)};if(node instanceof RepetitionMandatory)return{type:"RepetitionMandatory",idx:node.idx,definition:convertDefinition(node.definition)};if(node instanceof RepetitionMandatoryWithSeparator)return{type:"RepetitionMandatoryWithSeparator",idx:node.idx,separator:serializeProduction(new Terminal({terminalType:node.separator})),definition:convertDefinition(node.definition)};if(node instanceof RepetitionWithSeparator)return{type:"RepetitionWithSeparator",idx:node.idx,separator:serializeProduction(new Terminal({terminalType:node.separator})),definition:convertDefinition(node.definition)};if(node instanceof Repetition)return{type:"Repetition",idx:node.idx,definition:convertDefinition(node.definition)};if(node instanceof Alternation)return{type:"Alternation",idx:node.idx,definition:convertDefinition(node.definition)};if(node instanceof Terminal){const serializedTerminal={type:"Terminal",name:node.terminalType.name,label:tokenLabel(node.terminalType),idx:node.idx};(0,isString.A)(node.label)&&(serializedTerminal.terminalLabel=node.label);const pattern=node.terminalType.PATTERN;return node.terminalType.PATTERN&&(serializedTerminal.pattern=lodash_es_isRegExp(pattern)?pattern.source:pattern),serializedTerminal}if(node instanceof Rule)return{type:"Rule",name:node.name,orgText:node.orgText,definition:convertDefinition(node.definition)};throw Error("non exhaustive match")}class visitor_GAstVisitor{visit(node){const nodeAny=node;switch(nodeAny.constructor){case model_NonTerminal:return this.visitNonTerminal(nodeAny);case Alternative:return this.visitAlternative(nodeAny);case Option:return this.visitOption(nodeAny);case RepetitionMandatory:return this.visitRepetitionMandatory(nodeAny);case RepetitionMandatoryWithSeparator:return this.visitRepetitionMandatoryWithSeparator(nodeAny);case RepetitionWithSeparator:return this.visitRepetitionWithSeparator(nodeAny);case Repetition:return this.visitRepetition(nodeAny);case Alternation:return this.visitAlternation(nodeAny);case Terminal:return this.visitTerminal(nodeAny);case Rule:return this.visitRule(nodeAny);default:throw Error("non exhaustive match")}}visitNonTerminal(node){}visitAlternative(node){}visitOption(node){}visitRepetition(node){}visitRepetitionMandatory(node){}visitRepetitionMandatoryWithSeparator(node){}visitRepetitionWithSeparator(node){}visitAlternation(node){}visitTerminal(node){}visitRule(node){}}var _arraySome=__webpack_require__("./node_modules/lodash-es/_arraySome.js"),_baseEach=__webpack_require__("./node_modules/lodash-es/_baseEach.js");const _baseSome=function baseSome(collection,predicate){var result;return(0,_baseEach.A)(collection,function(value,index,collection){return!(result=predicate(value,index,collection))}),!!result};var isArray=__webpack_require__("./node_modules/lodash-es/isArray.js"),_isIterateeCall=__webpack_require__("./node_modules/lodash-es/_isIterateeCall.js");const lodash_es_some=function some_some(collection,predicate,guard){var func=(0,isArray.A)(collection)?_arraySome.A:_baseSome;return guard&&(0,_isIterateeCall.A)(collection,predicate,guard)&&(predicate=void 0),func(collection,(0,_baseIteratee.A)(predicate,3))};var _baseIndexOf=__webpack_require__("./node_modules/lodash-es/_baseIndexOf.js"),nativeMax=Math.max;const lodash_es_includes=function includes(collection,value,fromIndex,guard){collection=(0,isArrayLike.A)(collection)?collection:(0,lodash_es_values.A)(collection),fromIndex=fromIndex&&!guard?(0,toInteger.A)(fromIndex):0;var length=collection.length;return fromIndex<0&&(fromIndex=nativeMax(length+fromIndex,0)),(0,isString.A)(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&(0,_baseIndexOf.A)(collection,value,fromIndex)>-1};const _arrayEvery=function arrayEvery(array,predicate){for(var index=-1,length=null==array?0:array.length;++index<length;)if(!predicate(array[index],index,array))return!1;return!0};const _baseEvery=function baseEvery(collection,predicate){var result=!0;return(0,_baseEach.A)(collection,function(value,index,collection){return result=!!predicate(value,index,collection)}),result};const lodash_es_every=function every(collection,predicate,guard){var func=(0,isArray.A)(collection)?_arrayEvery:_baseEvery;return guard&&(0,_isIterateeCall.A)(collection,predicate,guard)&&(predicate=void 0),func(collection,(0,_baseIteratee.A)(predicate,3))};function isOptionalProd(prod,alreadyVisited=[]){return!!(prod instanceof Option||prod instanceof Repetition||prod instanceof RepetitionWithSeparator)||(prod instanceof Alternation?lodash_es_some(prod.definition,subProd=>isOptionalProd(subProd,alreadyVisited)):!(prod instanceof model_NonTerminal&&lodash_es_includes(alreadyVisited,prod))&&(prod instanceof AbstractProduction&&(prod instanceof model_NonTerminal&&alreadyVisited.push(prod),lodash_es_every(prod.definition,subProd=>isOptionalProd(subProd,alreadyVisited)))))}function getProductionDslName(prod){if(prod instanceof model_NonTerminal)return"SUBRULE";if(prod instanceof Option)return"OPTION";if(prod instanceof Alternation)return"OR";if(prod instanceof RepetitionMandatory)return"AT_LEAST_ONE";if(prod instanceof RepetitionMandatoryWithSeparator)return"AT_LEAST_ONE_SEP";if(prod instanceof RepetitionWithSeparator)return"MANY_SEP";if(prod instanceof Repetition)return"MANY";if(prod instanceof Terminal)return"CONSUME";throw Error("non exhaustive match")}class RestWalker{walk(prod,prevRest=[]){(0,forEach.A)(prod.definition,(subProd,index)=>{const currRest=lodash_es_drop(prod.definition,index+1);if(subProd instanceof model_NonTerminal)this.walkProdRef(subProd,currRest,prevRest);else if(subProd instanceof Terminal)this.walkTerminal(subProd,currRest,prevRest);else if(subProd instanceof Alternative)this.walkFlat(subProd,currRest,prevRest);else if(subProd instanceof Option)this.walkOption(subProd,currRest,prevRest);else if(subProd instanceof RepetitionMandatory)this.walkAtLeastOne(subProd,currRest,prevRest);else if(subProd instanceof RepetitionMandatoryWithSeparator)this.walkAtLeastOneSep(subProd,currRest,prevRest);else if(subProd instanceof RepetitionWithSeparator)this.walkManySep(subProd,currRest,prevRest);else if(subProd instanceof Repetition)this.walkMany(subProd,currRest,prevRest);else{if(!(subProd instanceof Alternation))throw Error("non exhaustive match");this.walkOr(subProd,currRest,prevRest)}})}walkTerminal(terminal,currRest,prevRest){}walkProdRef(refProd,currRest,prevRest){}walkFlat(flatProd,currRest,prevRest){const fullOrRest=currRest.concat(prevRest);this.walk(flatProd,fullOrRest)}walkOption(optionProd,currRest,prevRest){const fullOrRest=currRest.concat(prevRest);this.walk(optionProd,fullOrRest)}walkAtLeastOne(atLeastOneProd,currRest,prevRest){const fullAtLeastOneRest=[new Option({definition:atLeastOneProd.definition})].concat(currRest,prevRest);this.walk(atLeastOneProd,fullAtLeastOneRest)}walkAtLeastOneSep(atLeastOneSepProd,currRest,prevRest){const fullAtLeastOneSepRest=restForRepetitionWithSeparator(atLeastOneSepProd,currRest,prevRest);this.walk(atLeastOneSepProd,fullAtLeastOneSepRest)}walkMany(manyProd,currRest,prevRest){const fullManyRest=[new Option({definition:manyProd.definition})].concat(currRest,prevRest);this.walk(manyProd,fullManyRest)}walkManySep(manySepProd,currRest,prevRest){const fullManySepRest=restForRepetitionWithSeparator(manySepProd,currRest,prevRest);this.walk(manySepProd,fullManySepRest)}walkOr(orProd,currRest,prevRest){const fullOrRest=currRest.concat(prevRest);(0,forEach.A)(orProd.definition,alt=>{const prodWrapper=new Alternative({definition:[alt]});this.walk(prodWrapper,fullOrRest)})}}function restForRepetitionWithSeparator(repSepProd,currRest,prevRest){return[new Option({definition:[new Terminal({terminalType:repSepProd.separator})].concat(repSepProd.definition)})].concat(currRest,prevRest)}var _baseUniq=__webpack_require__("./node_modules/lodash-es/_baseUniq.js");const lodash_es_uniq=function uniq(array){return array&&array.length?(0,_baseUniq.A)(array):[]};var lodash_es_flatten=__webpack_require__("./node_modules/lodash-es/flatten.js");function first(prod){if(prod instanceof model_NonTerminal)return first(prod.referencedRule);if(prod instanceof Terminal)return function firstForTerminal(terminal){return[terminal.terminalType]}(prod);if(function isSequenceProd(prod){return prod instanceof Alternative||prod instanceof Option||prod instanceof Repetition||prod instanceof RepetitionMandatory||prod instanceof RepetitionMandatoryWithSeparator||prod instanceof RepetitionWithSeparator||prod instanceof Terminal||prod instanceof Rule}(prod))return function firstForSequence(prod){let firstSet=[];const seq=prod.definition;let currSubProd,nextSubProdIdx=0,hasInnerProdsRemaining=seq.length>nextSubProdIdx,isLastInnerProdOptional=!0;for(;hasInnerProdsRemaining&&isLastInnerProdOptional;)currSubProd=seq[nextSubProdIdx],isLastInnerProdOptional=isOptionalProd(currSubProd),firstSet=firstSet.concat(first(currSubProd)),nextSubProdIdx+=1,hasInnerProdsRemaining=seq.length>nextSubProdIdx;return lodash_es_uniq(firstSet)}(prod);if(function isBranchingProd(prod){return prod instanceof Alternation}(prod))return function firstForBranching(prod){const allAlternativesFirsts=(0,lodash_es_map.A)(prod.definition,innerProd=>first(innerProd));return lodash_es_uniq((0,lodash_es_flatten.A)(allAlternativesFirsts))}(prod);throw Error("non exhaustive match")}class ResyncFollowsWalker extends RestWalker{constructor(topProd){super(),this.topProd=topProd,this.follows={}}startWalking(){return this.walk(this.topProd),this.follows}walkTerminal(terminal,currRest,prevRest){}walkProdRef(refProd,currRest,prevRest){const followName=function buildBetweenProdsFollowPrefix(inner,occurenceInParent){return inner.name+occurenceInParent+"_~IN~_"}(refProd.referencedRule,refProd.idx)+this.topProd.name,fullRest=currRest.concat(prevRest),t_in_topProd_follows=first(new Alternative({definition:fullRest}));this.follows[followName]=t_in_topProd_follows}}var isUndefined=__webpack_require__("./node_modules/lodash-es/isUndefined.js"),api=__webpack_require__("./node_modules/@chevrotain/regexp-to-ast/lib/src/api.js"),defaults=__webpack_require__("./node_modules/lodash-es/defaults.js"),_arrayFilter=__webpack_require__("./node_modules/lodash-es/_arrayFilter.js"),_baseFilter=__webpack_require__("./node_modules/lodash-es/_baseFilter.js");const lodash_es_negate=function negate(predicate){if("function"!=typeof predicate)throw new TypeError("Expected a function");return function(){var args=arguments;switch(args.length){case 0:return!predicate.call(this);case 1:return!predicate.call(this,args[0]);case 2:return!predicate.call(this,args[0],args[1]);case 3:return!predicate.call(this,args[0],args[1],args[2])}return!predicate.apply(this,args)}};const lodash_es_reject=function reject(collection,predicate){return((0,isArray.A)(collection)?_arrayFilter.A:_baseFilter.A)(collection,lodash_es_negate((0,_baseIteratee.A)(predicate,3)))};var isFunction=__webpack_require__("./node_modules/lodash-es/isFunction.js"),indexOf_nativeMax=Math.max;const lodash_es_indexOf=function indexOf(array,value,fromIndex){var length=null==array?0:array.length;if(!length)return-1;var index=null==fromIndex?0:(0,toInteger.A)(fromIndex);return index<0&&(index=indexOf_nativeMax(length+index,0)),(0,_baseIndexOf.A)(array,value,index)};var reduce=__webpack_require__("./node_modules/lodash-es/reduce.js"),filter=__webpack_require__("./node_modules/lodash-es/filter.js"),_SetCache=__webpack_require__("./node_modules/lodash-es/_SetCache.js"),_arrayIncludes=__webpack_require__("./node_modules/lodash-es/_arrayIncludes.js"),_arrayIncludesWith=__webpack_require__("./node_modules/lodash-es/_arrayIncludesWith.js"),_cacheHas=__webpack_require__("./node_modules/lodash-es/_cacheHas.js");const _baseDifference=function baseDifference(array,values,iteratee,comparator){var index=-1,includes=_arrayIncludes.A,isCommon=!0,length=array.length,result=[],valuesLength=values.length;if(!length)return result;iteratee&&(values=(0,_arrayMap.A)(values,(0,_baseUnary.A)(iteratee))),comparator?(includes=_arrayIncludesWith.A,isCommon=!1):values.length>=200&&(includes=_cacheHas.A,isCommon=!1,values=new _SetCache.A(values));outer:for(;++index<length;){var value=array[index],computed=null==iteratee?value:iteratee(value);if(value=comparator||0!==value?value:0,isCommon&&computed==computed){for(var valuesIndex=valuesLength;valuesIndex--;)if(values[valuesIndex]===computed)continue outer;result.push(value)}else includes(values,computed,comparator)||result.push(value)}return result};var _baseFlatten=__webpack_require__("./node_modules/lodash-es/_baseFlatten.js"),_baseRest=__webpack_require__("./node_modules/lodash-es/_baseRest.js"),isArrayLikeObject=__webpack_require__("./node_modules/lodash-es/isArrayLikeObject.js");const lodash_es_difference=(0,_baseRest.A)(function(array,values){return(0,isArrayLikeObject.A)(array)?_baseDifference(array,(0,_baseFlatten.A)(values,1,isArrayLikeObject.A,!0)):[]});const lodash_es_compact=function compact(array){for(var index=-1,length=null==array?0:array.length,resIndex=0,result=[];++index<length;){var value=array[index];value&&(result[resIndex++]=value)}return result};const lodash_es_head=function head(array){return array&&array.length?array[0]:void 0};var find=__webpack_require__("./node_modules/lodash-es/find.js");function PRINT_ERROR(msg){console&&console.error&&console.error(`Error: ${msg}`)}function PRINT_WARNING(msg){console&&console.warn&&console.warn(`Warning: ${msg}`)}let regExpAstCache={};const regExpParser=new api.H;function getRegExpAst(regExp){const regExpStr=regExp.toString();if(regExpAstCache.hasOwnProperty(regExpStr))return regExpAstCache[regExpStr];{const regExpAst=regExpParser.pattern(regExpStr);return regExpAstCache[regExpStr]=regExpAst,regExpAst}}const failedOptimizationPrefixMsg='Unable to use "first char" lexer optimizations:\n';function getOptimizedStartCodesIndices(regExp,ensureOptimizations=!1){try{const ast=getRegExpAst(regExp);return firstCharOptimizedIndices(ast.value,{},ast.flags.ignoreCase)}catch(e){if("Complement Sets are not supported for first char optimization"===e.message)ensureOptimizations&&PRINT_WARNING(`${failedOptimizationPrefixMsg}\tUnable to optimize: < ${regExp.toString()} >\n\tComplement Sets cannot be automatically optimized.\n\tThis will disable the lexer's first char optimizations.\n\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.`);else{let msgSuffix="";ensureOptimizations&&(msgSuffix="\n\tThis will disable the lexer's first char optimizations.\n\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details."),PRINT_ERROR(`${failedOptimizationPrefixMsg}\n\tFailed parsing: < ${regExp.toString()} >\n\tUsing the @chevrotain/regexp-to-ast library\n\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues`+msgSuffix)}}return[]}function firstCharOptimizedIndices(ast,result,ignoreCase){switch(ast.type){case"Disjunction":for(let i=0;i<ast.value.length;i++)firstCharOptimizedIndices(ast.value[i],result,ignoreCase);break;case"Alternative":const terms=ast.value;for(let i=0;i<terms.length;i++){const term=terms[i];switch(term.type){case"EndAnchor":case"GroupBackReference":case"Lookahead":case"NegativeLookahead":case"StartAnchor":case"WordBoundary":case"NonWordBoundary":continue}const atom=term;switch(atom.type){case"Character":addOptimizedIdxToResult(atom.value,result,ignoreCase);break;case"Set":if(!0===atom.complement)throw Error("Complement Sets are not supported for first char optimization");(0,forEach.A)(atom.value,code=>{if("number"==typeof code)addOptimizedIdxToResult(code,result,ignoreCase);else{const range=code;if(!0===ignoreCase)for(let rangeCode=range.from;rangeCode<=range.to;rangeCode++)addOptimizedIdxToResult(rangeCode,result,ignoreCase);else{for(let rangeCode=range.from;rangeCode<=range.to&&rangeCode<minOptimizationVal;rangeCode++)addOptimizedIdxToResult(rangeCode,result,ignoreCase);if(range.to>=minOptimizationVal){const minUnOptVal=range.from>=minOptimizationVal?range.from:minOptimizationVal,maxUnOptVal=range.to,minOptIdx=charCodeToOptimizedIndex(minUnOptVal),maxOptIdx=charCodeToOptimizedIndex(maxUnOptVal);for(let currOptIdx=minOptIdx;currOptIdx<=maxOptIdx;currOptIdx++)result[currOptIdx]=currOptIdx}}}});break;case"Group":firstCharOptimizedIndices(atom.value,result,ignoreCase);break;default:throw Error("Non Exhaustive Match")}const isOptionalQuantifier=void 0!==atom.quantifier&&0===atom.quantifier.atLeast;if("Group"===atom.type&&!1===isWholeOptional(atom)||"Group"!==atom.type&&!1===isOptionalQuantifier)break}break;default:throw Error("non exhaustive match!")}return(0,lodash_es_values.A)(result)}function addOptimizedIdxToResult(code,result,ignoreCase){const optimizedCharIdx=charCodeToOptimizedIndex(code);result[optimizedCharIdx]=optimizedCharIdx,!0===ignoreCase&&function handleIgnoreCase(code,result){const char=String.fromCharCode(code),upperChar=char.toUpperCase();if(upperChar!==char){const optimizedCharIdx=charCodeToOptimizedIndex(upperChar.charCodeAt(0));result[optimizedCharIdx]=optimizedCharIdx}else{const lowerChar=char.toLowerCase();if(lowerChar!==char){const optimizedCharIdx=charCodeToOptimizedIndex(lowerChar.charCodeAt(0));result[optimizedCharIdx]=optimizedCharIdx}}}(code,result)}function findCode(setNode,targetCharCodes){return(0,find.A)(setNode.value,codeOrRange=>{if("number"==typeof codeOrRange)return lodash_es_includes(targetCharCodes,codeOrRange);{const range=codeOrRange;return void 0!==(0,find.A)(targetCharCodes,targetCode=>range.from<=targetCode&&targetCode<=range.to)}})}function isWholeOptional(ast){const quantifier=ast.quantifier;return!(!quantifier||0!==quantifier.atLeast)||!!ast.value&&((0,isArray.A)(ast.value)?lodash_es_every(ast.value,isWholeOptional):isWholeOptional(ast.value))}class CharCodeFinder extends api.z{constructor(targetCharCodes){super(),this.targetCharCodes=targetCharCodes,this.found=!1}visitChildren(node){if(!0!==this.found){switch(node.type){case"Lookahead":return void this.visitLookahead(node);case"NegativeLookahead":return void this.visitNegativeLookahead(node)}super.visitChildren(node)}}visitCharacter(node){lodash_es_includes(this.targetCharCodes,node.value)&&(this.found=!0)}visitSet(node){node.complement?void 0===findCode(node,this.targetCharCodes)&&(this.found=!0):void 0!==findCode(node,this.targetCharCodes)&&(this.found=!0)}}function canMatchCharCode(charCodes,pattern){if(pattern instanceof RegExp){const ast=getRegExpAst(pattern),charCodeFinder=new CharCodeFinder(charCodes);return charCodeFinder.visit(ast),charCodeFinder.found}return void 0!==(0,find.A)(pattern,char=>lodash_es_includes(charCodes,char.charCodeAt(0)))}const PATTERN="PATTERN";let SUPPORT_STICKY="boolean"==typeof new RegExp("(?:)").sticky;function analyzeTokenTypes(tokenTypes,options){const tracer=(options=(0,defaults.A)(options,{useSticky:SUPPORT_STICKY,debug:!1,safeMode:!1,positionTracking:"full",lineTerminatorCharacters:["\r","\n"],tracer:(msg,action)=>action()})).tracer;let onlyRelevantTypes;tracer("initCharCodeToOptimizedIndexMap",()=>{!function initCharCodeToOptimizedIndexMap(){if((0,isEmpty.A)(charCodeToOptimizedIdxMap)){charCodeToOptimizedIdxMap=new Array(65536);for(let i=0;i<65536;i++)charCodeToOptimizedIdxMap[i]=i>255?255+~~(i/255):i}}()}),tracer("Reject Lexer.NA",()=>{onlyRelevantTypes=lodash_es_reject(tokenTypes,currType=>currType.PATTERN===Lexer.NA)});let allTransformedPatterns,patternIdxToType,patternIdxToGroup,patternIdxToLongerAltIdxArr,patternIdxToPushMode,patternIdxToPopMode,patternIdxToCanLineTerminator,patternIdxToIsCustom,patternIdxToShort,emptyGroups,patternIdxToConfig,hasCustom=!1;tracer("Transform Patterns",()=>{hasCustom=!1,allTransformedPatterns=(0,lodash_es_map.A)(onlyRelevantTypes,currType=>{const currPattern=currType.PATTERN;if(lodash_es_isRegExp(currPattern)){const regExpSource=currPattern.source;return 1!==regExpSource.length||"^"===regExpSource||"$"===regExpSource||"."===regExpSource||currPattern.ignoreCase?2!==regExpSource.length||"\\"!==regExpSource[0]||lodash_es_includes(["d","D","s","S","t","r","n","t","0","c","b","B","f","v","w","W"],regExpSource[1])?options.useSticky?addStickyFlag(currPattern):addStartOfInput(currPattern):regExpSource[1]:regExpSource}if((0,isFunction.A)(currPattern))return hasCustom=!0,{exec:currPattern};if("object"==typeof currPattern)return hasCustom=!0,currPattern;if("string"==typeof currPattern){if(1===currPattern.length)return currPattern;{const escapedRegExpString=currPattern.replace(/[\\^$.*+?()[\]{}|]/g,"\\$&"),wrappedRegExp=new RegExp(escapedRegExpString);return options.useSticky?addStickyFlag(wrappedRegExp):addStartOfInput(wrappedRegExp)}}throw Error("non exhaustive match")})}),tracer("misc mapping",()=>{patternIdxToType=(0,lodash_es_map.A)(onlyRelevantTypes,currType=>currType.tokenTypeIdx),patternIdxToGroup=(0,lodash_es_map.A)(onlyRelevantTypes,clazz=>{const groupName=clazz.GROUP;if(groupName!==Lexer.SKIPPED){if((0,isString.A)(groupName))return groupName;if((0,isUndefined.A)(groupName))return!1;throw Error("non exhaustive match")}}),patternIdxToLongerAltIdxArr=(0,lodash_es_map.A)(onlyRelevantTypes,clazz=>{const longerAltType=clazz.LONGER_ALT;if(longerAltType){return(0,isArray.A)(longerAltType)?(0,lodash_es_map.A)(longerAltType,type=>lodash_es_indexOf(onlyRelevantTypes,type)):[lodash_es_indexOf(onlyRelevantTypes,longerAltType)]}}),patternIdxToPushMode=(0,lodash_es_map.A)(onlyRelevantTypes,clazz=>clazz.PUSH_MODE),patternIdxToPopMode=(0,lodash_es_map.A)(onlyRelevantTypes,clazz=>(0,has.A)(clazz,"POP_MODE"))}),tracer("Line Terminator Handling",()=>{const lineTerminatorCharCodes=getCharCodes(options.lineTerminatorCharacters);patternIdxToCanLineTerminator=(0,lodash_es_map.A)(onlyRelevantTypes,tokType=>!1),"onlyOffset"!==options.positionTracking&&(patternIdxToCanLineTerminator=(0,lodash_es_map.A)(onlyRelevantTypes,tokType=>(0,has.A)(tokType,"LINE_BREAKS")?!!tokType.LINE_BREAKS:!1===checkLineBreaksIssues(tokType,lineTerminatorCharCodes)&&canMatchCharCode(lineTerminatorCharCodes,tokType.PATTERN)))}),tracer("Misc Mapping #2",()=>{patternIdxToIsCustom=(0,lodash_es_map.A)(onlyRelevantTypes,isCustomPattern),patternIdxToShort=(0,lodash_es_map.A)(allTransformedPatterns,isShortPattern),emptyGroups=(0,reduce.A)(onlyRelevantTypes,(acc,clazz)=>{const groupName=clazz.GROUP;return(0,isString.A)(groupName)&&groupName!==Lexer.SKIPPED&&(acc[groupName]=[]),acc},{}),patternIdxToConfig=(0,lodash_es_map.A)(allTransformedPatterns,(x,idx)=>({pattern:allTransformedPatterns[idx],longerAlt:patternIdxToLongerAltIdxArr[idx],canLineTerminator:patternIdxToCanLineTerminator[idx],isCustom:patternIdxToIsCustom[idx],short:patternIdxToShort[idx],group:patternIdxToGroup[idx],push:patternIdxToPushMode[idx],pop:patternIdxToPopMode[idx],tokenTypeIdx:patternIdxToType[idx],tokenType:onlyRelevantTypes[idx]}))});let canBeOptimized=!0,charCodeToPatternIdxToConfig=[];return options.safeMode||tracer("First Char Optimization",()=>{charCodeToPatternIdxToConfig=(0,reduce.A)(onlyRelevantTypes,(result,currTokType,idx)=>{if("string"==typeof currTokType.PATTERN){const optimizedIdx=charCodeToOptimizedIndex(currTokType.PATTERN.charCodeAt(0));addToMapOfArrays(result,optimizedIdx,patternIdxToConfig[idx])}else if((0,isArray.A)(currTokType.START_CHARS_HINT)){let lastOptimizedIdx;(0,forEach.A)(currTokType.START_CHARS_HINT,charOrInt=>{const currOptimizedIdx=charCodeToOptimizedIndex("string"==typeof charOrInt?charOrInt.charCodeAt(0):charOrInt);lastOptimizedIdx!==currOptimizedIdx&&(lastOptimizedIdx=currOptimizedIdx,addToMapOfArrays(result,currOptimizedIdx,patternIdxToConfig[idx]))})}else if(lodash_es_isRegExp(currTokType.PATTERN))if(currTokType.PATTERN.unicode)canBeOptimized=!1,options.ensureOptimizations&&PRINT_ERROR(`${failedOptimizationPrefixMsg}\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\n\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\n\tThis will disable the lexer's first char optimizations.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE`);else{const optimizedCodes=getOptimizedStartCodesIndices(currTokType.PATTERN,options.ensureOptimizations);(0,isEmpty.A)(optimizedCodes)&&(canBeOptimized=!1),(0,forEach.A)(optimizedCodes,code=>{addToMapOfArrays(result,code,patternIdxToConfig[idx])})}else options.ensureOptimizations&&PRINT_ERROR(`${failedOptimizationPrefixMsg}\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\n\tThis will disable the lexer's first char optimizations.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE`),canBeOptimized=!1;return result},[])}),{emptyGroups,patternIdxToConfig,charCodeToPatternIdxToConfig,hasCustom,canBeOptimized}}function validatePatterns(tokenTypes,validModesNames){let errors=[];const missingResult=function findMissingPatterns(tokenTypes){const tokenTypesWithMissingPattern=(0,filter.A)(tokenTypes,currType=>!(0,has.A)(currType,"PATTERN")),errors=(0,lodash_es_map.A)(tokenTypesWithMissingPattern,currType=>({message:"Token Type: ->"+currType.name+"<- missing static 'PATTERN' property",type:LexerDefinitionErrorType.MISSING_PATTERN,tokenTypes:[currType]})),valid=lodash_es_difference(tokenTypes,tokenTypesWithMissingPattern);return{errors,valid}}(tokenTypes);errors=errors.concat(missingResult.errors);const invalidResult=function findInvalidPatterns(tokenTypes){const tokenTypesWithInvalidPattern=(0,filter.A)(tokenTypes,currType=>{const pattern=currType.PATTERN;return!(lodash_es_isRegExp(pattern)||(0,isFunction.A)(pattern)||(0,has.A)(pattern,"exec")||(0,isString.A)(pattern))}),errors=(0,lodash_es_map.A)(tokenTypesWithInvalidPattern,currType=>({message:"Token Type: ->"+currType.name+"<- static 'PATTERN' can only be a RegExp, a Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.",type:LexerDefinitionErrorType.INVALID_PATTERN,tokenTypes:[currType]})),valid=lodash_es_difference(tokenTypes,tokenTypesWithInvalidPattern);return{errors,valid}}(missingResult.valid),validTokenTypes=invalidResult.valid;return errors=errors.concat(invalidResult.errors),errors=errors.concat(function validateRegExpPattern(tokenTypes){let errors=[];const withRegExpPatterns=(0,filter.A)(tokenTypes,currTokType=>lodash_es_isRegExp(currTokType[PATTERN]));return errors=errors.concat(function findEndOfInputAnchor(tokenTypes){class EndAnchorFinder extends api.z{constructor(){super(...arguments),this.found=!1}visitEndAnchor(node){this.found=!0}}const invalidRegex=(0,filter.A)(tokenTypes,currType=>{const pattern=currType.PATTERN;try{const regexpAst=getRegExpAst(pattern),endAnchorVisitor=new EndAnchorFinder;return endAnchorVisitor.visit(regexpAst),endAnchorVisitor.found}catch(e){return end_of_input.test(pattern.source)}}),errors=(0,lodash_es_map.A)(invalidRegex,currType=>({message:"Unexpected RegExp Anchor Error:\n\tToken Type: ->"+currType.name+"<- static 'PATTERN' cannot contain end of input anchor '$'\n\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\tfor details.",type:LexerDefinitionErrorType.EOI_ANCHOR_FOUND,tokenTypes:[currType]}));return errors}(withRegExpPatterns)),errors=errors.concat(function findStartOfInputAnchor(tokenTypes){class StartAnchorFinder extends api.z{constructor(){super(...arguments),this.found=!1}visitStartAnchor(node){this.found=!0}}const invalidRegex=(0,filter.A)(tokenTypes,currType=>{const pattern=currType.PATTERN;try{const regexpAst=getRegExpAst(pattern),startAnchorVisitor=new StartAnchorFinder;return startAnchorVisitor.visit(regexpAst),startAnchorVisitor.found}catch(e){return start_of_input.test(pattern.source)}}),errors=(0,lodash_es_map.A)(invalidRegex,currType=>({message:"Unexpected RegExp Anchor Error:\n\tToken Type: ->"+currType.name+"<- static 'PATTERN' cannot contain start of input anchor '^'\n\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\tfor details.",type:LexerDefinitionErrorType.SOI_ANCHOR_FOUND,tokenTypes:[currType]}));return errors}(withRegExpPatterns)),errors=errors.concat(function findUnsupportedFlags(tokenTypes){const invalidFlags=(0,filter.A)(tokenTypes,currType=>{const pattern=currType[PATTERN];return pattern instanceof RegExp&&(pattern.multiline||pattern.global)}),errors=(0,lodash_es_map.A)(invalidFlags,currType=>({message:"Token Type: ->"+currType.name+"<- static 'PATTERN' may NOT contain global('g') or multiline('m')",type:LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,tokenTypes:[currType]}));return errors}(withRegExpPatterns)),errors=errors.concat(function findDuplicatePatterns(tokenTypes){const found=[];let identicalPatterns=(0,lodash_es_map.A)(tokenTypes,outerType=>(0,reduce.A)(tokenTypes,(result,innerType)=>(outerType.PATTERN.source!==innerType.PATTERN.source||lodash_es_includes(found,innerType)||innerType.PATTERN===Lexer.NA||(found.push(innerType),result.push(innerType)),result),[]));identicalPatterns=lodash_es_compact(identicalPatterns);const duplicatePatterns=(0,filter.A)(identicalPatterns,currIdenticalSet=>currIdenticalSet.length>1),errors=(0,lodash_es_map.A)(duplicatePatterns,setOfIdentical=>{const tokenTypeNames=(0,lodash_es_map.A)(setOfIdentical,currType=>currType.name);return{message:`The same RegExp pattern ->${lodash_es_head(setOfIdentical).PATTERN}<-has been used in all of the following Token Types: ${tokenTypeNames.join(", ")} <-`,type:LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,tokenTypes:setOfIdentical}});return errors}(withRegExpPatterns)),errors=errors.concat(function findEmptyMatchRegExps(tokenTypes){const matchesEmptyString=(0,filter.A)(tokenTypes,currType=>currType.PATTERN.test("")),errors=(0,lodash_es_map.A)(matchesEmptyString,currType=>({message:"Token Type: ->"+currType.name+"<- static 'PATTERN' must not match an empty string",type:LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,tokenTypes:[currType]}));return errors}(withRegExpPatterns)),errors}(validTokenTypes)),errors=errors.concat(function findInvalidGroupType(tokenTypes){const invalidTypes=(0,filter.A)(tokenTypes,clazz=>{if(!(0,has.A)(clazz,"GROUP"))return!1;const group=clazz.GROUP;return group!==Lexer.SKIPPED&&group!==Lexer.NA&&!(0,isString.A)(group)}),errors=(0,lodash_es_map.A)(invalidTypes,currType=>({message:"Token Type: ->"+currType.name+"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String",type:LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,tokenTypes:[currType]}));return errors}(validTokenTypes)),errors=errors.concat(function findModesThatDoNotExist(tokenTypes,validModes){const invalidModes=(0,filter.A)(tokenTypes,clazz=>void 0!==clazz.PUSH_MODE&&!lodash_es_includes(validModes,clazz.PUSH_MODE)),errors=(0,lodash_es_map.A)(invalidModes,tokType=>({message:`Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-which does not exist`,type:LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,tokenTypes:[tokType]}));return errors}(validTokenTypes,validModesNames)),errors=errors.concat(function findUnreachablePatterns(tokenTypes){const errors=[],canBeTested=(0,reduce.A)(tokenTypes,(result,tokType,idx)=>{const pattern=tokType.PATTERN;return pattern===Lexer.NA||((0,isString.A)(pattern)?result.push({str:pattern,idx,tokenType:tokType}):lodash_es_isRegExp(pattern)&&function noMetaChar(regExp){const metaChars=[".","\\","[","]","|","^","$","(",")","?","*","+","{"];return void 0===(0,find.A)(metaChars,char=>-1!==regExp.source.indexOf(char))}(pattern)&&result.push({str:pattern.source,idx,tokenType:tokType})),result},[]);return(0,forEach.A)(tokenTypes,(tokType,testIdx)=>{(0,forEach.A)(canBeTested,({str,idx,tokenType})=>{if(testIdx<idx&&function testTokenType(str,pattern){if(lodash_es_isRegExp(pattern)){const regExpArray=pattern.exec(str);return null!==regExpArray&&0===regExpArray.index}if((0,isFunction.A)(pattern))return pattern(str,0,[],{});if((0,has.A)(pattern,"exec"))return pattern.exec(str,0,[],{});if("string"==typeof pattern)return pattern===str;throw Error("non exhaustive match")}(str,tokType.PATTERN)){const msg=`Token: ->${tokenType.name}<- can never be matched.\nBecause it appears AFTER the Token Type ->${tokType.name}<-in the lexer's definition.\nSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;errors.push({message:msg,type:LexerDefinitionErrorType.UNREACHABLE_PATTERN,tokenTypes:[tokType,tokenType]})}})}),errors}(validTokenTypes)),errors}const end_of_input=/[^\\][$]/;const start_of_input=/[^\\[][\^]|^\^/;function addStartOfInput(pattern){const flags=pattern.ignoreCase?"i":"";return new RegExp(`^(?:${pattern.source})`,flags)}function addStickyFlag(pattern){const flags=pattern.ignoreCase?"iy":"y";return new RegExp(`${pattern.source}`,flags)}function performWarningRuntimeChecks(lexerDefinition,trackLines,lineTerminatorCharacters){const warnings=[];let hasAnyLineBreak=!1;const allTokenTypes=lodash_es_compact((0,lodash_es_flatten.A)((0,lodash_es_values.A)(lexerDefinition.modes))),concreteTokenTypes=lodash_es_reject(allTokenTypes,currType=>currType[PATTERN]===Lexer.NA),terminatorCharCodes=getCharCodes(lineTerminatorCharacters);return trackLines&&(0,forEach.A)(concreteTokenTypes,tokType=>{const currIssue=checkLineBreaksIssues(tokType,terminatorCharCodes);if(!1!==currIssue){const message=function buildLineBreakIssueMessage(tokType,details){if(details.issue===LexerDefinitionErrorType.IDENTIFY_TERMINATOR)return`Warning: unable to identify line terminator usage in pattern.\n\tThe problem is in the <${tokType.name}> Token Type\n\t Root cause: ${details.errMsg}.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR`;if(details.issue===LexerDefinitionErrorType.CUSTOM_LINE_BREAK)return`Warning: A Custom Token Pattern should specify the <line_breaks> option.\n\tThe problem is in the <${tokType.name}> Token Type\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK`;throw Error("non exhaustive match")}(tokType,currIssue),warningDescriptor={message,type:currIssue.issue,tokenType:tokType};warnings.push(warningDescriptor)}else(0,has.A)(tokType,"LINE_BREAKS")?!0===tokType.LINE_BREAKS&&(hasAnyLineBreak=!0):canMatchCharCode(terminatorCharCodes,tokType.PATTERN)&&(hasAnyLineBreak=!0)}),trackLines&&!hasAnyLineBreak&&warnings.push({message:"Warning: No LINE_BREAKS Found.\n\tThis Lexer has been defined to track line and column information,\n\tBut none of the Token Types can be identified as matching a line terminator.\n\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \n\tfor details.",type:LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS}),warnings}function isCustomPattern(tokenType){const pattern=tokenType.PATTERN;if(lodash_es_isRegExp(pattern))return!1;if((0,isFunction.A)(pattern))return!0;if((0,has.A)(pattern,"exec"))return!0;if((0,isString.A)(pattern))return!1;throw Error("non exhaustive match")}function isShortPattern(pattern){return!(!(0,isString.A)(pattern)||1!==pattern.length)&&pattern.charCodeAt(0)}const LineTerminatorOptimizedTester={test:function(text){const len=text.length;for(let i=this.lastIndex;i<len;i++){const c=text.charCodeAt(i);if(10===c)return this.lastIndex=i+1,!0;if(13===c)return 10===text.charCodeAt(i+1)?this.lastIndex=i+2:this.lastIndex=i+1,!0}return!1},lastIndex:0};function checkLineBreaksIssues(tokType,lineTerminatorCharCodes){if((0,has.A)(tokType,"LINE_BREAKS"))return!1;if(lodash_es_isRegExp(tokType.PATTERN)){try{canMatchCharCode(lineTerminatorCharCodes,tokType.PATTERN)}catch(e){return{issue:LexerDefinitionErrorType.IDENTIFY_TERMINATOR,errMsg:e.message}}return!1}if((0,isString.A)(tokType.PATTERN))return!1;if(isCustomPattern(tokType))return{issue:LexerDefinitionErrorType.CUSTOM_LINE_BREAK};throw Error("non exhaustive match")}function getCharCodes(charsOrCodes){return(0,lodash_es_map.A)(charsOrCodes,numOrString=>(0,isString.A)(numOrString)?numOrString.charCodeAt(0):numOrString)}function addToMapOfArrays(map,key,value){void 0===map[key]?map[key]=[value]:map[key].push(value)}const minOptimizationVal=256;let charCodeToOptimizedIdxMap=[];function charCodeToOptimizedIndex(charCode){return charCode<minOptimizationVal?charCode:charCodeToOptimizedIdxMap[charCode]}var identity=__webpack_require__("./node_modules/lodash-es/identity.js"),noop=__webpack_require__("./node_modules/lodash-es/noop.js"),last=__webpack_require__("./node_modules/lodash-es/last.js");function timer(func){const start=(new Date).getTime(),val=func();return{time:(new Date).getTime()-start,value:val}}function tokenStructuredMatcher(tokInstance,tokConstructor){const instanceType=tokInstance.tokenTypeIdx;return instanceType===tokConstructor.tokenTypeIdx||!0===tokConstructor.isParent&&!0===tokConstructor.categoryMatchesMap[instanceType]}function tokenStructuredMatcherNoCategories(token,tokType){return token.tokenTypeIdx===tokType.tokenTypeIdx}let tokenShortNameIdx=1;const tokenIdxToClass={};function augmentTokenTypes(tokenTypes){const tokenTypesAndParents=function expandCategories(tokenTypes){let result=(0,clone.A)(tokenTypes),categories=tokenTypes,searching=!0;for(;searching;){categories=lodash_es_compact((0,lodash_es_flatten.A)((0,lodash_es_map.A)(categories,currTokType=>currTokType.CATEGORIES)));const newCategories=lodash_es_difference(categories,result);result=result.concat(newCategories),(0,isEmpty.A)(newCategories)?searching=!1:categories=newCategories}return result}(tokenTypes);!function assignTokenDefaultProps(tokenTypes){(0,forEach.A)(tokenTypes,currTokType=>{hasShortKeyProperty(currTokType)||(tokenIdxToClass[tokenShortNameIdx]=currTokType,currTokType.tokenTypeIdx=tokenShortNameIdx++),hasCategoriesProperty(currTokType)&&!(0,isArray.A)(currTokType.CATEGORIES)&&(currTokType.CATEGORIES=[currTokType.CATEGORIES]),hasCategoriesProperty(currTokType)||(currTokType.CATEGORIES=[]),function hasExtendingTokensTypesProperty(tokType){return(0,has.A)(tokType,"categoryMatches")}(currTokType)||(currTokType.categoryMatches=[]),function hasExtendingTokensTypesMapProperty(tokType){return(0,has.A)(tokType,"categoryMatchesMap")}(currTokType)||(currTokType.categoryMatchesMap={})})}(tokenTypesAndParents),function assignCategoriesMapProp(tokenTypes){(0,forEach.A)(tokenTypes,currTokType=>{singleAssignCategoriesToksMap([],currTokType)})}(tokenTypesAndParents),function assignCategoriesTokensProp(tokenTypes){(0,forEach.A)(tokenTypes,currTokType=>{currTokType.categoryMatches=[],(0,forEach.A)(currTokType.categoryMatchesMap,(val,key)=>{currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx)})})}(tokenTypesAndParents),(0,forEach.A)(tokenTypesAndParents,tokType=>{tokType.isParent=tokType.categoryMatches.length>0})}function singleAssignCategoriesToksMap(path,nextNode){(0,forEach.A)(path,pathNode=>{nextNode.categoryMatchesMap[pathNode.tokenTypeIdx]=!0}),(0,forEach.A)(nextNode.CATEGORIES,nextCategory=>{const newPath=path.concat(nextNode);lodash_es_includes(newPath,nextCategory)||singleAssignCategoriesToksMap(newPath,nextCategory)})}function hasShortKeyProperty(tokType){return(0,has.A)(tokType,"tokenTypeIdx")}function hasCategoriesProperty(tokType){return(0,has.A)(tokType,"CATEGORIES")}function isTokenType(tokType){return(0,has.A)(tokType,"tokenTypeIdx")}const defaultLexerErrorProvider={buildUnableToPopLexerModeMessage:token=>`Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`,buildUnexpectedCharactersMessage:(fullText,startOffset,length,line,column)=>`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset}, skipped ${length} characters.`};var LexerDefinitionErrorType;!function(LexerDefinitionErrorType){LexerDefinitionErrorType[LexerDefinitionErrorType.MISSING_PATTERN=0]="MISSING_PATTERN",LexerDefinitionErrorType[LexerDefinitionErrorType.INVALID_PATTERN=1]="INVALID_PATTERN",LexerDefinitionErrorType[LexerDefinitionErrorType.EOI_ANCHOR_FOUND=2]="EOI_ANCHOR_FOUND",LexerDefinitionErrorType[LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND=3]="UNSUPPORTED_FLAGS_FOUND",LexerDefinitionErrorType[LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND=4]="DUPLICATE_PATTERNS_FOUND",LexerDefinitionErrorType[LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND=5]="INVALID_GROUP_TYPE_FOUND",LexerDefinitionErrorType[LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST=6]="PUSH_MODE_DOES_NOT_EXIST",LexerDefinitionErrorType[LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE=7]="MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE",LexerDefinitionErrorType[LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY=8]="MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY",LexerDefinitionErrorType[LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST=9]="MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST",LexerDefinitionErrorType[LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED=10]="LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED",LexerDefinitionErrorType[LexerDefinitionErrorType.SOI_ANCHOR_FOUND=11]="SOI_ANCHOR_FOUND",LexerDefinitionErrorType[LexerDefinitionErrorType.EMPTY_MATCH_PATTERN=12]="EMPTY_MATCH_PATTERN",LexerDefinitionErrorType[LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS=13]="NO_LINE_BREAKS_FLAGS",LexerDefinitionErrorType[LexerDefinitionErrorType.UNREACHABLE_PATTERN=14]="UNREACHABLE_PATTERN",LexerDefinitionErrorType[LexerDefinitionErrorType.IDENTIFY_TERMINATOR=15]="IDENTIFY_TERMINATOR",LexerDefinitionErrorType[LexerDefinitionErrorType.CUSTOM_LINE_BREAK=16]="CUSTOM_LINE_BREAK",LexerDefinitionErrorType[LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE=17]="MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE"}(LexerDefinitionErrorType||(LexerDefinitionErrorType={}));const DEFAULT_LEXER_CONFIG={deferDefinitionErrorsHandling:!1,positionTracking:"full",lineTerminatorsPattern:/\n|\r\n?/g,lineTerminatorCharacters:["\n","\r"],ensureOptimizations:!1,safeMode:!1,errorMessageProvider:defaultLexerErrorProvider,traceInitPerf:!1,skipValidations:!1,recoveryEnabled:!0};Object.freeze(DEFAULT_LEXER_CONFIG);class Lexer{constructor(lexerDefinition,config=DEFAULT_LEXER_CONFIG){if(this.lexerDefinition=lexerDefinition,this.lexerDefinitionErrors=[],this.lexerDefinitionWarning=[],this.patternIdxToConfig={},this.charCodeToPatternIdxToConfig={},this.modes=[],this.emptyGroups={},this.trackStartLines=!0,this.trackEndLines=!0,this.hasCustom=!1,this.canModeBeOptimized={},this.TRACE_INIT=(phaseDesc,phaseImpl)=>{if(!0===this.traceInitPerf){this.traceInitIndent++;const indent=new Array(this.traceInitIndent+1).join("\t");this.traceInitIndent<this.traceInitMaxIdent&&console.log(`${indent}--\x3e <${phaseDesc}>`);const{time,value}=timer(phaseImpl),traceMethod=time>10?console.warn:console.log;return this.traceInitIndent<this.traceInitMaxIdent&&traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`),this.traceInitIndent--,value}return phaseImpl()},"boolean"==typeof config)throw Error("The second argument to the Lexer constructor is now an ILexerConfig Object.\na boolean 2nd argument is no longer supported");this.config=lodash_es_assign({},DEFAULT_LEXER_CONFIG,config);const traceInitVal=this.config.traceInitPerf;!0===traceInitVal?(this.traceInitMaxIdent=1/0,this.traceInitPerf=!0):"number"==typeof traceInitVal&&(this.traceInitMaxIdent=traceInitVal,this.traceInitPerf=!0),this.traceInitIndent=-1,this.TRACE_INIT("Lexer Constructor",()=>{let actualDefinition,hasOnlySingleMode=!0;this.TRACE_INIT("Lexer Config handling",()=>{if(this.config.lineTerminatorsPattern===DEFAULT_LEXER_CONFIG.lineTerminatorsPattern)this.config.lineTerminatorsPattern=LineTerminatorOptimizedTester;else if(this.config.lineTerminatorCharacters===DEFAULT_LEXER_CONFIG.lineTerminatorCharacters)throw Error("Error: Missing <lineTerminatorCharacters> property on the Lexer config.\n\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS");if(config.safeMode&&config.ensureOptimizations)throw Error('"safeMode" and "ensureOptimizations" flags are mutually exclusive.');this.trackStartLines=/full|onlyStart/i.test(this.config.positionTracking),this.trackEndLines=/full/i.test(this.config.positionTracking),(0,isArray.A)(lexerDefinition)?actualDefinition={modes:{defaultMode:(0,clone.A)(lexerDefinition)},defaultMode:"defaultMode"}:(hasOnlySingleMode=!1,actualDefinition=(0,clone.A)(lexerDefinition))}),!1===this.config.skipValidations&&(this.TRACE_INIT("performRuntimeChecks",()=>{this.lexerDefinitionErrors=this.lexerDefinitionErrors.concat(function performRuntimeChecks(lexerDefinition,trackLines,lineTerminatorCharacters){const errors=[];return(0,has.A)(lexerDefinition,"defaultMode")||errors.push({message:"A MultiMode Lexer cannot be initialized without a <defaultMode> property in its definition\n",type:LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE}),(0,has.A)(lexerDefinition,"modes")||errors.push({message:"A MultiMode Lexer cannot be initialized without a <modes> property in its definition\n",type:LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY}),(0,has.A)(lexerDefinition,"modes")&&(0,has.A)(lexerDefinition,"defaultMode")&&!(0,has.A)(lexerDefinition.modes,lexerDefinition.defaultMode)&&errors.push({message:`A MultiMode Lexer cannot be initialized with a defaultMode: <${lexerDefinition.defaultMode}>which does not exist\n`,type:LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST}),(0,has.A)(lexerDefinition,"modes")&&(0,forEach.A)(lexerDefinition.modes,(currModeValue,currModeName)=>{(0,forEach.A)(currModeValue,(currTokType,currIdx)=>{if((0,isUndefined.A)(currTokType))errors.push({message:`A Lexer cannot be initialized using an undefined Token Type. Mode:<${currModeName}> at index: <${currIdx}>\n`,type:LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED});else if((0,has.A)(currTokType,"LONGER_ALT")){const longerAlt=(0,isArray.A)(currTokType.LONGER_ALT)?currTokType.LONGER_ALT:[currTokType.LONGER_ALT];(0,forEach.A)(longerAlt,currLongerAlt=>{(0,isUndefined.A)(currLongerAlt)||lodash_es_includes(currModeValue,currLongerAlt)||errors.push({message:`A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\n`,type:LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE})})}})}),errors}(actualDefinition,this.trackStartLines,this.config.lineTerminatorCharacters))}),this.TRACE_INIT("performWarningRuntimeChecks",()=>{this.lexerDefinitionWarning=this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition,this.trackStartLines,this.config.lineTerminatorCharacters))})),actualDefinition.modes=actualDefinition.modes?actualDefinition.modes:{},(0,forEach.A)(actualDefinition.modes,(currModeValue,currModeName)=>{actualDefinition.modes[currModeName]=lodash_es_reject(currModeValue,currTokType=>(0,isUndefined.A)(currTokType))});const allModeNames=(0,keys.A)(actualDefinition.modes);if((0,forEach.A)(actualDefinition.modes,(currModDef,currModName)=>{this.TRACE_INIT(`Mode: <${currModName}> processing`,()=>{if(this.modes.push(currModName),!1===this.config.skipValidations&&this.TRACE_INIT("validatePatterns",()=>{this.lexerDefinitionErrors=this.lexerDefinitionErrors.concat(validatePatterns(currModDef,allModeNames))}),(0,isEmpty.A)(this.lexerDefinitionErrors)){let currAnalyzeResult;augmentTokenTypes(currModDef),this.TRACE_INIT("analyzeTokenTypes",()=>{currAnalyzeResult=analyzeTokenTypes(currModDef,{lineTerminatorCharacters:this.config.lineTerminatorCharacters,positionTracking:config.positionTracking,ensureOptimizations:config.ensureOptimizations,safeMode:config.safeMode,tracer:this.TRACE_INIT})}),this.patternIdxToConfig[currModName]=currAnalyzeResult.patternIdxToConfig,this.charCodeToPatternIdxToConfig[currModName]=currAnalyzeResult.charCodeToPatternIdxToConfig,this.emptyGroups=lodash_es_assign({},this.emptyGroups,currAnalyzeResult.emptyGroups),this.hasCustom=currAnalyzeResult.hasCustom||this.hasCustom,this.canModeBeOptimized[currModName]=currAnalyzeResult.canBeOptimized}})}),this.defaultMode=actualDefinition.defaultMode,!(0,isEmpty.A)(this.lexerDefinitionErrors)&&!this.config.deferDefinitionErrorsHandling){const allErrMessagesString=(0,lodash_es_map.A)(this.lexerDefinitionErrors,error=>error.message).join("-----------------------\n");throw new Error("Errors detected in definition of Lexer:\n"+allErrMessagesString)}(0,forEach.A)(this.lexerDefinitionWarning,warningDescriptor=>{PRINT_WARNING(warningDescriptor.message)}),this.TRACE_INIT("Choosing sub-methods implementations",()=>{if(SUPPORT_STICKY?(this.chopInput=identity.A,this.match=this.matchWithTest):(this.updateLastIndex=noop.A,this.match=this.matchWithExec),hasOnlySingleMode&&(this.handleModes=noop.A),!1===this.trackStartLines&&(this.computeNewColumn=identity.A),!1===this.trackEndLines&&(this.updateTokenEndLineColumnLocation=noop.A),/full/i.test(this.config.positionTracking))this.createTokenInstance=this.createFullToken;else if(/onlyStart/i.test(this.config.positionTracking))this.createTokenInstance=this.createStartOnlyToken;else{if(!/onlyOffset/i.test(this.config.positionTracking))throw Error(`Invalid <positionTracking> config option: "${this.config.positionTracking}"`);this.createTokenInstance=this.createOffsetOnlyToken}this.hasCustom?(this.addToken=this.addTokenUsingPush,this.handlePayload=this.handlePayloadWithCustom):(this.addToken=this.addTokenUsingMemberAccess,this.handlePayload=this.handlePayloadNoCustom)}),this.TRACE_INIT("Failed Optimization Warnings",()=>{const unOptimizedModes=(0,reduce.A)(this.canModeBeOptimized,(cannotBeOptimized,canBeOptimized,modeName)=>(!1===canBeOptimized&&cannotBeOptimized.push(modeName),cannotBeOptimized),[]);if(config.ensureOptimizations&&!(0,isEmpty.A)(unOptimizedModes))throw Error(`Lexer Modes: < ${unOptimizedModes.join(", ")} > cannot be optimized.\n\t Disable the "ensureOptimizations" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\n\t Or inspect the console log for details on how to resolve these issues.`)}),this.TRACE_INIT("clearRegExpParserCache",()=>{!function clearRegExpParserCache(){regExpAstCache={}}()}),this.TRACE_INIT("toFastProperties",()=>{toFastProperties(this)})})}tokenize(text,initialMode=this.defaultMode){if(!(0,isEmpty.A)(this.lexerDefinitionErrors)){const allErrMessagesString=(0,lodash_es_map.A)(this.lexerDefinitionErrors,error=>error.message).join("-----------------------\n");throw new Error("Unable to Tokenize because Errors detected in definition of Lexer:\n"+allErrMessagesString)}return this.tokenizeInternal(text,initialMode)}tokenizeInternal(text,initialMode){let i,j,k,matchAltImage,longerAlt,matchedImage,payload,altPayload,imageLength,group,tokType,newToken,errLength,msg,match;const orgText=text,orgLength=orgText.length;let offset=0,matchedTokensIndex=0;const guessedNumberOfTokens=this.hasCustom?0:Math.floor(text.length/10),matchedTokens=new Array(guessedNumberOfTokens),errors=[];let line=this.trackStartLines?1:void 0,column=this.trackStartLines?1:void 0;const groups=function cloneEmptyGroups(emptyGroups){const clonedResult={},groupKeys=(0,keys.A)(emptyGroups);return(0,forEach.A)(groupKeys,currKey=>{const currGroupValue=emptyGroups[currKey];if(!(0,isArray.A)(currGroupValue))throw Error("non exhaustive match");clonedResult[currKey]=[]}),clonedResult}(this.emptyGroups),trackLines=this.trackStartLines,lineTerminatorPattern=this.config.lineTerminatorsPattern;let currModePatternsLength=0,patternIdxToConfig=[],currCharCodeToPatternIdxToConfig=[];const modeStack=[],emptyArray=[];let getPossiblePatterns;function getPossiblePatternsSlow(){return patternIdxToConfig}function getPossiblePatternsOptimized(charCode){const optimizedCharIdx=charCodeToOptimizedIndex(charCode),possiblePatterns=currCharCodeToPatternIdxToConfig[optimizedCharIdx];return void 0===possiblePatterns?emptyArray:possiblePatterns}Object.freeze(emptyArray);const pop_mode=popToken=>{if(1===modeStack.length&&void 0===popToken.tokenType.PUSH_MODE){const msg=this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);errors.push({offset:popToken.startOffset,line:popToken.startLine,column:popToken.startColumn,length:popToken.image.length,message:msg})}else{modeStack.pop();const newMode=(0,last.A)(modeStack);patternIdxToConfig=this.patternIdxToConfig[newMode],currCharCodeToPatternIdxToConfig=this.charCodeToPatternIdxToConfig[newMode],currModePatternsLength=patternIdxToConfig.length;const modeCanBeOptimized=this.canModeBeOptimized[newMode]&&!1===this.config.safeMode;getPossiblePatterns=currCharCodeToPatternIdxToConfig&&modeCanBeOptimized?getPossiblePatternsOptimized:getPossiblePatternsSlow}};function push_mode(newMode){modeStack.push(newMode),currCharCodeToPatternIdxToConfig=this.charCodeToPatternIdxToConfig[newMode],patternIdxToConfig=this.patternIdxToConfig[newMode],currModePatternsLength=patternIdxToConfig.length,currModePatternsLength=patternIdxToConfig.length;const modeCanBeOptimized=this.canModeBeOptimized[newMode]&&!1===this.config.safeMode;getPossiblePatterns=currCharCodeToPatternIdxToConfig&&modeCanBeOptimized?getPossiblePatternsOptimized:getPossiblePatternsSlow}let currConfig;push_mode.call(this,initialMode);const recoveryEnabled=this.config.recoveryEnabled;for(;offset<orgLength;){matchedImage=null;const nextCharCode=orgText.charCodeAt(offset),chosenPatternIdxToConfig=getPossiblePatterns(nextCharCode),chosenPatternsLength=chosenPatternIdxToConfig.length;for(i=0;i<chosenPatternsLength;i++){currConfig=chosenPatternIdxToConfig[i];const currPattern=currConfig.pattern;payload=null;const singleCharCode=currConfig.short;if(!1!==singleCharCode?nextCharCode===singleCharCode&&(matchedImage=currPattern):!0===currConfig.isCustom?(match=currPattern.exec(orgText,offset,matchedTokens,groups),null!==match?(matchedImage=match[0],void 0!==match.payload&&(payload=match.payload)):matchedImage=null):(this.updateLastIndex(currPattern,offset),matchedImage=this.match(currPattern,text,offset)),null!==matchedImage){if(longerAlt=currConfig.longerAlt,void 0!==longerAlt){const longerAltLength=longerAlt.length;for(k=0;k<longerAltLength;k++){const longerAltConfig=patternIdxToConfig[longerAlt[k]],longerAltPattern=longerAltConfig.pattern;if(altPayload=null,!0===longerAltConfig.isCustom?(match=longerAltPattern.exec(orgText,offset,matchedTokens,groups),null!==match?(matchAltImage=match[0],void 0!==match.payload&&(altPayload=match.payload)):matchAltImage=null):(this.updateLastIndex(longerAltPattern,offset),matchAltImage=this.match(longerAltPattern,text,offset)),matchAltImage&&matchAltImage.length>matchedImage.length){matchedImage=matchAltImage,payload=altPayload,currConfig=longerAltConfig;break}}}break}}if(null!==matchedImage){if(imageLength=matchedImage.length,group=currConfig.group,void 0!==group&&(tokType=currConfig.tokenTypeIdx,newToken=this.createTokenInstance(matchedImage,offset,tokType,currConfig.tokenType,line,column,imageLength),this.handlePayload(newToken,payload),!1===group?matchedTokensIndex=this.addToken(matchedTokens,matchedTokensIndex,newToken):groups[group].push(newToken)),text=this.chopInput(text,imageLength),offset+=imageLength,column=this.computeNewColumn(column,imageLength),!0===trackLines&&!0===currConfig.canLineTerminator){let foundTerminator,lastLTEndOffset,numOfLTsInMatch=0;lineTerminatorPattern.lastIndex=0;do{foundTerminator=lineTerminatorPattern.test(matchedImage),!0===foundTerminator&&(lastLTEndOffset=lineTerminatorPattern.lastIndex-1,numOfLTsInMatch++)}while(!0===foundTerminator);0!==numOfLTsInMatch&&(line+=numOfLTsInMatch,column=imageLength-lastLTEndOffset,this.updateTokenEndLineColumnLocation(newToken,group,lastLTEndOffset,numOfLTsInMatch,line,column,imageLength))}this.handleModes(currConfig,pop_mode,push_mode,newToken)}else{const errorStartOffset=offset,errorLine=line,errorColumn=column;let foundResyncPoint=!1===recoveryEnabled;for(;!1===foundResyncPoint&&offset<orgLength;)for(text=this.chopInput(text,1),offset++,j=0;j<currModePatternsLength;j++){const currConfig=patternIdxToConfig[j],currPattern=currConfig.pattern,singleCharCode=currConfig.short;if(!1!==singleCharCode?orgText.charCodeAt(offset)===singleCharCode&&(foundResyncPoint=!0):!0===currConfig.isCustom?foundResyncPoint=null!==currPattern.exec(orgText,offset,matchedTokens,groups):(this.updateLastIndex(currPattern,offset),foundResyncPoint=null!==currPattern.exec(text)),!0===foundResyncPoint)break}if(errLength=offset-errorStartOffset,column=this.computeNewColumn(column,errLength),msg=this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText,errorStartOffset,errLength,errorLine,errorColumn),errors.push({offset:errorStartOffset,line:errorLine,column:errorColumn,length:errLength,message:msg}),!1===recoveryEnabled)break}}return this.hasCustom||(matchedTokens.length=matchedTokensIndex),{tokens:matchedTokens,groups,errors}}handleModes(config,pop_mode,push_mode,newToken){if(!0===config.pop){const pushMode=config.push;pop_mode(newToken),void 0!==pushMode&&push_mode.call(this,pushMode)}else void 0!==config.push&&push_mode.call(this,config.push)}chopInput(text,length){return text.substring(length)}updateLastIndex(regExp,newLastIndex){regExp.lastIndex=newLastIndex}updateTokenEndLineColumnLocation(newToken,group,lastLTIdx,numOfLTsInMatch,line,column,imageLength){let lastCharIsLT,fixForEndingInLT;void 0!==group&&(lastCharIsLT=lastLTIdx===imageLength-1,fixForEndingInLT=lastCharIsLT?-1:0,1===numOfLTsInMatch&&!0===lastCharIsLT||(newToken.endLine=line+fixForEndingInLT,newToken.endColumn=column-1-fixForEndingInLT))}computeNewColumn(oldColumn,imageLength){return oldColumn+imageLength}createOffsetOnlyToken(image,startOffset,tokenTypeIdx,tokenType){return{image,startOffset,tokenTypeIdx,tokenType}}createStartOnlyToken(image,startOffset,tokenTypeIdx,tokenType,startLine,startColumn){return{image,startOffset,startLine,startColumn,tokenTypeIdx,tokenType}}createFullToken(image,startOffset,tokenTypeIdx,tokenType,startLine,startColumn,imageLength){return{image,startOffset,endOffset:startOffset+imageLength-1,startLine,endLine:startLine,startColumn,endColumn:startColumn+imageLength-1,tokenTypeIdx,tokenType}}addTokenUsingPush(tokenVector,index,tokenToAdd){return tokenVector.push(tokenToAdd),index}addTokenUsingMemberAccess(tokenVector,index,tokenToAdd){return tokenVector[index]=tokenToAdd,++index}handlePayloadNoCustom(token,payload){}handlePayloadWithCustom(token,payload){null!==payload&&(token.payload=payload)}matchWithTest(pattern,text,offset){return!0===pattern.test(text)?text.substring(offset,pattern.lastIndex):null}matchWithExec(pattern,text){const regExpArray=pattern.exec(text);return null!==regExpArray?regExpArray[0]:null}}function tokens_public_tokenLabel(tokType){return tokens_public_hasTokenLabel(tokType)?tokType.LABEL:tokType.name}function tokens_public_hasTokenLabel(obj){return(0,isString.A)(obj.LABEL)&&""!==obj.LABEL}Lexer.SKIPPED="This marks a skipped Token pattern, this means each token identified by it willbe consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.",Lexer.NA=/NOT_APPLICABLE/;function createToken(config){return function createTokenInternal(config){const pattern=config.pattern,tokenType={};tokenType.name=config.name,(0,isUndefined.A)(pattern)||(tokenType.PATTERN=pattern);if((0,has.A)(config,"parent"))throw"The parent property is no longer supported.\nSee: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.";(0,has.A)(config,"categories")&&(tokenType.CATEGORIES=config.categories);augmentTokenTypes([tokenType]),(0,has.A)(config,"label")&&(tokenType.LABEL=config.label);(0,has.A)(config,"group")&&(tokenType.GROUP=config.group);(0,has.A)(config,"pop_mode")&&(tokenType.POP_MODE=config.pop_mode);(0,has.A)(config,"push_mode")&&(tokenType.PUSH_MODE=config.push_mode);(0,has.A)(config,"longer_alt")&&(tokenType.LONGER_ALT=config.longer_alt);(0,has.A)(config,"line_breaks")&&(tokenType.LINE_BREAKS=config.line_breaks);(0,has.A)(config,"start_chars_hint")&&(tokenType.START_CHARS_HINT=config.start_chars_hint);return tokenType}(config)}const EOF=createToken({name:"EOF",pattern:Lexer.NA});function createTokenInstance(tokType,image,startOffset,endOffset,startLine,endLine,startColumn,endColumn){return{image,startOffset,endOffset,startLine,endLine,startColumn,endColumn,tokenTypeIdx:tokType.tokenTypeIdx,tokenType:tokType}}function tokenMatcher(token,tokType){return tokenStructuredMatcher(token,tokType)}augmentTokenTypes([EOF]);const defaultParserErrorProvider={buildMismatchTokenMessage:({expected,actual,previous,ruleName})=>`Expecting ${tokens_public_hasTokenLabel(expected)?`--\x3e ${tokens_public_tokenLabel(expected)} <--`:`token of type --\x3e ${expected.name} <--`} but found --\x3e '${actual.image}' <--`,buildNotAllInputParsedMessage:({firstRedundant,ruleName})=>"Redundant input, expecting EOF but found: "+firstRedundant.image,buildNoViableAltMessage({expectedPathsPerAlt,actual,previous,customUserDescription,ruleName}){const errSuffix="\nbut found: '"+lodash_es_head(actual).image+"'";if(customUserDescription)return"Expecting: "+customUserDescription+errSuffix;{const allLookAheadPaths=(0,reduce.A)(expectedPathsPerAlt,(result,currAltPaths)=>result.concat(currAltPaths),[]),nextValidTokenSequences=(0,lodash_es_map.A)(allLookAheadPaths,currPath=>`[${(0,lodash_es_map.A)(currPath,currTokenType=>tokens_public_tokenLabel(currTokenType)).join(", ")}]`);return"Expecting: "+`one of these possible Token sequences:\n${(0,lodash_es_map.A)(nextValidTokenSequences,(itemMsg,idx)=>`  ${idx+1}. ${itemMsg}`).join("\n")}`+errSuffix}},buildEarlyExitMessage({expectedIterationPaths,actual,customUserDescription,ruleName}){const errSuffix="\nbut found: '"+lodash_es_head(actual).image+"'";if(customUserDescription)return"Expecting: "+customUserDescription+errSuffix;return"Expecting: "+`expecting at least one iteration which starts with one of these possible Token sequences::\n  <${(0,lodash_es_map.A)(expectedIterationPaths,currPath=>`[${(0,lodash_es_map.A)(currPath,currTokenType=>tokens_public_tokenLabel(currTokenType)).join(",")}]`).join(" ,")}>`+errSuffix}};Object.freeze(defaultParserErrorProvider);const defaultGrammarResolverErrorProvider={buildRuleNotFoundError:(topLevelRule,undefinedRule)=>"Invalid grammar, reference to a rule which is not defined: ->"+undefinedRule.nonTerminalName+"<-\ninside top level rule: ->"+topLevelRule.name+"<-"},defaultGrammarValidatorErrorProvider={buildDuplicateFoundError(topLevelRule,duplicateProds){const topLevelName=topLevelRule.name,duplicateProd=lodash_es_head(duplicateProds),index=duplicateProd.idx,dslName=getProductionDslName(duplicateProd),extraArgument=function getExtraProductionArgument(prod){return prod instanceof Terminal?prod.terminalType.name:prod instanceof model_NonTerminal?prod.nonTerminalName:""}(duplicateProd);let msg=`->${dslName}${index>0?index:""}<- ${extraArgument?`with argument: ->${extraArgument}<-`:""}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;return msg=msg.replace(/[ \t]+/g," "),msg=msg.replace(/\s\s+/g,"\n"),msg},buildNamespaceConflictError:rule=>`Namespace conflict found in grammar.\nThe grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\nTo resolve this make sure each Terminal and Non-Terminal names are unique\nThis is easy to accomplish by using the convention that Terminal names start with an uppercase letter\nand Non-Terminal names start with a lower case letter.`,buildAlternationPrefixAmbiguityError(options){const pathMsg=(0,lodash_es_map.A)(options.prefixPath,currTok=>tokens_public_tokenLabel(currTok)).join(", "),occurrence=0===options.alternation.idx?"":options.alternation.idx;return`Ambiguous alternatives: <${options.ambiguityIndices.join(" ,")}> due to common lookahead prefix\nin <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\n<${pathMsg}> may appears as a prefix path in all these alternatives.\nSee: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\nFor Further details.`},buildAlternationAmbiguityError(options){const pathMsg=(0,lodash_es_map.A)(options.prefixPath,currtok=>tokens_public_tokenLabel(currtok)).join(", "),occurrence=0===options.alternation.idx?"":options.alternation.idx;let currMessage=`Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(" ,")}> in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\n<${pathMsg}> may appears as a prefix path in all these alternatives.\n`;return currMessage+="See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\nFor Further details.",currMessage},buildEmptyRepetitionError(options){let dslName=getProductionDslName(options.repetition);0!==options.repetition.idx&&(dslName+=options.repetition.idx);return`The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\nThis could lead to an infinite loop.`},buildTokenNameError:options=>"deprecated",buildEmptyAlternationError:options=>`Ambiguous empty alternative: <${options.emptyChoiceIdx+1}> in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\nOnly the last alternative may be an empty alternative.`,buildTooManyAlternativesError:options=>`An Alternation cannot have more than 256 alternatives:\n<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\n has ${options.alternation.definition.length+1} alternatives.`,buildLeftRecursionError(options){const ruleName=options.topLevelRule.name;return`Left Recursion found in grammar.\nrule: <${ruleName}> can be invoked from itself (directly or indirectly)\nwithout consuming any Tokens. The grammar path that causes this is: \n ${`${ruleName} --\x3e ${(0,lodash_es_map.A)(options.leftRecursionPath,currRule=>currRule.name).concat([ruleName]).join(" --\x3e ")}`}\n To fix this refactor your grammar to remove the left recursion.\nsee: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`},buildInvalidRuleNameError:options=>"deprecated",buildDuplicateRuleNameError(options){let ruleName;ruleName=options.topLevelRule instanceof Rule?options.topLevelRule.name:options.topLevelRule;return`Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`}};class GastRefResolverVisitor extends visitor_GAstVisitor{constructor(nameToTopRule,errMsgProvider){super(),this.nameToTopRule=nameToTopRule,this.errMsgProvider=errMsgProvider,this.errors=[]}resolveRefs(){(0,forEach.A)((0,lodash_es_values.A)(this.nameToTopRule),prod=>{this.currTopLevel=prod,prod.accept(this)})}visitNonTerminal(node){const ref=this.nameToTopRule[node.nonTerminalName];if(ref)node.referencedRule=ref;else{const msg=this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel,node);this.errors.push({message:msg,type:ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,ruleName:this.currTopLevel.name,unresolvedRefName:node.nonTerminalName})}}}var flatMap=__webpack_require__("./node_modules/lodash-es/flatMap.js"),_baseAssignValue=__webpack_require__("./node_modules/lodash-es/_baseAssignValue.js");const _arrayAggregator=function arrayAggregator(array,setter,iteratee,accumulator){for(var index=-1,length=null==array?0:array.length;++index<length;){var value=array[index];setter(accumulator,value,iteratee(value),array)}return accumulator};const _baseAggregator=function baseAggregator(collection,setter,iteratee,accumulator){return(0,_baseEach.A)(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection)}),accumulator};const _createAggregator=function createAggregator(setter,initializer){return function(collection,iteratee){var func=(0,isArray.A)(collection)?_arrayAggregator:_baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,(0,_baseIteratee.A)(iteratee,2),accumulator)}};var groupBy_hasOwnProperty=Object.prototype.hasOwnProperty;const lodash_es_groupBy=_createAggregator(function(result,value,key){groupBy_hasOwnProperty.call(result,key)?result[key].push(value):(0,_baseAssignValue.A)(result,key,[value])});const lodash_es_dropRight=function dropRight(array,n,guard){var length=null==array?0:array.length;return length?(n=guard||void 0===n?1:(0,toInteger.A)(n),_baseSlice(array,0,(n=length-n)<0?0:n)):[]};class AbstractNextPossibleTokensWalker extends RestWalker{constructor(topProd,path){super(),this.topProd=topProd,this.path=path,this.possibleTokTypes=[],this.nextProductionName="",this.nextProductionOccurrence=0,this.found=!1,this.isAtEndOfPath=!1}startWalking(){if(this.found=!1,this.path.ruleStack[0]!==this.topProd.name)throw Error("The path does not start with the walker's top Rule!");return this.ruleStack=(0,clone.A)(this.path.ruleStack).reverse(),this.occurrenceStack=(0,clone.A)(this.path.occurrenceStack).reverse(),this.ruleStack.pop(),this.occurrenceStack.pop(),this.updateExpectedNext(),this.walk(this.topProd),this.possibleTokTypes}walk(prod,prevRest=[]){this.found||super.walk(prod,prevRest)}walkProdRef(refProd,currRest,prevRest){if(refProd.referencedRule.name===this.nextProductionName&&refProd.idx===this.nextProductionOccurrence){const fullRest=currRest.concat(prevRest);this.updateExpectedNext(),this.walk(refProd.referencedRule,fullRest)}}updateExpectedNext(){(0,isEmpty.A)(this.ruleStack)?(this.nextProductionName="",this.nextProductionOccurrence=0,this.isAtEndOfPath=!0):(this.nextProductionName=this.ruleStack.pop(),this.nextProductionOccurrence=this.occurrenceStack.pop())}}class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker{constructor(topProd,path){super(topProd,path),this.path=path,this.nextTerminalName="",this.nextTerminalOccurrence=0,this.nextTerminalName=this.path.lastTok.name,this.nextTerminalOccurrence=this.path.lastTokOccurrence}walkTerminal(terminal,currRest,prevRest){if(this.isAtEndOfPath&&terminal.terminalType.name===this.nextTerminalName&&terminal.idx===this.nextTerminalOccurrence&&!this.found){const fullRest=currRest.concat(prevRest),restProd=new Alternative({definition:fullRest});this.possibleTokTypes=first(restProd),this.found=!0}}}class AbstractNextTerminalAfterProductionWalker extends RestWalker{constructor(topRule,occurrence){super(),this.topRule=topRule,this.occurrence=occurrence,this.result={token:void 0,occurrence:void 0,isEndOfRule:void 0}}startWalking(){return this.walk(this.topRule),this.result}}class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker{walkMany(manyProd,currRest,prevRest){if(manyProd.idx===this.occurrence){const firstAfterMany=lodash_es_head(currRest.concat(prevRest));this.result.isEndOfRule=void 0===firstAfterMany,firstAfterMany instanceof Terminal&&(this.result.token=firstAfterMany.terminalType,this.result.occurrence=firstAfterMany.idx)}else super.walkMany(manyProd,currRest,prevRest)}}class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker{walkManySep(manySepProd,currRest,prevRest){if(manySepProd.idx===this.occurrence){const firstAfterManySep=lodash_es_head(currRest.concat(prevRest));this.result.isEndOfRule=void 0===firstAfterManySep,firstAfterManySep instanceof Terminal&&(this.result.token=firstAfterManySep.terminalType,this.result.occurrence=firstAfterManySep.idx)}else super.walkManySep(manySepProd,currRest,prevRest)}}class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker{walkAtLeastOne(atLeastOneProd,currRest,prevRest){if(atLeastOneProd.idx===this.occurrence){const firstAfterAtLeastOne=lodash_es_head(currRest.concat(prevRest));this.result.isEndOfRule=void 0===firstAfterAtLeastOne,firstAfterAtLeastOne instanceof Terminal&&(this.result.token=firstAfterAtLeastOne.terminalType,this.result.occurrence=firstAfterAtLeastOne.idx)}else super.walkAtLeastOne(atLeastOneProd,currRest,prevRest)}}class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker{walkAtLeastOneSep(atleastOneSepProd,currRest,prevRest){if(atleastOneSepProd.idx===this.occurrence){const firstAfterfirstAfterAtLeastOneSep=lodash_es_head(currRest.concat(prevRest));this.result.isEndOfRule=void 0===firstAfterfirstAfterAtLeastOneSep,firstAfterfirstAfterAtLeastOneSep instanceof Terminal&&(this.result.token=firstAfterfirstAfterAtLeastOneSep.terminalType,this.result.occurrence=firstAfterfirstAfterAtLeastOneSep.idx)}else super.walkAtLeastOneSep(atleastOneSepProd,currRest,prevRest)}}function possiblePathsFrom(targetDef,maxLength,currPath=[]){currPath=(0,clone.A)(currPath);let result=[],i=0;function getAlternativesForProd(definition){const alternatives=possiblePathsFrom(function remainingPathWith(nextDef){return nextDef.concat(lodash_es_drop(targetDef,i+1))}(definition),maxLength,currPath);return result.concat(alternatives)}for(;currPath.length<maxLength&&i<targetDef.length;){const prod=targetDef[i];if(prod instanceof Alternative)return getAlternativesForProd(prod.definition);if(prod instanceof model_NonTerminal)return getAlternativesForProd(prod.definition);if(prod instanceof Option)result=getAlternativesForProd(prod.definition);else{if(prod instanceof RepetitionMandatory){return getAlternativesForProd(prod.definition.concat([new Repetition({definition:prod.definition})]))}if(prod instanceof RepetitionMandatoryWithSeparator){return getAlternativesForProd([new Alternative({definition:prod.definition}),new Repetition({definition:[new Terminal({terminalType:prod.separator})].concat(prod.definition)})])}if(prod instanceof RepetitionWithSeparator){const newDef=prod.definition.concat([new Repetition({definition:[new Terminal({terminalType:prod.separator})].concat(prod.definition)})]);result=getAlternativesForProd(newDef)}else if(prod instanceof Repetition){const newDef=prod.definition.concat([new Repetition({definition:prod.definition})]);result=getAlternativesForProd(newDef)}else{if(prod instanceof Alternation)return(0,forEach.A)(prod.definition,currAlt=>{!1===(0,isEmpty.A)(currAlt.definition)&&(result=getAlternativesForProd(currAlt.definition))}),result;if(!(prod instanceof Terminal))throw Error("non exhaustive match");currPath.push(prod.terminalType)}}i++}return result.push({partialPath:currPath,suffixDef:lodash_es_drop(targetDef,i)}),result}function nextPossibleTokensAfter(initialDef,tokenVector,tokMatcher,maxLookAhead){const EXIT_NON_TERMINAL_ARR=["EXIT_NONE_TERMINAL"];let foundCompletePath=!1;const tokenVectorLength=tokenVector.length,minimalAlternativesIndex=tokenVectorLength-maxLookAhead-1,result=[],possiblePaths=[];for(possiblePaths.push({idx:-1,def:initialDef,ruleStack:[],occurrenceStack:[]});!(0,isEmpty.A)(possiblePaths);){const currPath=possiblePaths.pop();if("EXIT_ALTERNATIVE"===currPath){foundCompletePath&&(0,last.A)(possiblePaths).idx<=minimalAlternativesIndex&&possiblePaths.pop();continue}const currDef=currPath.def,currIdx=currPath.idx,currRuleStack=currPath.ruleStack,currOccurrenceStack=currPath.occurrenceStack;if((0,isEmpty.A)(currDef))continue;const prod=currDef[0];if("EXIT_NONE_TERMINAL"===prod){const nextPath={idx:currIdx,def:lodash_es_drop(currDef),ruleStack:lodash_es_dropRight(currRuleStack),occurrenceStack:lodash_es_dropRight(currOccurrenceStack)};possiblePaths.push(nextPath)}else if(prod instanceof Terminal)if(currIdx<tokenVectorLength-1){const nextIdx=currIdx+1;if(tokMatcher(tokenVector[nextIdx],prod.terminalType)){const nextPath={idx:nextIdx,def:lodash_es_drop(currDef),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPath)}}else{if(currIdx!==tokenVectorLength-1)throw Error("non exhaustive match");result.push({nextTokenType:prod.terminalType,nextTokenOccurrence:prod.idx,ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack}),foundCompletePath=!0}else if(prod instanceof model_NonTerminal){const newRuleStack=(0,clone.A)(currRuleStack);newRuleStack.push(prod.nonTerminalName);const newOccurrenceStack=(0,clone.A)(currOccurrenceStack);newOccurrenceStack.push(prod.idx);const nextPath={idx:currIdx,def:prod.definition.concat(EXIT_NON_TERMINAL_ARR,lodash_es_drop(currDef)),ruleStack:newRuleStack,occurrenceStack:newOccurrenceStack};possiblePaths.push(nextPath)}else if(prod instanceof Option){const nextPathWithout={idx:currIdx,def:lodash_es_drop(currDef),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPathWithout),possiblePaths.push("EXIT_ALTERNATIVE");const nextPathWith={idx:currIdx,def:prod.definition.concat(lodash_es_drop(currDef)),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPathWith)}else if(prod instanceof RepetitionMandatory){const secondIteration=new Repetition({definition:prod.definition,idx:prod.idx}),nextPath={idx:currIdx,def:prod.definition.concat([secondIteration],lodash_es_drop(currDef)),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPath)}else if(prod instanceof RepetitionMandatoryWithSeparator){const separatorGast=new Terminal({terminalType:prod.separator}),secondIteration=new Repetition({definition:[separatorGast].concat(prod.definition),idx:prod.idx}),nextPath={idx:currIdx,def:prod.definition.concat([secondIteration],lodash_es_drop(currDef)),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPath)}else if(prod instanceof RepetitionWithSeparator){const nextPathWithout={idx:currIdx,def:lodash_es_drop(currDef),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPathWithout),possiblePaths.push("EXIT_ALTERNATIVE");const separatorGast=new Terminal({terminalType:prod.separator}),nthRepetition=new Repetition({definition:[separatorGast].concat(prod.definition),idx:prod.idx}),nextPathWith={idx:currIdx,def:prod.definition.concat([nthRepetition],lodash_es_drop(currDef)),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPathWith)}else if(prod instanceof Repetition){const nextPathWithout={idx:currIdx,def:lodash_es_drop(currDef),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPathWithout),possiblePaths.push("EXIT_ALTERNATIVE");const nthRepetition=new Repetition({definition:prod.definition,idx:prod.idx}),nextPathWith={idx:currIdx,def:prod.definition.concat([nthRepetition],lodash_es_drop(currDef)),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(nextPathWith)}else if(prod instanceof Alternation)for(let i=prod.definition.length-1;i>=0;i--){const currAltPath={idx:currIdx,def:prod.definition[i].definition.concat(lodash_es_drop(currDef)),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack};possiblePaths.push(currAltPath),possiblePaths.push("EXIT_ALTERNATIVE")}else if(prod instanceof Alternative)possiblePaths.push({idx:currIdx,def:prod.definition.concat(lodash_es_drop(currDef)),ruleStack:currRuleStack,occurrenceStack:currOccurrenceStack});else{if(!(prod instanceof Rule))throw Error("non exhaustive match");possiblePaths.push(expandTopLevelRule(prod,currIdx,currRuleStack,currOccurrenceStack))}}return result}function expandTopLevelRule(topRule,currIdx,currRuleStack,currOccurrenceStack){const newRuleStack=(0,clone.A)(currRuleStack);newRuleStack.push(topRule.name);const newCurrOccurrenceStack=(0,clone.A)(currOccurrenceStack);return newCurrOccurrenceStack.push(1),{idx:currIdx,def:topRule.definition,ruleStack:newRuleStack,occurrenceStack:newCurrOccurrenceStack}}var PROD_TYPE;function getProdType(prod){if(prod instanceof Option||"Option"===prod)return PROD_TYPE.OPTION;if(prod instanceof Repetition||"Repetition"===prod)return PROD_TYPE.REPETITION;if(prod instanceof RepetitionMandatory||"RepetitionMandatory"===prod)return PROD_TYPE.REPETITION_MANDATORY;if(prod instanceof RepetitionMandatoryWithSeparator||"RepetitionMandatoryWithSeparator"===prod)return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;if(prod instanceof RepetitionWithSeparator||"RepetitionWithSeparator"===prod)return PROD_TYPE.REPETITION_WITH_SEPARATOR;if(prod instanceof Alternation||"Alternation"===prod)return PROD_TYPE.ALTERNATION;throw Error("non exhaustive match")}function getLookaheadPaths(options){const{occurrence,rule,prodType,maxLookahead}=options,type=getProdType(prodType);return type===PROD_TYPE.ALTERNATION?getLookaheadPathsForOr(occurrence,rule,maxLookahead):getLookaheadPathsForOptionalProd(occurrence,rule,type,maxLookahead)}function buildAlternativesLookAheadFunc(alts,hasPredicates,tokenMatcher,dynamicTokensEnabled){const numOfAlts=alts.length,areAllOneTokenLookahead=lodash_es_every(alts,currAlt=>lodash_es_every(currAlt,currPath=>1===currPath.length));if(hasPredicates)return function(orAlts){const predicates=(0,lodash_es_map.A)(orAlts,currAlt=>currAlt.GATE);for(let t=0;t<numOfAlts;t++){const currAlt=alts[t],currNumOfPaths=currAlt.length,currPredicate=predicates[t];if(void 0===currPredicate||!1!==currPredicate.call(this))nextPath:for(let j=0;j<currNumOfPaths;j++){const currPath=currAlt[j],currPathLength=currPath.length;for(let i=0;i<currPathLength;i++){const nextToken=this.LA(i+1);if(!1===tokenMatcher(nextToken,currPath[i]))continue nextPath}return t}}};if(areAllOneTokenLookahead&&!dynamicTokensEnabled){const singleTokenAlts=(0,lodash_es_map.A)(alts,currAlt=>(0,lodash_es_flatten.A)(currAlt)),choiceToAlt=(0,reduce.A)(singleTokenAlts,(result,currAlt,idx)=>((0,forEach.A)(currAlt,currTokType=>{(0,has.A)(result,currTokType.tokenTypeIdx)||(result[currTokType.tokenTypeIdx]=idx),(0,forEach.A)(currTokType.categoryMatches,currExtendingType=>{(0,has.A)(result,currExtendingType)||(result[currExtendingType]=idx)})}),result),{});return function(){const nextToken=this.LA(1);return choiceToAlt[nextToken.tokenTypeIdx]}}return function(){for(let t=0;t<numOfAlts;t++){const currAlt=alts[t],currNumOfPaths=currAlt.length;nextPath:for(let j=0;j<currNumOfPaths;j++){const currPath=currAlt[j],currPathLength=currPath.length;for(let i=0;i<currPathLength;i++){const nextToken=this.LA(i+1);if(!1===tokenMatcher(nextToken,currPath[i]))continue nextPath}return t}}}}function buildSingleAlternativeLookaheadFunction(alt,tokenMatcher,dynamicTokensEnabled){const areAllOneTokenLookahead=lodash_es_every(alt,currPath=>1===currPath.length),numOfPaths=alt.length;if(areAllOneTokenLookahead&&!dynamicTokensEnabled){const singleTokensTypes=(0,lodash_es_flatten.A)(alt);if(1===singleTokensTypes.length&&(0,isEmpty.A)(singleTokensTypes[0].categoryMatches)){const expectedTokenUniqueKey=singleTokensTypes[0].tokenTypeIdx;return function(){return this.LA(1).tokenTypeIdx===expectedTokenUniqueKey}}{const choiceToAlt=(0,reduce.A)(singleTokensTypes,(result,currTokType,idx)=>(result[currTokType.tokenTypeIdx]=!0,(0,forEach.A)(currTokType.categoryMatches,currExtendingType=>{result[currExtendingType]=!0}),result),[]);return function(){const nextToken=this.LA(1);return!0===choiceToAlt[nextToken.tokenTypeIdx]}}}return function(){nextPath:for(let j=0;j<numOfPaths;j++){const currPath=alt[j],currPathLength=currPath.length;for(let i=0;i<currPathLength;i++){const nextToken=this.LA(i+1);if(!1===tokenMatcher(nextToken,currPath[i]))continue nextPath}return!0}return!1}}!function(PROD_TYPE){PROD_TYPE[PROD_TYPE.OPTION=0]="OPTION",PROD_TYPE[PROD_TYPE.REPETITION=1]="REPETITION",PROD_TYPE[PROD_TYPE.REPETITION_MANDATORY=2]="REPETITION_MANDATORY",PROD_TYPE[PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR=3]="REPETITION_MANDATORY_WITH_SEPARATOR",PROD_TYPE[PROD_TYPE.REPETITION_WITH_SEPARATOR=4]="REPETITION_WITH_SEPARATOR",PROD_TYPE[PROD_TYPE.ALTERNATION=5]="ALTERNATION"}(PROD_TYPE||(PROD_TYPE={}));class RestDefinitionFinderWalker extends RestWalker{constructor(topProd,targetOccurrence,targetProdType){super(),this.topProd=topProd,this.targetOccurrence=targetOccurrence,this.targetProdType=targetProdType}startWalking(){return this.walk(this.topProd),this.restDef}checkIsTarget(node,expectedProdType,currRest,prevRest){return node.idx===this.targetOccurrence&&this.targetProdType===expectedProdType&&(this.restDef=currRest.concat(prevRest),!0)}walkOption(optionProd,currRest,prevRest){this.checkIsTarget(optionProd,PROD_TYPE.OPTION,currRest,prevRest)||super.walkOption(optionProd,currRest,prevRest)}walkAtLeastOne(atLeastOneProd,currRest,prevRest){this.checkIsTarget(atLeastOneProd,PROD_TYPE.REPETITION_MANDATORY,currRest,prevRest)||super.walkOption(atLeastOneProd,currRest,prevRest)}walkAtLeastOneSep(atLeastOneSepProd,currRest,prevRest){this.checkIsTarget(atLeastOneSepProd,PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,currRest,prevRest)||super.walkOption(atLeastOneSepProd,currRest,prevRest)}walkMany(manyProd,currRest,prevRest){this.checkIsTarget(manyProd,PROD_TYPE.REPETITION,currRest,prevRest)||super.walkOption(manyProd,currRest,prevRest)}walkManySep(manySepProd,currRest,prevRest){this.checkIsTarget(manySepProd,PROD_TYPE.REPETITION_WITH_SEPARATOR,currRest,prevRest)||super.walkOption(manySepProd,currRest,prevRest)}}class InsideDefinitionFinderVisitor extends visitor_GAstVisitor{constructor(targetOccurrence,targetProdType,targetRef){super(),this.targetOccurrence=targetOccurrence,this.targetProdType=targetProdType,this.targetRef=targetRef,this.result=[]}checkIsTarget(node,expectedProdName){node.idx!==this.targetOccurrence||this.targetProdType!==expectedProdName||void 0!==this.targetRef&&node!==this.targetRef||(this.result=node.definition)}visitOption(node){this.checkIsTarget(node,PROD_TYPE.OPTION)}visitRepetition(node){this.checkIsTarget(node,PROD_TYPE.REPETITION)}visitRepetitionMandatory(node){this.checkIsTarget(node,PROD_TYPE.REPETITION_MANDATORY)}visitRepetitionMandatoryWithSeparator(node){this.checkIsTarget(node,PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR)}visitRepetitionWithSeparator(node){this.checkIsTarget(node,PROD_TYPE.REPETITION_WITH_SEPARATOR)}visitAlternation(node){this.checkIsTarget(node,PROD_TYPE.ALTERNATION)}}function initializeArrayOfArrays(size){const result=new Array(size);for(let i=0;i<size;i++)result[i]=[];return result}function pathToHashKeys(path){let keys=[""];for(let i=0;i<path.length;i++){const tokType=path[i],longerKeys=[];for(let j=0;j<keys.length;j++){const currShorterKey=keys[j];longerKeys.push(currShorterKey+"_"+tokType.tokenTypeIdx);for(let t=0;t<tokType.categoryMatches.length;t++){const categoriesKeySuffix="_"+tokType.categoryMatches[t];longerKeys.push(currShorterKey+categoriesKeySuffix)}}keys=longerKeys}return keys}function isUniquePrefixHash(altKnownPathsKeys,searchPathKeys,idx){for(let currAltIdx=0;currAltIdx<altKnownPathsKeys.length;currAltIdx++){if(currAltIdx===idx)continue;const otherAltKnownPathsKeys=altKnownPathsKeys[currAltIdx];for(let searchIdx=0;searchIdx<searchPathKeys.length;searchIdx++){if(!0===otherAltKnownPathsKeys[searchPathKeys[searchIdx]])return!1}}return!0}function lookAheadSequenceFromAlternatives(altsDefs,k){const partialAlts=(0,lodash_es_map.A)(altsDefs,currAlt=>possiblePathsFrom([currAlt],1)),finalResult=initializeArrayOfArrays(partialAlts.length),altsHashes=(0,lodash_es_map.A)(partialAlts,currAltPaths=>{const dict={};return(0,forEach.A)(currAltPaths,item=>{const keys=pathToHashKeys(item.partialPath);(0,forEach.A)(keys,currKey=>{dict[currKey]=!0})}),dict});let newData=partialAlts;for(let pathLength=1;pathLength<=k;pathLength++){const currDataset=newData;newData=initializeArrayOfArrays(currDataset.length);for(let altIdx=0;altIdx<currDataset.length;altIdx++){const currAltPathsAndSuffixes=currDataset[altIdx];for(let currPathIdx=0;currPathIdx<currAltPathsAndSuffixes.length;currPathIdx++){const currPathPrefix=currAltPathsAndSuffixes[currPathIdx].partialPath,suffixDef=currAltPathsAndSuffixes[currPathIdx].suffixDef,prefixKeys=pathToHashKeys(currPathPrefix);if(isUniquePrefixHash(altsHashes,prefixKeys,altIdx)||(0,isEmpty.A)(suffixDef)||currPathPrefix.length===k){const currAltResult=finalResult[altIdx];if(!1===containsPath(currAltResult,currPathPrefix)){currAltResult.push(currPathPrefix);for(let j=0;j<prefixKeys.length;j++){const currKey=prefixKeys[j];altsHashes[altIdx][currKey]=!0}}}else{const newPartialPathsAndSuffixes=possiblePathsFrom(suffixDef,pathLength+1,currPathPrefix);newData[altIdx]=newData[altIdx].concat(newPartialPathsAndSuffixes),(0,forEach.A)(newPartialPathsAndSuffixes,item=>{const prefixKeys=pathToHashKeys(item.partialPath);(0,forEach.A)(prefixKeys,key=>{altsHashes[altIdx][key]=!0})})}}}}return finalResult}function getLookaheadPathsForOr(occurrence,ruleGrammar,k,orProd){const visitor=new InsideDefinitionFinderVisitor(occurrence,PROD_TYPE.ALTERNATION,orProd);return ruleGrammar.accept(visitor),lookAheadSequenceFromAlternatives(visitor.result,k)}function getLookaheadPathsForOptionalProd(occurrence,ruleGrammar,prodType,k){const insideDefVisitor=new InsideDefinitionFinderVisitor(occurrence,prodType);ruleGrammar.accept(insideDefVisitor);const insideDef=insideDefVisitor.result,afterDef=new RestDefinitionFinderWalker(ruleGrammar,occurrence,prodType).startWalking();return lookAheadSequenceFromAlternatives([new Alternative({definition:insideDef}),new Alternative({definition:afterDef})],k)}function containsPath(alternative,searchPath){compareOtherPath:for(let i=0;i<alternative.length;i++){const otherPath=alternative[i];if(otherPath.length===searchPath.length){for(let j=0;j<otherPath.length;j++){const searchTok=searchPath[j],otherTok=otherPath[j];if(!1===(searchTok===otherTok||void 0!==otherTok.categoryMatchesMap[searchTok.tokenTypeIdx]))continue compareOtherPath}return!0}}return!1}function areTokenCategoriesNotUsed(lookAheadPaths){return lodash_es_every(lookAheadPaths,singleAltPaths=>lodash_es_every(singleAltPaths,singlePath=>lodash_es_every(singlePath,token=>(0,isEmpty.A)(token.categoryMatches))))}function validateGrammar(topLevels,tokenTypes,errMsgProvider,grammarName){const duplicateErrors=(0,flatMap.A)(topLevels,currTopLevel=>function validateDuplicateProductions(topLevelRule,errMsgProvider){const collectorVisitor=new OccurrenceValidationCollector;topLevelRule.accept(collectorVisitor);const allRuleProductions=collectorVisitor.allProductions,productionGroups=lodash_es_groupBy(allRuleProductions,identifyProductionForDuplicates),duplicates=lodash_es_pickBy(productionGroups,currGroup=>currGroup.length>1),errors=(0,lodash_es_map.A)((0,lodash_es_values.A)(duplicates),currDuplicates=>{const firstProd=lodash_es_head(currDuplicates),msg=errMsgProvider.buildDuplicateFoundError(topLevelRule,currDuplicates),dslName=getProductionDslName(firstProd),defError={message:msg,type:ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,ruleName:topLevelRule.name,dslName,occurrence:firstProd.idx},param=getExtraProductionArgument(firstProd);return param&&(defError.parameter=param),defError});return errors}(currTopLevel,errMsgProvider)),termsNamespaceConflictErrors=function checkTerminalAndNoneTerminalsNameSpace(topLevels,tokenTypes,errMsgProvider){const errors=[],tokenNames=(0,lodash_es_map.A)(tokenTypes,currToken=>currToken.name);return(0,forEach.A)(topLevels,currRule=>{const currRuleName=currRule.name;if(lodash_es_includes(tokenNames,currRuleName)){const errMsg=errMsgProvider.buildNamespaceConflictError(currRule);errors.push({message:errMsg,type:ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,ruleName:currRuleName})}}),errors}(topLevels,tokenTypes,errMsgProvider),tooManyAltsErrors=(0,flatMap.A)(topLevels,curRule=>function validateTooManyAlts(topLevelRule,errMsgProvider){const orCollector=new OrCollector;topLevelRule.accept(orCollector);const ors=orCollector.alternations,errors=(0,flatMap.A)(ors,currOr=>currOr.definition.length>255?[{message:errMsgProvider.buildTooManyAlternativesError({topLevelRule,alternation:currOr}),type:ParserDefinitionErrorType.TOO_MANY_ALTS,ruleName:topLevelRule.name,occurrence:currOr.idx}]:[]);return errors}(curRule,errMsgProvider)),duplicateRulesError=(0,flatMap.A)(topLevels,curRule=>function validateRuleDoesNotAlreadyExist(rule,allRules,className,errMsgProvider){const errors=[],occurrences=(0,reduce.A)(allRules,(result,curRule)=>curRule.name===rule.name?result+1:result,0);if(occurrences>1){const errMsg=errMsgProvider.buildDuplicateRuleNameError({topLevelRule:rule,grammarName:className});errors.push({message:errMsg,type:ParserDefinitionErrorType.DUPLICATE_RULE_NAME,ruleName:rule.name})}return errors}(curRule,topLevels,grammarName,errMsgProvider));return duplicateErrors.concat(termsNamespaceConflictErrors,tooManyAltsErrors,duplicateRulesError)}function identifyProductionForDuplicates(prod){return`${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`}function getExtraProductionArgument(prod){return prod instanceof Terminal?prod.terminalType.name:prod instanceof model_NonTerminal?prod.nonTerminalName:""}class OccurrenceValidationCollector extends visitor_GAstVisitor{constructor(){super(...arguments),this.allProductions=[]}visitNonTerminal(subrule){this.allProductions.push(subrule)}visitOption(option){this.allProductions.push(option)}visitRepetitionWithSeparator(manySep){this.allProductions.push(manySep)}visitRepetitionMandatory(atLeastOne){this.allProductions.push(atLeastOne)}visitRepetitionMandatoryWithSeparator(atLeastOneSep){this.allProductions.push(atLeastOneSep)}visitRepetition(many){this.allProductions.push(many)}visitAlternation(or){this.allProductions.push(or)}visitTerminal(terminal){this.allProductions.push(terminal)}}function validateNoLeftRecursion(topRule,currRule,errMsgProvider,path=[]){const errors=[],nextNonTerminals=getFirstNoneTerminal(currRule.definition);if((0,isEmpty.A)(nextNonTerminals))return[];{const ruleName=topRule.name;lodash_es_includes(nextNonTerminals,topRule)&&errors.push({message:errMsgProvider.buildLeftRecursionError({topLevelRule:topRule,leftRecursionPath:path}),type:ParserDefinitionErrorType.LEFT_RECURSION,ruleName});const validNextSteps=lodash_es_difference(nextNonTerminals,path.concat([topRule])),errorsFromNextSteps=(0,flatMap.A)(validNextSteps,currRefRule=>{const newPath=(0,clone.A)(path);return newPath.push(currRefRule),validateNoLeftRecursion(topRule,currRefRule,errMsgProvider,newPath)});return errors.concat(errorsFromNextSteps)}}function getFirstNoneTerminal(definition){let result=[];if((0,isEmpty.A)(definition))return result;const firstProd=lodash_es_head(definition);if(firstProd instanceof model_NonTerminal)result.push(firstProd.referencedRule);else if(firstProd instanceof Alternative||firstProd instanceof Option||firstProd instanceof RepetitionMandatory||firstProd instanceof RepetitionMandatoryWithSeparator||firstProd instanceof RepetitionWithSeparator||firstProd instanceof Repetition)result=result.concat(getFirstNoneTerminal(firstProd.definition));else if(firstProd instanceof Alternation)result=(0,lodash_es_flatten.A)((0,lodash_es_map.A)(firstProd.definition,currSubDef=>getFirstNoneTerminal(currSubDef.definition)));else if(!(firstProd instanceof Terminal))throw Error("non exhaustive match");const isFirstOptional=isOptionalProd(firstProd),hasMore=definition.length>1;if(isFirstOptional&&hasMore){const rest=lodash_es_drop(definition);return result.concat(getFirstNoneTerminal(rest))}return result}class OrCollector extends visitor_GAstVisitor{constructor(){super(...arguments),this.alternations=[]}visitAlternation(node){this.alternations.push(node)}}function validateAmbiguousAlternationAlternatives(topLevelRule,globalMaxLookahead,errMsgProvider){const orCollector=new OrCollector;topLevelRule.accept(orCollector);let ors=orCollector.alternations;ors=lodash_es_reject(ors,currOr=>!0===currOr.ignoreAmbiguities);const errors=(0,flatMap.A)(ors,currOr=>{const currOccurrence=currOr.idx,actualMaxLookahead=currOr.maxLookahead||globalMaxLookahead,alternatives=getLookaheadPathsForOr(currOccurrence,topLevelRule,actualMaxLookahead,currOr),altsAmbiguityErrors=function checkAlternativesAmbiguities(alternatives,alternation,rule,errMsgProvider){const foundAmbiguousPaths=[],identicalAmbiguities=(0,reduce.A)(alternatives,(result,currAlt,currAltIdx)=>(!0===alternation.definition[currAltIdx].ignoreAmbiguities||(0,forEach.A)(currAlt,currPath=>{const altsCurrPathAppearsIn=[currAltIdx];(0,forEach.A)(alternatives,(currOtherAlt,currOtherAltIdx)=>{currAltIdx!==currOtherAltIdx&&containsPath(currOtherAlt,currPath)&&!0!==alternation.definition[currOtherAltIdx].ignoreAmbiguities&&altsCurrPathAppearsIn.push(currOtherAltIdx)}),altsCurrPathAppearsIn.length>1&&!containsPath(foundAmbiguousPaths,currPath)&&(foundAmbiguousPaths.push(currPath),result.push({alts:altsCurrPathAppearsIn,path:currPath}))}),result),[]),currErrors=(0,lodash_es_map.A)(identicalAmbiguities,currAmbDescriptor=>{const ambgIndices=(0,lodash_es_map.A)(currAmbDescriptor.alts,currAltIdx=>currAltIdx+1);return{message:errMsgProvider.buildAlternationAmbiguityError({topLevelRule:rule,alternation,ambiguityIndices:ambgIndices,prefixPath:currAmbDescriptor.path}),type:ParserDefinitionErrorType.AMBIGUOUS_ALTS,ruleName:rule.name,occurrence:alternation.idx,alternatives:currAmbDescriptor.alts}});return currErrors}(alternatives,currOr,topLevelRule,errMsgProvider),altsPrefixAmbiguityErrors=function checkPrefixAlternativesAmbiguities(alternatives,alternation,rule,errMsgProvider){const pathsAndIndices=(0,reduce.A)(alternatives,(result,currAlt,idx)=>{const currPathsAndIdx=(0,lodash_es_map.A)(currAlt,currPath=>({idx,path:currPath}));return result.concat(currPathsAndIdx)},[]),errors=lodash_es_compact((0,flatMap.A)(pathsAndIndices,currPathAndIdx=>{if(!0===alternation.definition[currPathAndIdx.idx].ignoreAmbiguities)return[];const targetIdx=currPathAndIdx.idx,targetPath=currPathAndIdx.path,prefixAmbiguitiesPathsAndIndices=(0,filter.A)(pathsAndIndices,searchPathAndIdx=>!0!==alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities&&searchPathAndIdx.idx<targetIdx&&function isStrictPrefixOfPath(prefix,other){return prefix.length<other.length&&lodash_es_every(prefix,(tokType,idx)=>{const otherTokType=other[idx];return tokType===otherTokType||otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]})}(searchPathAndIdx.path,targetPath));return(0,lodash_es_map.A)(prefixAmbiguitiesPathsAndIndices,currAmbPathAndIdx=>{const ambgIndices=[currAmbPathAndIdx.idx+1,targetIdx+1],occurrence=0===alternation.idx?"":alternation.idx;return{message:errMsgProvider.buildAlternationPrefixAmbiguityError({topLevelRule:rule,alternation,ambiguityIndices:ambgIndices,prefixPath:currAmbPathAndIdx.path}),type:ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,ruleName:rule.name,occurrence,alternatives:ambgIndices}})}));return errors}(alternatives,currOr,topLevelRule,errMsgProvider);return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors)});return errors}class RepetitionCollector extends visitor_GAstVisitor{constructor(){super(...arguments),this.allProductions=[]}visitRepetitionWithSeparator(manySep){this.allProductions.push(manySep)}visitRepetitionMandatory(atLeastOne){this.allProductions.push(atLeastOne)}visitRepetitionMandatoryWithSeparator(atLeastOneSep){this.allProductions.push(atLeastOneSep)}visitRepetition(many){this.allProductions.push(many)}}function gast_resolver_public_resolveGrammar(options){const actualOptions=(0,defaults.A)(options,{errMsgProvider:defaultGrammarResolverErrorProvider}),topRulesTable={};return(0,forEach.A)(options.rules,rule=>{topRulesTable[rule.name]=rule}),function resolveGrammar(topLevels,errMsgProvider){const refResolver=new GastRefResolverVisitor(topLevels,errMsgProvider);return refResolver.resolveRefs(),refResolver.errors}(topRulesTable,actualOptions.errMsgProvider)}const RECOGNITION_EXCEPTION_NAMES=["MismatchedTokenException","NoViableAltException","EarlyExitException","NotAllInputParsedException"];function isRecognitionException(error){return lodash_es_includes(RECOGNITION_EXCEPTION_NAMES,error.name)}Object.freeze(RECOGNITION_EXCEPTION_NAMES);class RecognitionException extends Error{constructor(message,token){super(message),this.token=token,this.resyncedTokens=[],Object.setPrototypeOf(this,new.target.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class MismatchedTokenException extends RecognitionException{constructor(message,token,previousToken){super(message,token),this.previousToken=previousToken,this.name="MismatchedTokenException"}}class NoViableAltException extends RecognitionException{constructor(message,token,previousToken){super(message,token),this.previousToken=previousToken,this.name="NoViableAltException"}}class NotAllInputParsedException extends RecognitionException{constructor(message,token){super(message,token),this.name="NotAllInputParsedException"}}class EarlyExitException extends RecognitionException{constructor(message,token,previousToken){super(message,token),this.previousToken=previousToken,this.name="EarlyExitException"}}const EOF_FOLLOW_KEY={};class InRuleRecoveryException extends Error{constructor(message){super(message),this.name="InRuleRecoveryException"}}function attemptInRepetitionRecovery(prodFunc,args,lookaheadFunc,dslMethodIdx,prodOccurrence,nextToksWalker,notStuck){const key=this.getKeyForAutomaticLookahead(dslMethodIdx,prodOccurrence);let firstAfterRepInfo=this.firstAfterRepMap[key];if(void 0===firstAfterRepInfo){const currRuleName=this.getCurrRuleFullName();firstAfterRepInfo=new nextToksWalker(this.getGAstProductions()[currRuleName],prodOccurrence).startWalking(),this.firstAfterRepMap[key]=firstAfterRepInfo}let expectTokAfterLastMatch=firstAfterRepInfo.token,nextTokIdx=firstAfterRepInfo.occurrence;const isEndOfRule=firstAfterRepInfo.isEndOfRule;1===this.RULE_STACK.length&&isEndOfRule&&void 0===expectTokAfterLastMatch&&(expectTokAfterLastMatch=EOF,nextTokIdx=1),void 0!==expectTokAfterLastMatch&&void 0!==nextTokIdx&&this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch,nextTokIdx,notStuck)&&this.tryInRepetitionRecovery(prodFunc,args,lookaheadFunc,expectTokAfterLastMatch)}function getKeyForAutomaticLookahead(ruleIdx,dslMethodIdx,occurrence){return occurrence|dslMethodIdx|ruleIdx}class LLkLookaheadStrategy{constructor(options){var _a;this.maxLookahead=null!==(_a=null==options?void 0:options.maxLookahead)&&void 0!==_a?_a:DEFAULT_PARSER_CONFIG.maxLookahead}validate(options){const leftRecursionErrors=this.validateNoLeftRecursion(options.rules);if((0,isEmpty.A)(leftRecursionErrors)){const emptyAltErrors=this.validateEmptyOrAlternatives(options.rules),ambiguousAltsErrors=this.validateAmbiguousAlternationAlternatives(options.rules,this.maxLookahead),emptyRepetitionErrors=this.validateSomeNonEmptyLookaheadPath(options.rules,this.maxLookahead);return[...leftRecursionErrors,...emptyAltErrors,...ambiguousAltsErrors,...emptyRepetitionErrors]}return leftRecursionErrors}validateNoLeftRecursion(rules){return(0,flatMap.A)(rules,currTopRule=>validateNoLeftRecursion(currTopRule,currTopRule,defaultGrammarValidatorErrorProvider))}validateEmptyOrAlternatives(rules){return(0,flatMap.A)(rules,currTopRule=>function validateEmptyOrAlternative(topLevelRule,errMsgProvider){const orCollector=new OrCollector;topLevelRule.accept(orCollector);const ors=orCollector.alternations;return(0,flatMap.A)(ors,currOr=>{const exceptLast=lodash_es_dropRight(currOr.definition);return(0,flatMap.A)(exceptLast,(currAlternative,currAltIdx)=>{const possibleFirstInAlt=nextPossibleTokensAfter([currAlternative],[],tokenStructuredMatcher,1);return(0,isEmpty.A)(possibleFirstInAlt)?[{message:errMsgProvider.buildEmptyAlternationError({topLevelRule,alternation:currOr,emptyChoiceIdx:currAltIdx}),type:ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,ruleName:topLevelRule.name,occurrence:currOr.idx,alternative:currAltIdx+1}]:[]})})}(currTopRule,defaultGrammarValidatorErrorProvider))}validateAmbiguousAlternationAlternatives(rules,maxLookahead){return(0,flatMap.A)(rules,currTopRule=>validateAmbiguousAlternationAlternatives(currTopRule,maxLookahead,defaultGrammarValidatorErrorProvider))}validateSomeNonEmptyLookaheadPath(rules,maxLookahead){return function validateSomeNonEmptyLookaheadPath(topLevelRules,maxLookahead,errMsgProvider){const errors=[];return(0,forEach.A)(topLevelRules,currTopRule=>{const collectorVisitor=new RepetitionCollector;currTopRule.accept(collectorVisitor);const allRuleProductions=collectorVisitor.allProductions;(0,forEach.A)(allRuleProductions,currProd=>{const prodType=getProdType(currProd),actualMaxLookahead=currProd.maxLookahead||maxLookahead,pathsInsideProduction=getLookaheadPathsForOptionalProd(currProd.idx,currTopRule,prodType,actualMaxLookahead)[0];if((0,isEmpty.A)((0,lodash_es_flatten.A)(pathsInsideProduction))){const errMsg=errMsgProvider.buildEmptyRepetitionError({topLevelRule:currTopRule,repetition:currProd});errors.push({message:errMsg,type:ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,ruleName:currTopRule.name})}})}),errors}(rules,maxLookahead,defaultGrammarValidatorErrorProvider)}buildLookaheadForAlternation(options){return function buildLookaheadFuncForOr(occurrence,ruleGrammar,maxLookahead,hasPredicates,dynamicTokensEnabled,laFuncBuilder){const lookAheadPaths=getLookaheadPathsForOr(occurrence,ruleGrammar,maxLookahead);return laFuncBuilder(lookAheadPaths,hasPredicates,areTokenCategoriesNotUsed(lookAheadPaths)?tokenStructuredMatcherNoCategories:tokenStructuredMatcher,dynamicTokensEnabled)}(options.prodOccurrence,options.rule,options.maxLookahead,options.hasPredicates,options.dynamicTokensEnabled,buildAlternativesLookAheadFunc)}buildLookaheadForOptional(options){return function buildLookaheadFuncForOptionalProd(occurrence,ruleGrammar,k,dynamicTokensEnabled,prodType,lookaheadBuilder){const lookAheadPaths=getLookaheadPathsForOptionalProd(occurrence,ruleGrammar,prodType,k),tokenMatcher=areTokenCategoriesNotUsed(lookAheadPaths)?tokenStructuredMatcherNoCategories:tokenStructuredMatcher;return lookaheadBuilder(lookAheadPaths[0],tokenMatcher,dynamicTokensEnabled)}(options.prodOccurrence,options.rule,options.maxLookahead,options.dynamicTokensEnabled,getProdType(options.prodType),buildSingleAlternativeLookaheadFunction)}}const collectorVisitor=new class DslMethodsCollectorVisitor extends visitor_GAstVisitor{constructor(){super(...arguments),this.dslMethods={option:[],alternation:[],repetition:[],repetitionWithSeparator:[],repetitionMandatory:[],repetitionMandatoryWithSeparator:[]}}reset(){this.dslMethods={option:[],alternation:[],repetition:[],repetitionWithSeparator:[],repetitionMandatory:[],repetitionMandatoryWithSeparator:[]}}visitOption(option){this.dslMethods.option.push(option)}visitRepetitionWithSeparator(manySep){this.dslMethods.repetitionWithSeparator.push(manySep)}visitRepetitionMandatory(atLeastOne){this.dslMethods.repetitionMandatory.push(atLeastOne)}visitRepetitionMandatoryWithSeparator(atLeastOneSep){this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep)}visitRepetition(many){this.dslMethods.repetition.push(many)}visitAlternation(or){this.dslMethods.alternation.push(or)}};function setNodeLocationOnlyOffset(currNodeLocation,newLocationInfo){!0===isNaN(currNodeLocation.startOffset)?(currNodeLocation.startOffset=newLocationInfo.startOffset,currNodeLocation.endOffset=newLocationInfo.endOffset):currNodeLocation.endOffset<newLocationInfo.endOffset==!0&&(currNodeLocation.endOffset=newLocationInfo.endOffset)}function setNodeLocationFull(currNodeLocation,newLocationInfo){!0===isNaN(currNodeLocation.startOffset)?(currNodeLocation.startOffset=newLocationInfo.startOffset,currNodeLocation.startColumn=newLocationInfo.startColumn,currNodeLocation.startLine=newLocationInfo.startLine,currNodeLocation.endOffset=newLocationInfo.endOffset,currNodeLocation.endColumn=newLocationInfo.endColumn,currNodeLocation.endLine=newLocationInfo.endLine):currNodeLocation.endOffset<newLocationInfo.endOffset==!0&&(currNodeLocation.endOffset=newLocationInfo.endOffset,currNodeLocation.endColumn=newLocationInfo.endColumn,currNodeLocation.endLine=newLocationInfo.endLine)}function defineNameProp(obj,nameValue){Object.defineProperty(obj,"name",{enumerable:!1,configurable:!0,writable:!1,value:nameValue})}function defaultVisit(ctx,param){const childrenNames=(0,keys.A)(ctx),childrenNamesLength=childrenNames.length;for(let i=0;i<childrenNamesLength;i++){const currChildArray=ctx[childrenNames[i]],currChildArrayLength=currChildArray.length;for(let j=0;j<currChildArrayLength;j++){const currChild=currChildArray[j];void 0===currChild.tokenTypeIdx&&this[currChild.name](currChild.children,param)}}}function createBaseSemanticVisitorConstructor(grammarName,ruleNames){const derivedConstructor=function(){};defineNameProp(derivedConstructor,grammarName+"BaseSemantics");const semanticProto={visit:function(cstNode,param){if((0,isArray.A)(cstNode)&&(cstNode=cstNode[0]),!(0,isUndefined.A)(cstNode))return this[cstNode.name](cstNode.children,param)},validateVisitor:function(){const semanticDefinitionErrors=function validateVisitor(visitorInstance,ruleNames){const missingErrors=function validateMissingCstMethods(visitorInstance,ruleNames){const missingRuleNames=(0,filter.A)(ruleNames,currRuleName=>!1===(0,isFunction.A)(visitorInstance[currRuleName])),errors=(0,lodash_es_map.A)(missingRuleNames,currRuleName=>({msg:`Missing visitor method: <${currRuleName}> on ${visitorInstance.constructor.name} CST Visitor.`,type:CstVisitorDefinitionError.MISSING_METHOD,methodName:currRuleName}));return lodash_es_compact(errors)}(visitorInstance,ruleNames);return missingErrors}(this,ruleNames);if(!(0,isEmpty.A)(semanticDefinitionErrors)){const errorMessages=(0,lodash_es_map.A)(semanticDefinitionErrors,currDefError=>currDefError.msg);throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\n\t${errorMessages.join("\n\n").replace(/\n/g,"\n\t")}`)}}};return(derivedConstructor.prototype=semanticProto).constructor=derivedConstructor,derivedConstructor._RULE_NAMES=ruleNames,derivedConstructor}var CstVisitorDefinitionError;!function(CstVisitorDefinitionError){CstVisitorDefinitionError[CstVisitorDefinitionError.REDUNDANT_METHOD=0]="REDUNDANT_METHOD",CstVisitorDefinitionError[CstVisitorDefinitionError.MISSING_METHOD=1]="MISSING_METHOD"}(CstVisitorDefinitionError||(CstVisitorDefinitionError={}));var isObject=__webpack_require__("./node_modules/lodash-es/isObject.js");const RECORDING_NULL_OBJECT={description:"This Object indicates the Parser is during Recording Phase"};Object.freeze(RECORDING_NULL_OBJECT);const MAX_METHOD_IDX=Math.pow(2,8)-1,RFT=createToken({name:"RECORDING_PHASE_TOKEN",pattern:Lexer.NA});augmentTokenTypes([RFT]);const RECORDING_PHASE_TOKEN=createTokenInstance(RFT,"This IToken indicates the Parser is in Recording Phase\n\tSee: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details",-1,-1,-1,-1,-1,-1);Object.freeze(RECORDING_PHASE_TOKEN);const RECORDING_PHASE_CSTNODE={name:"This CSTNode indicates the Parser is in Recording Phase\n\tSee: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details",children:{}};function recordProd(prodConstructor,mainProdArg,occurrence,handleSep=!1){assertMethodIdxIsValid(occurrence);const prevProd=(0,last.A)(this.recordingProdStack),grammarAction=(0,isFunction.A)(mainProdArg)?mainProdArg:mainProdArg.DEF,newProd=new prodConstructor({definition:[],idx:occurrence});return handleSep&&(newProd.separator=mainProdArg.SEP),(0,has.A)(mainProdArg,"MAX_LOOKAHEAD")&&(newProd.maxLookahead=mainProdArg.MAX_LOOKAHEAD),this.recordingProdStack.push(newProd),grammarAction.call(this),prevProd.definition.push(newProd),this.recordingProdStack.pop(),RECORDING_NULL_OBJECT}function recordOrProd(mainProdArg,occurrence){assertMethodIdxIsValid(occurrence);const prevProd=(0,last.A)(this.recordingProdStack),hasOptions=!1===(0,isArray.A)(mainProdArg),alts=!1===hasOptions?mainProdArg:mainProdArg.DEF,newOrProd=new Alternation({definition:[],idx:occurrence,ignoreAmbiguities:hasOptions&&!0===mainProdArg.IGNORE_AMBIGUITIES});(0,has.A)(mainProdArg,"MAX_LOOKAHEAD")&&(newOrProd.maxLookahead=mainProdArg.MAX_LOOKAHEAD);const hasPredicates=lodash_es_some(alts,currAlt=>(0,isFunction.A)(currAlt.GATE));return newOrProd.hasPredicates=hasPredicates,prevProd.definition.push(newOrProd),(0,forEach.A)(alts,currAlt=>{const currAltFlat=new Alternative({definition:[]});newOrProd.definition.push(currAltFlat),(0,has.A)(currAlt,"IGNORE_AMBIGUITIES")?currAltFlat.ignoreAmbiguities=currAlt.IGNORE_AMBIGUITIES:(0,has.A)(currAlt,"GATE")&&(currAltFlat.ignoreAmbiguities=!0),this.recordingProdStack.push(currAltFlat),currAlt.ALT.call(this),this.recordingProdStack.pop()}),RECORDING_NULL_OBJECT}function getIdxSuffix(idx){return 0===idx?"":`${idx}`}function assertMethodIdxIsValid(idx){if(idx<0||idx>MAX_METHOD_IDX){const error=new Error(`Invalid DSL Method idx value: <${idx}>\n\tIdx value must be a none negative value smaller than ${MAX_METHOD_IDX+1}`);throw error.KNOWN_RECORDER_ERROR=!0,error}}const END_OF_FILE=createTokenInstance(EOF,"",NaN,NaN,NaN,NaN,NaN,NaN);Object.freeze(END_OF_FILE);const DEFAULT_PARSER_CONFIG=Object.freeze({recoveryEnabled:!1,maxLookahead:3,dynamicTokensEnabled:!1,outputCst:!0,errorMessageProvider:defaultParserErrorProvider,nodeLocationTracking:"none",traceInitPerf:!1,skipValidations:!1}),DEFAULT_RULE_CONFIG=Object.freeze({recoveryValueFunc:()=>{},resyncEnabled:!0});var ParserDefinitionErrorType;function EMPTY_ALT(value=void 0){return function(){return value}}!function(ParserDefinitionErrorType){ParserDefinitionErrorType[ParserDefinitionErrorType.INVALID_RULE_NAME=0]="INVALID_RULE_NAME",ParserDefinitionErrorType[ParserDefinitionErrorType.DUPLICATE_RULE_NAME=1]="DUPLICATE_RULE_NAME",ParserDefinitionErrorType[ParserDefinitionErrorType.INVALID_RULE_OVERRIDE=2]="INVALID_RULE_OVERRIDE",ParserDefinitionErrorType[ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS=3]="DUPLICATE_PRODUCTIONS",ParserDefinitionErrorType[ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF=4]="UNRESOLVED_SUBRULE_REF",ParserDefinitionErrorType[ParserDefinitionErrorType.LEFT_RECURSION=5]="LEFT_RECURSION",ParserDefinitionErrorType[ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT=6]="NONE_LAST_EMPTY_ALT",ParserDefinitionErrorType[ParserDefinitionErrorType.AMBIGUOUS_ALTS=7]="AMBIGUOUS_ALTS",ParserDefinitionErrorType[ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE=8]="CONFLICT_TOKENS_RULES_NAMESPACE",ParserDefinitionErrorType[ParserDefinitionErrorType.INVALID_TOKEN_NAME=9]="INVALID_TOKEN_NAME",ParserDefinitionErrorType[ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD=10]="NO_NON_EMPTY_LOOKAHEAD",ParserDefinitionErrorType[ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS=11]="AMBIGUOUS_PREFIX_ALTS",ParserDefinitionErrorType[ParserDefinitionErrorType.TOO_MANY_ALTS=12]="TOO_MANY_ALTS",ParserDefinitionErrorType[ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION=13]="CUSTOM_LOOKAHEAD_VALIDATION"}(ParserDefinitionErrorType||(ParserDefinitionErrorType={}));class Parser{static performSelfAnalysis(parserInstance){throw Error("The **static** `performSelfAnalysis` method has been deprecated.\t\nUse the **instance** method with the same name instead.")}performSelfAnalysis(){this.TRACE_INIT("performSelfAnalysis",()=>{let defErrorsMsgs;this.selfAnalysisDone=!0;const className=this.className;this.TRACE_INIT("toFastProps",()=>{toFastProperties(this)}),this.TRACE_INIT("Grammar Recording",()=>{try{this.enableRecording(),(0,forEach.A)(this.definedRulesNames,currRuleName=>{const originalGrammarAction=this[currRuleName].originalGrammarAction;let recordedRuleGast;this.TRACE_INIT(`${currRuleName} Rule`,()=>{recordedRuleGast=this.topLevelRuleRecord(currRuleName,originalGrammarAction)}),this.gastProductionsCache[currRuleName]=recordedRuleGast})}finally{this.disableRecording()}});let resolverErrors=[];if(this.TRACE_INIT("Grammar Resolving",()=>{resolverErrors=gast_resolver_public_resolveGrammar({rules:(0,lodash_es_values.A)(this.gastProductionsCache)}),this.definitionErrors=this.definitionErrors.concat(resolverErrors)}),this.TRACE_INIT("Grammar Validations",()=>{if((0,isEmpty.A)(resolverErrors)&&!1===this.skipValidations){const validationErrors=function gast_resolver_public_validateGrammar(options){return validateGrammar((options=(0,defaults.A)(options,{errMsgProvider:defaultGrammarValidatorErrorProvider})).rules,options.tokenTypes,options.errMsgProvider,options.grammarName)}({rules:(0,lodash_es_values.A)(this.gastProductionsCache),tokenTypes:(0,lodash_es_values.A)(this.tokensMap),errMsgProvider:defaultGrammarValidatorErrorProvider,grammarName:className}),lookaheadValidationErrors=function validateLookahead(options){const lookaheadValidationErrorMessages=options.lookaheadStrategy.validate({rules:options.rules,tokenTypes:options.tokenTypes,grammarName:options.grammarName});return(0,lodash_es_map.A)(lookaheadValidationErrorMessages,errorMessage=>Object.assign({type:ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION},errorMessage))}({lookaheadStrategy:this.lookaheadStrategy,rules:(0,lodash_es_values.A)(this.gastProductionsCache),tokenTypes:(0,lodash_es_values.A)(this.tokensMap),grammarName:className});this.definitionErrors=this.definitionErrors.concat(validationErrors,lookaheadValidationErrors)}}),(0,isEmpty.A)(this.definitionErrors)&&(this.recoveryEnabled&&this.TRACE_INIT("computeAllProdsFollows",()=>{const allFollows=function computeAllProdsFollows(topProductions){const reSyncFollows={};return(0,forEach.A)(topProductions,topProd=>{const currRefsFollow=new ResyncFollowsWalker(topProd).startWalking();lodash_es_assign(reSyncFollows,currRefsFollow)}),reSyncFollows}((0,lodash_es_values.A)(this.gastProductionsCache));this.resyncFollows=allFollows}),this.TRACE_INIT("ComputeLookaheadFunctions",()=>{var _a,_b;null===(_b=(_a=this.lookaheadStrategy).initialize)||void 0===_b||_b.call(_a,{rules:(0,lodash_es_values.A)(this.gastProductionsCache)}),this.preComputeLookaheadFunctions((0,lodash_es_values.A)(this.gastProductionsCache))})),!Parser.DEFER_DEFINITION_ERRORS_HANDLING&&!(0,isEmpty.A)(this.definitionErrors))throw defErrorsMsgs=(0,lodash_es_map.A)(this.definitionErrors,defError=>defError.message),new Error(`Parser Definition Errors detected:\n ${defErrorsMsgs.join("\n-------------------------------\n")}`)})}constructor(tokenVocabulary,config){this.definitionErrors=[],this.selfAnalysisDone=!1;if(this.initErrorHandler(config),this.initLexerAdapter(),this.initLooksAhead(config),this.initRecognizerEngine(tokenVocabulary,config),this.initRecoverable(config),this.initTreeBuilder(config),this.initContentAssist(),this.initGastRecorder(config),this.initPerformanceTracer(config),(0,has.A)(config,"ignoredIssues"))throw new Error("The <ignoredIssues> IParserConfig property has been deprecated.\n\tPlease use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\n\tSee: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\n\tFor further details.");this.skipValidations=(0,has.A)(config,"skipValidations")?config.skipValidations:DEFAULT_PARSER_CONFIG.skipValidations}}Parser.DEFER_DEFINITION_ERRORS_HANDLING=!1,function applyMixins(derivedCtor,baseCtors){baseCtors.forEach(baseCtor=>{const baseProto=baseCtor.prototype;Object.getOwnPropertyNames(baseProto).forEach(propName=>{if("constructor"===propName)return;const basePropDescriptor=Object.getOwnPropertyDescriptor(baseProto,propName);basePropDescriptor&&(basePropDescriptor.get||basePropDescriptor.set)?Object.defineProperty(derivedCtor.prototype,propName,basePropDescriptor):derivedCtor.prototype[propName]=baseCtor.prototype[propName]})})}(Parser,[class Recoverable{initRecoverable(config){this.firstAfterRepMap={},this.resyncFollows={},this.recoveryEnabled=(0,has.A)(config,"recoveryEnabled")?config.recoveryEnabled:DEFAULT_PARSER_CONFIG.recoveryEnabled,this.recoveryEnabled&&(this.attemptInRepetitionRecovery=attemptInRepetitionRecovery)}getTokenToInsert(tokType){const tokToInsert=createTokenInstance(tokType,"",NaN,NaN,NaN,NaN,NaN,NaN);return tokToInsert.isInsertedInRecovery=!0,tokToInsert}canTokenTypeBeInsertedInRecovery(tokType){return!0}canTokenTypeBeDeletedInRecovery(tokType){return!0}tryInRepetitionRecovery(grammarRule,grammarRuleArgs,lookAheadFunc,expectedTokType){const reSyncTokType=this.findReSyncTokenType(),savedLexerState=this.exportLexerState(),resyncedTokens=[];let passedResyncPoint=!1;const nextTokenWithoutResync=this.LA(1);let currToken=this.LA(1);const generateErrorMessage=()=>{const previousToken=this.LA(0),msg=this.errorMessageProvider.buildMismatchTokenMessage({expected:expectedTokType,actual:nextTokenWithoutResync,previous:previousToken,ruleName:this.getCurrRuleFullName()}),error=new MismatchedTokenException(msg,nextTokenWithoutResync,this.LA(0));error.resyncedTokens=lodash_es_dropRight(resyncedTokens),this.SAVE_ERROR(error)};for(;!passedResyncPoint;){if(this.tokenMatcher(currToken,expectedTokType))return void generateErrorMessage();if(lookAheadFunc.call(this))return generateErrorMessage(),void grammarRule.apply(this,grammarRuleArgs);this.tokenMatcher(currToken,reSyncTokType)?passedResyncPoint=!0:(currToken=this.SKIP_TOKEN(),this.addToResyncTokens(currToken,resyncedTokens))}this.importLexerState(savedLexerState)}shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch,nextTokIdx,notStuck){return!1!==notStuck&&(!this.tokenMatcher(this.LA(1),expectTokAfterLastMatch)&&(!this.isBackTracking()&&!this.canPerformInRuleRecovery(expectTokAfterLastMatch,this.getFollowsForInRuleRecovery(expectTokAfterLastMatch,nextTokIdx))))}getFollowsForInRuleRecovery(tokType,tokIdxInRule){const grammarPath=this.getCurrentGrammarPath(tokType,tokIdxInRule);return this.getNextPossibleTokenTypes(grammarPath)}tryInRuleRecovery(expectedTokType,follows){if(this.canRecoverWithSingleTokenInsertion(expectedTokType,follows)){return this.getTokenToInsert(expectedTokType)}if(this.canRecoverWithSingleTokenDeletion(expectedTokType)){const nextTok=this.SKIP_TOKEN();return this.consumeToken(),nextTok}throw new InRuleRecoveryException("sad sad panda")}canPerformInRuleRecovery(expectedToken,follows){return this.canRecoverWithSingleTokenInsertion(expectedToken,follows)||this.canRecoverWithSingleTokenDeletion(expectedToken)}canRecoverWithSingleTokenInsertion(expectedTokType,follows){if(!this.canTokenTypeBeInsertedInRecovery(expectedTokType))return!1;if((0,isEmpty.A)(follows))return!1;const mismatchedTok=this.LA(1);return void 0!==(0,find.A)(follows,possibleFollowsTokType=>this.tokenMatcher(mismatchedTok,possibleFollowsTokType))}canRecoverWithSingleTokenDeletion(expectedTokType){if(!this.canTokenTypeBeDeletedInRecovery(expectedTokType))return!1;return this.tokenMatcher(this.LA(2),expectedTokType)}isInCurrentRuleReSyncSet(tokenTypeIdx){const followKey=this.getCurrFollowKey(),currentRuleReSyncSet=this.getFollowSetFromFollowKey(followKey);return lodash_es_includes(currentRuleReSyncSet,tokenTypeIdx)}findReSyncTokenType(){const allPossibleReSyncTokTypes=this.flattenFollowSet();let nextToken=this.LA(1),k=2;for(;;){const foundMatch=(0,find.A)(allPossibleReSyncTokTypes,resyncTokType=>tokenMatcher(nextToken,resyncTokType));if(void 0!==foundMatch)return foundMatch;nextToken=this.LA(k),k++}}getCurrFollowKey(){if(1===this.RULE_STACK.length)return EOF_FOLLOW_KEY;const currRuleShortName=this.getLastExplicitRuleShortName(),currRuleIdx=this.getLastExplicitRuleOccurrenceIndex(),prevRuleShortName=this.getPreviousExplicitRuleShortName();return{ruleName:this.shortRuleNameToFullName(currRuleShortName),idxInCallingRule:currRuleIdx,inRule:this.shortRuleNameToFullName(prevRuleShortName)}}buildFullFollowKeyStack(){const explicitRuleStack=this.RULE_STACK,explicitOccurrenceStack=this.RULE_OCCURRENCE_STACK;return(0,lodash_es_map.A)(explicitRuleStack,(ruleName,idx)=>0===idx?EOF_FOLLOW_KEY:{ruleName:this.shortRuleNameToFullName(ruleName),idxInCallingRule:explicitOccurrenceStack[idx],inRule:this.shortRuleNameToFullName(explicitRuleStack[idx-1])})}flattenFollowSet(){const followStack=(0,lodash_es_map.A)(this.buildFullFollowKeyStack(),currKey=>this.getFollowSetFromFollowKey(currKey));return(0,lodash_es_flatten.A)(followStack)}getFollowSetFromFollowKey(followKey){if(followKey===EOF_FOLLOW_KEY)return[EOF];const followName=followKey.ruleName+followKey.idxInCallingRule+"_~IN~_"+followKey.inRule;return this.resyncFollows[followName]}addToResyncTokens(token,resyncTokens){return this.tokenMatcher(token,EOF)||resyncTokens.push(token),resyncTokens}reSyncTo(tokType){const resyncedTokens=[];let nextTok=this.LA(1);for(;!1===this.tokenMatcher(nextTok,tokType);)nextTok=this.SKIP_TOKEN(),this.addToResyncTokens(nextTok,resyncedTokens);return lodash_es_dropRight(resyncedTokens)}attemptInRepetitionRecovery(prodFunc,args,lookaheadFunc,dslMethodIdx,prodOccurrence,nextToksWalker,notStuck){}getCurrentGrammarPath(tokType,tokIdxInRule){return{ruleStack:this.getHumanReadableRuleStack(),occurrenceStack:(0,clone.A)(this.RULE_OCCURRENCE_STACK),lastTok:tokType,lastTokOccurrence:tokIdxInRule}}getHumanReadableRuleStack(){return(0,lodash_es_map.A)(this.RULE_STACK,currShortName=>this.shortRuleNameToFullName(currShortName))}},class LooksAhead{initLooksAhead(config){this.dynamicTokensEnabled=(0,has.A)(config,"dynamicTokensEnabled")?config.dynamicTokensEnabled:DEFAULT_PARSER_CONFIG.dynamicTokensEnabled,this.maxLookahead=(0,has.A)(config,"maxLookahead")?config.maxLookahead:DEFAULT_PARSER_CONFIG.maxLookahead,this.lookaheadStrategy=(0,has.A)(config,"lookaheadStrategy")?config.lookaheadStrategy:new LLkLookaheadStrategy({maxLookahead:this.maxLookahead}),this.lookAheadFuncsCache=new Map}preComputeLookaheadFunctions(rules){(0,forEach.A)(rules,currRule=>{this.TRACE_INIT(`${currRule.name} Rule Lookahead`,()=>{const{alternation,repetition,option,repetitionMandatory,repetitionMandatoryWithSeparator,repetitionWithSeparator}=function collectMethods(rule){collectorVisitor.reset(),rule.accept(collectorVisitor);const dslMethods=collectorVisitor.dslMethods;return collectorVisitor.reset(),dslMethods}(currRule);(0,forEach.A)(alternation,currProd=>{const prodIdx=0===currProd.idx?"":currProd.idx;this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`,()=>{const laFunc=this.lookaheadStrategy.buildLookaheadForAlternation({prodOccurrence:currProd.idx,rule:currRule,maxLookahead:currProd.maxLookahead||this.maxLookahead,hasPredicates:currProd.hasPredicates,dynamicTokensEnabled:this.dynamicTokensEnabled}),key=getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name],256,currProd.idx);this.setLaFuncCache(key,laFunc)})}),(0,forEach.A)(repetition,currProd=>{this.computeLookaheadFunc(currRule,currProd.idx,768,"Repetition",currProd.maxLookahead,getProductionDslName(currProd))}),(0,forEach.A)(option,currProd=>{this.computeLookaheadFunc(currRule,currProd.idx,512,"Option",currProd.maxLookahead,getProductionDslName(currProd))}),(0,forEach.A)(repetitionMandatory,currProd=>{this.computeLookaheadFunc(currRule,currProd.idx,1024,"RepetitionMandatory",currProd.maxLookahead,getProductionDslName(currProd))}),(0,forEach.A)(repetitionMandatoryWithSeparator,currProd=>{this.computeLookaheadFunc(currRule,currProd.idx,1536,"RepetitionMandatoryWithSeparator",currProd.maxLookahead,getProductionDslName(currProd))}),(0,forEach.A)(repetitionWithSeparator,currProd=>{this.computeLookaheadFunc(currRule,currProd.idx,1280,"RepetitionWithSeparator",currProd.maxLookahead,getProductionDslName(currProd))})})})}computeLookaheadFunc(rule,prodOccurrence,prodKey,prodType,prodMaxLookahead,dslMethodName){this.TRACE_INIT(`${dslMethodName}${0===prodOccurrence?"":prodOccurrence}`,()=>{const laFunc=this.lookaheadStrategy.buildLookaheadForOptional({prodOccurrence,rule,maxLookahead:prodMaxLookahead||this.maxLookahead,dynamicTokensEnabled:this.dynamicTokensEnabled,prodType}),key=getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name],prodKey,prodOccurrence);this.setLaFuncCache(key,laFunc)})}getKeyForAutomaticLookahead(dslMethodIdx,occurrence){return getKeyForAutomaticLookahead(this.getLastExplicitRuleShortName(),dslMethodIdx,occurrence)}getLaFuncFromCache(key){return this.lookAheadFuncsCache.get(key)}setLaFuncCache(key,value){this.lookAheadFuncsCache.set(key,value)}},class TreeBuilder{initTreeBuilder(config){if(this.CST_STACK=[],this.outputCst=config.outputCst,this.nodeLocationTracking=(0,has.A)(config,"nodeLocationTracking")?config.nodeLocationTracking:DEFAULT_PARSER_CONFIG.nodeLocationTracking,this.outputCst)if(/full/i.test(this.nodeLocationTracking))this.recoveryEnabled?(this.setNodeLocationFromToken=setNodeLocationFull,this.setNodeLocationFromNode=setNodeLocationFull,this.cstPostRule=noop.A,this.setInitialNodeLocation=this.setInitialNodeLocationFullRecovery):(this.setNodeLocationFromToken=noop.A,this.setNodeLocationFromNode=noop.A,this.cstPostRule=this.cstPostRuleFull,this.setInitialNodeLocation=this.setInitialNodeLocationFullRegular);else if(/onlyOffset/i.test(this.nodeLocationTracking))this.recoveryEnabled?(this.setNodeLocationFromToken=setNodeLocationOnlyOffset,this.setNodeLocationFromNode=setNodeLocationOnlyOffset,this.cstPostRule=noop.A,this.setInitialNodeLocation=this.setInitialNodeLocationOnlyOffsetRecovery):(this.setNodeLocationFromToken=noop.A,this.setNodeLocationFromNode=noop.A,this.cstPostRule=this.cstPostRuleOnlyOffset,this.setInitialNodeLocation=this.setInitialNodeLocationOnlyOffsetRegular);else{if(!/none/i.test(this.nodeLocationTracking))throw Error(`Invalid <nodeLocationTracking> config option: "${config.nodeLocationTracking}"`);this.setNodeLocationFromToken=noop.A,this.setNodeLocationFromNode=noop.A,this.cstPostRule=noop.A,this.setInitialNodeLocation=noop.A}else this.cstInvocationStateUpdate=noop.A,this.cstFinallyStateUpdate=noop.A,this.cstPostTerminal=noop.A,this.cstPostNonTerminal=noop.A,this.cstPostRule=noop.A}setInitialNodeLocationOnlyOffsetRecovery(cstNode){cstNode.location={startOffset:NaN,endOffset:NaN}}setInitialNodeLocationOnlyOffsetRegular(cstNode){cstNode.location={startOffset:this.LA(1).startOffset,endOffset:NaN}}setInitialNodeLocationFullRecovery(cstNode){cstNode.location={startOffset:NaN,startLine:NaN,startColumn:NaN,endOffset:NaN,endLine:NaN,endColumn:NaN}}setInitialNodeLocationFullRegular(cstNode){const nextToken=this.LA(1);cstNode.location={startOffset:nextToken.startOffset,startLine:nextToken.startLine,startColumn:nextToken.startColumn,endOffset:NaN,endLine:NaN,endColumn:NaN}}cstInvocationStateUpdate(fullRuleName){const cstNode={name:fullRuleName,children:Object.create(null)};this.setInitialNodeLocation(cstNode),this.CST_STACK.push(cstNode)}cstFinallyStateUpdate(){this.CST_STACK.pop()}cstPostRuleFull(ruleCstNode){const prevToken=this.LA(0),loc=ruleCstNode.location;loc.startOffset<=prevToken.startOffset==!0?(loc.endOffset=prevToken.endOffset,loc.endLine=prevToken.endLine,loc.endColumn=prevToken.endColumn):(loc.startOffset=NaN,loc.startLine=NaN,loc.startColumn=NaN)}cstPostRuleOnlyOffset(ruleCstNode){const prevToken=this.LA(0),loc=ruleCstNode.location;loc.startOffset<=prevToken.startOffset==!0?loc.endOffset=prevToken.endOffset:loc.startOffset=NaN}cstPostTerminal(key,consumedToken){const rootCst=this.CST_STACK[this.CST_STACK.length-1];!function addTerminalToCst(node,token,tokenTypeName){void 0===node.children[tokenTypeName]?node.children[tokenTypeName]=[token]:node.children[tokenTypeName].push(token)}(rootCst,consumedToken,key),this.setNodeLocationFromToken(rootCst.location,consumedToken)}cstPostNonTerminal(ruleCstResult,ruleName){const preCstNode=this.CST_STACK[this.CST_STACK.length-1];!function addNoneTerminalToCst(node,ruleName,ruleResult){void 0===node.children[ruleName]?node.children[ruleName]=[ruleResult]:node.children[ruleName].push(ruleResult)}(preCstNode,ruleName,ruleCstResult),this.setNodeLocationFromNode(preCstNode.location,ruleCstResult.location)}getBaseCstVisitorConstructor(){if((0,isUndefined.A)(this.baseCstVisitorConstructor)){const newBaseCstVisitorConstructor=createBaseSemanticVisitorConstructor(this.className,(0,keys.A)(this.gastProductionsCache));return this.baseCstVisitorConstructor=newBaseCstVisitorConstructor,newBaseCstVisitorConstructor}return this.baseCstVisitorConstructor}getBaseCstVisitorConstructorWithDefaults(){if((0,isUndefined.A)(this.baseCstVisitorWithDefaultsConstructor)){const newConstructor=function createBaseVisitorConstructorWithDefaults(grammarName,ruleNames,baseConstructor){const derivedConstructor=function(){};defineNameProp(derivedConstructor,grammarName+"BaseSemanticsWithDefaults");const withDefaultsProto=Object.create(baseConstructor.prototype);return(0,forEach.A)(ruleNames,ruleName=>{withDefaultsProto[ruleName]=defaultVisit}),(derivedConstructor.prototype=withDefaultsProto).constructor=derivedConstructor,derivedConstructor}(this.className,(0,keys.A)(this.gastProductionsCache),this.getBaseCstVisitorConstructor());return this.baseCstVisitorWithDefaultsConstructor=newConstructor,newConstructor}return this.baseCstVisitorWithDefaultsConstructor}getLastExplicitRuleShortName(){const ruleStack=this.RULE_STACK;return ruleStack[ruleStack.length-1]}getPreviousExplicitRuleShortName(){const ruleStack=this.RULE_STACK;return ruleStack[ruleStack.length-2]}getLastExplicitRuleOccurrenceIndex(){const occurrenceStack=this.RULE_OCCURRENCE_STACK;return occurrenceStack[occurrenceStack.length-1]}},class LexerAdapter{initLexerAdapter(){this.tokVector=[],this.tokVectorLength=0,this.currIdx=-1}set input(newInput){if(!0!==this.selfAnalysisDone)throw Error("Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.");this.reset(),this.tokVector=newInput,this.tokVectorLength=newInput.length}get input(){return this.tokVector}SKIP_TOKEN(){return this.currIdx<=this.tokVector.length-2?(this.consumeToken(),this.LA(1)):END_OF_FILE}LA(howMuch){const soughtIdx=this.currIdx+howMuch;return soughtIdx<0||this.tokVectorLength<=soughtIdx?END_OF_FILE:this.tokVector[soughtIdx]}consumeToken(){this.currIdx++}exportLexerState(){return this.currIdx}importLexerState(newState){this.currIdx=newState}resetLexerState(){this.currIdx=-1}moveToTerminatedState(){this.currIdx=this.tokVector.length-1}getLexerPosition(){return this.exportLexerState()}},class RecognizerEngine{initRecognizerEngine(tokenVocabulary,config){if(this.className=this.constructor.name,this.shortRuleNameToFull={},this.fullRuleNameToShort={},this.ruleShortNameIdx=256,this.tokenMatcher=tokenStructuredMatcherNoCategories,this.subruleIdx=0,this.definedRulesNames=[],this.tokensMap={},this.isBackTrackingStack=[],this.RULE_STACK=[],this.RULE_OCCURRENCE_STACK=[],this.gastProductionsCache={},(0,has.A)(config,"serializedGrammar"))throw Error("The Parser's configuration can no longer contain a <serializedGrammar> property.\n\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\n\tFor Further details.");if((0,isArray.A)(tokenVocabulary)){if((0,isEmpty.A)(tokenVocabulary))throw Error("A Token Vocabulary cannot be empty.\n\tNote that the first argument for the parser constructor\n\tis no longer a Token vector (since v4.0).");if("number"==typeof tokenVocabulary[0].startOffset)throw Error("The Parser constructor no longer accepts a token vector as the first argument.\n\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\n\tFor Further details.")}if((0,isArray.A)(tokenVocabulary))this.tokensMap=(0,reduce.A)(tokenVocabulary,(acc,tokType)=>(acc[tokType.name]=tokType,acc),{});else if((0,has.A)(tokenVocabulary,"modes")&&lodash_es_every((0,lodash_es_flatten.A)((0,lodash_es_values.A)(tokenVocabulary.modes)),isTokenType)){const allTokenTypes=(0,lodash_es_flatten.A)((0,lodash_es_values.A)(tokenVocabulary.modes)),uniqueTokens=lodash_es_uniq(allTokenTypes);this.tokensMap=(0,reduce.A)(uniqueTokens,(acc,tokType)=>(acc[tokType.name]=tokType,acc),{})}else{if(!(0,isObject.A)(tokenVocabulary))throw new Error("<tokensDictionary> argument must be An Array of Token constructors, A dictionary of Token constructors or an IMultiModeLexerDefinition");this.tokensMap=(0,clone.A)(tokenVocabulary)}this.tokensMap.EOF=EOF;const allTokenTypes=(0,has.A)(tokenVocabulary,"modes")?(0,lodash_es_flatten.A)((0,lodash_es_values.A)(tokenVocabulary.modes)):(0,lodash_es_values.A)(tokenVocabulary),noTokenCategoriesUsed=lodash_es_every(allTokenTypes,tokenConstructor=>(0,isEmpty.A)(tokenConstructor.categoryMatches));this.tokenMatcher=noTokenCategoriesUsed?tokenStructuredMatcherNoCategories:tokenStructuredMatcher,augmentTokenTypes((0,lodash_es_values.A)(this.tokensMap))}defineRule(ruleName,impl,config){if(this.selfAnalysisDone)throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\nMake sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);const resyncEnabled=(0,has.A)(config,"resyncEnabled")?config.resyncEnabled:DEFAULT_RULE_CONFIG.resyncEnabled,recoveryValueFunc=(0,has.A)(config,"recoveryValueFunc")?config.recoveryValueFunc:DEFAULT_RULE_CONFIG.recoveryValueFunc,shortName=this.ruleShortNameIdx<<12;let invokeRuleWithTry;this.ruleShortNameIdx++,this.shortRuleNameToFull[shortName]=ruleName,this.fullRuleNameToShort[ruleName]=shortName,invokeRuleWithTry=!0===this.outputCst?function invokeRuleWithTry(...args){try{this.ruleInvocationStateUpdate(shortName,ruleName,this.subruleIdx),impl.apply(this,args);const cst=this.CST_STACK[this.CST_STACK.length-1];return this.cstPostRule(cst),cst}catch(e){return this.invokeRuleCatch(e,resyncEnabled,recoveryValueFunc)}finally{this.ruleFinallyStateUpdate()}}:function invokeRuleWithTryCst(...args){try{return this.ruleInvocationStateUpdate(shortName,ruleName,this.subruleIdx),impl.apply(this,args)}catch(e){return this.invokeRuleCatch(e,resyncEnabled,recoveryValueFunc)}finally{this.ruleFinallyStateUpdate()}};return Object.assign(invokeRuleWithTry,{ruleName,originalGrammarAction:impl})}invokeRuleCatch(e,resyncEnabledConfig,recoveryValueFunc){const isFirstInvokedRule=1===this.RULE_STACK.length,reSyncEnabled=resyncEnabledConfig&&!this.isBackTracking()&&this.recoveryEnabled;if(isRecognitionException(e)){const recogError=e;if(reSyncEnabled){const reSyncTokType=this.findReSyncTokenType();if(this.isInCurrentRuleReSyncSet(reSyncTokType)){if(recogError.resyncedTokens=this.reSyncTo(reSyncTokType),this.outputCst){const partialCstResult=this.CST_STACK[this.CST_STACK.length-1];return partialCstResult.recoveredNode=!0,partialCstResult}return recoveryValueFunc(e)}if(this.outputCst){const partialCstResult=this.CST_STACK[this.CST_STACK.length-1];partialCstResult.recoveredNode=!0,recogError.partialCstResult=partialCstResult}throw recogError}if(isFirstInvokedRule)return this.moveToTerminatedState(),recoveryValueFunc(e);throw recogError}throw e}optionInternal(actionORMethodDef,occurrence){const key=this.getKeyForAutomaticLookahead(512,occurrence);return this.optionInternalLogic(actionORMethodDef,occurrence,key)}optionInternalLogic(actionORMethodDef,occurrence,key){let action,lookAheadFunc=this.getLaFuncFromCache(key);if("function"!=typeof actionORMethodDef){action=actionORMethodDef.DEF;const predicate=actionORMethodDef.GATE;if(void 0!==predicate){const orgLookaheadFunction=lookAheadFunc;lookAheadFunc=()=>predicate.call(this)&&orgLookaheadFunction.call(this)}}else action=actionORMethodDef;if(!0===lookAheadFunc.call(this))return action.call(this)}atLeastOneInternal(prodOccurrence,actionORMethodDef){const laKey=this.getKeyForAutomaticLookahead(1024,prodOccurrence);return this.atLeastOneInternalLogic(prodOccurrence,actionORMethodDef,laKey)}atLeastOneInternalLogic(prodOccurrence,actionORMethodDef,key){let action,lookAheadFunc=this.getLaFuncFromCache(key);if("function"!=typeof actionORMethodDef){action=actionORMethodDef.DEF;const predicate=actionORMethodDef.GATE;if(void 0!==predicate){const orgLookaheadFunction=lookAheadFunc;lookAheadFunc=()=>predicate.call(this)&&orgLookaheadFunction.call(this)}}else action=actionORMethodDef;if(!0!==lookAheadFunc.call(this))throw this.raiseEarlyExitException(prodOccurrence,PROD_TYPE.REPETITION_MANDATORY,actionORMethodDef.ERR_MSG);{let notStuck=this.doSingleRepetition(action);for(;!0===lookAheadFunc.call(this)&&!0===notStuck;)notStuck=this.doSingleRepetition(action)}this.attemptInRepetitionRecovery(this.atLeastOneInternal,[prodOccurrence,actionORMethodDef],lookAheadFunc,1024,prodOccurrence,NextTerminalAfterAtLeastOneWalker)}atLeastOneSepFirstInternal(prodOccurrence,options){const laKey=this.getKeyForAutomaticLookahead(1536,prodOccurrence);this.atLeastOneSepFirstInternalLogic(prodOccurrence,options,laKey)}atLeastOneSepFirstInternalLogic(prodOccurrence,options,key){const action=options.DEF,separator=options.SEP;if(!0!==this.getLaFuncFromCache(key).call(this))throw this.raiseEarlyExitException(prodOccurrence,PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,options.ERR_MSG);{action.call(this);const separatorLookAheadFunc=()=>this.tokenMatcher(this.LA(1),separator);for(;!0===this.tokenMatcher(this.LA(1),separator);)this.CONSUME(separator),action.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[prodOccurrence,separator,separatorLookAheadFunc,action,NextTerminalAfterAtLeastOneSepWalker],separatorLookAheadFunc,1536,prodOccurrence,NextTerminalAfterAtLeastOneSepWalker)}}manyInternal(prodOccurrence,actionORMethodDef){const laKey=this.getKeyForAutomaticLookahead(768,prodOccurrence);return this.manyInternalLogic(prodOccurrence,actionORMethodDef,laKey)}manyInternalLogic(prodOccurrence,actionORMethodDef,key){let action,lookaheadFunction=this.getLaFuncFromCache(key);if("function"!=typeof actionORMethodDef){action=actionORMethodDef.DEF;const predicate=actionORMethodDef.GATE;if(void 0!==predicate){const orgLookaheadFunction=lookaheadFunction;lookaheadFunction=()=>predicate.call(this)&&orgLookaheadFunction.call(this)}}else action=actionORMethodDef;let notStuck=!0;for(;!0===lookaheadFunction.call(this)&&!0===notStuck;)notStuck=this.doSingleRepetition(action);this.attemptInRepetitionRecovery(this.manyInternal,[prodOccurrence,actionORMethodDef],lookaheadFunction,768,prodOccurrence,NextTerminalAfterManyWalker,notStuck)}manySepFirstInternal(prodOccurrence,options){const laKey=this.getKeyForAutomaticLookahead(1280,prodOccurrence);this.manySepFirstInternalLogic(prodOccurrence,options,laKey)}manySepFirstInternalLogic(prodOccurrence,options,key){const action=options.DEF,separator=options.SEP;if(!0===this.getLaFuncFromCache(key).call(this)){action.call(this);const separatorLookAheadFunc=()=>this.tokenMatcher(this.LA(1),separator);for(;!0===this.tokenMatcher(this.LA(1),separator);)this.CONSUME(separator),action.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[prodOccurrence,separator,separatorLookAheadFunc,action,NextTerminalAfterManySepWalker],separatorLookAheadFunc,1280,prodOccurrence,NextTerminalAfterManySepWalker)}}repetitionSepSecondInternal(prodOccurrence,separator,separatorLookAheadFunc,action,nextTerminalAfterWalker){for(;separatorLookAheadFunc();)this.CONSUME(separator),action.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[prodOccurrence,separator,separatorLookAheadFunc,action,nextTerminalAfterWalker],separatorLookAheadFunc,1536,prodOccurrence,nextTerminalAfterWalker)}doSingleRepetition(action){const beforeIteration=this.getLexerPosition();action.call(this);return this.getLexerPosition()>beforeIteration}orInternal(altsOrOpts,occurrence){const laKey=this.getKeyForAutomaticLookahead(256,occurrence),alts=(0,isArray.A)(altsOrOpts)?altsOrOpts:altsOrOpts.DEF,altIdxToTake=this.getLaFuncFromCache(laKey).call(this,alts);if(void 0!==altIdxToTake){return alts[altIdxToTake].ALT.call(this)}this.raiseNoAltException(occurrence,altsOrOpts.ERR_MSG)}ruleFinallyStateUpdate(){if(this.RULE_STACK.pop(),this.RULE_OCCURRENCE_STACK.pop(),this.cstFinallyStateUpdate(),0===this.RULE_STACK.length&&!1===this.isAtEndOfInput()){const firstRedundantTok=this.LA(1),errMsg=this.errorMessageProvider.buildNotAllInputParsedMessage({firstRedundant:firstRedundantTok,ruleName:this.getCurrRuleFullName()});this.SAVE_ERROR(new NotAllInputParsedException(errMsg,firstRedundantTok))}}subruleInternal(ruleToCall,idx,options){let ruleResult;try{const args=void 0!==options?options.ARGS:void 0;return this.subruleIdx=idx,ruleResult=ruleToCall.apply(this,args),this.cstPostNonTerminal(ruleResult,void 0!==options&&void 0!==options.LABEL?options.LABEL:ruleToCall.ruleName),ruleResult}catch(e){throw this.subruleInternalError(e,options,ruleToCall.ruleName)}}subruleInternalError(e,options,ruleName){throw isRecognitionException(e)&&void 0!==e.partialCstResult&&(this.cstPostNonTerminal(e.partialCstResult,void 0!==options&&void 0!==options.LABEL?options.LABEL:ruleName),delete e.partialCstResult),e}consumeInternal(tokType,idx,options){let consumedToken;try{const nextToken=this.LA(1);!0===this.tokenMatcher(nextToken,tokType)?(this.consumeToken(),consumedToken=nextToken):this.consumeInternalError(tokType,nextToken,options)}catch(eFromConsumption){consumedToken=this.consumeInternalRecovery(tokType,idx,eFromConsumption)}return this.cstPostTerminal(void 0!==options&&void 0!==options.LABEL?options.LABEL:tokType.name,consumedToken),consumedToken}consumeInternalError(tokType,nextToken,options){let msg;const previousToken=this.LA(0);throw msg=void 0!==options&&options.ERR_MSG?options.ERR_MSG:this.errorMessageProvider.buildMismatchTokenMessage({expected:tokType,actual:nextToken,previous:previousToken,ruleName:this.getCurrRuleFullName()}),this.SAVE_ERROR(new MismatchedTokenException(msg,nextToken,previousToken))}consumeInternalRecovery(tokType,idx,eFromConsumption){if(!this.recoveryEnabled||"MismatchedTokenException"!==eFromConsumption.name||this.isBackTracking())throw eFromConsumption;{const follows=this.getFollowsForInRuleRecovery(tokType,idx);try{return this.tryInRuleRecovery(tokType,follows)}catch(eFromInRuleRecovery){throw"InRuleRecoveryException"===eFromInRuleRecovery.name?eFromConsumption:eFromInRuleRecovery}}}saveRecogState(){const savedErrors=this.errors,savedRuleStack=(0,clone.A)(this.RULE_STACK);return{errors:savedErrors,lexerState:this.exportLexerState(),RULE_STACK:savedRuleStack,CST_STACK:this.CST_STACK}}reloadRecogState(newState){this.errors=newState.errors,this.importLexerState(newState.lexerState),this.RULE_STACK=newState.RULE_STACK}ruleInvocationStateUpdate(shortName,fullName,idxInCallingRule){this.RULE_OCCURRENCE_STACK.push(idxInCallingRule),this.RULE_STACK.push(shortName),this.cstInvocationStateUpdate(fullName)}isBackTracking(){return 0!==this.isBackTrackingStack.length}getCurrRuleFullName(){const shortName=this.getLastExplicitRuleShortName();return this.shortRuleNameToFull[shortName]}shortRuleNameToFullName(shortName){return this.shortRuleNameToFull[shortName]}isAtEndOfInput(){return this.tokenMatcher(this.LA(1),EOF)}reset(){this.resetLexerState(),this.subruleIdx=0,this.isBackTrackingStack=[],this.errors=[],this.RULE_STACK=[],this.CST_STACK=[],this.RULE_OCCURRENCE_STACK=[]}},class RecognizerApi{ACTION(impl){return impl.call(this)}consume(idx,tokType,options){return this.consumeInternal(tokType,idx,options)}subrule(idx,ruleToCall,options){return this.subruleInternal(ruleToCall,idx,options)}option(idx,actionORMethodDef){return this.optionInternal(actionORMethodDef,idx)}or(idx,altsOrOpts){return this.orInternal(altsOrOpts,idx)}many(idx,actionORMethodDef){return this.manyInternal(idx,actionORMethodDef)}atLeastOne(idx,actionORMethodDef){return this.atLeastOneInternal(idx,actionORMethodDef)}CONSUME(tokType,options){return this.consumeInternal(tokType,0,options)}CONSUME1(tokType,options){return this.consumeInternal(tokType,1,options)}CONSUME2(tokType,options){return this.consumeInternal(tokType,2,options)}CONSUME3(tokType,options){return this.consumeInternal(tokType,3,options)}CONSUME4(tokType,options){return this.consumeInternal(tokType,4,options)}CONSUME5(tokType,options){return this.consumeInternal(tokType,5,options)}CONSUME6(tokType,options){return this.consumeInternal(tokType,6,options)}CONSUME7(tokType,options){return this.consumeInternal(tokType,7,options)}CONSUME8(tokType,options){return this.consumeInternal(tokType,8,options)}CONSUME9(tokType,options){return this.consumeInternal(tokType,9,options)}SUBRULE(ruleToCall,options){return this.subruleInternal(ruleToCall,0,options)}SUBRULE1(ruleToCall,options){return this.subruleInternal(ruleToCall,1,options)}SUBRULE2(ruleToCall,options){return this.subruleInternal(ruleToCall,2,options)}SUBRULE3(ruleToCall,options){return this.subruleInternal(ruleToCall,3,options)}SUBRULE4(ruleToCall,options){return this.subruleInternal(ruleToCall,4,options)}SUBRULE5(ruleToCall,options){return this.subruleInternal(ruleToCall,5,options)}SUBRULE6(ruleToCall,options){return this.subruleInternal(ruleToCall,6,options)}SUBRULE7(ruleToCall,options){return this.subruleInternal(ruleToCall,7,options)}SUBRULE8(ruleToCall,options){return this.subruleInternal(ruleToCall,8,options)}SUBRULE9(ruleToCall,options){return this.subruleInternal(ruleToCall,9,options)}OPTION(actionORMethodDef){return this.optionInternal(actionORMethodDef,0)}OPTION1(actionORMethodDef){return this.optionInternal(actionORMethodDef,1)}OPTION2(actionORMethodDef){return this.optionInternal(actionORMethodDef,2)}OPTION3(actionORMethodDef){return this.optionInternal(actionORMethodDef,3)}OPTION4(actionORMethodDef){return this.optionInternal(actionORMethodDef,4)}OPTION5(actionORMethodDef){return this.optionInternal(actionORMethodDef,5)}OPTION6(actionORMethodDef){return this.optionInternal(actionORMethodDef,6)}OPTION7(actionORMethodDef){return this.optionInternal(actionORMethodDef,7)}OPTION8(actionORMethodDef){return this.optionInternal(actionORMethodDef,8)}OPTION9(actionORMethodDef){return this.optionInternal(actionORMethodDef,9)}OR(altsOrOpts){return this.orInternal(altsOrOpts,0)}OR1(altsOrOpts){return this.orInternal(altsOrOpts,1)}OR2(altsOrOpts){return this.orInternal(altsOrOpts,2)}OR3(altsOrOpts){return this.orInternal(altsOrOpts,3)}OR4(altsOrOpts){return this.orInternal(altsOrOpts,4)}OR5(altsOrOpts){return this.orInternal(altsOrOpts,5)}OR6(altsOrOpts){return this.orInternal(altsOrOpts,6)}OR7(altsOrOpts){return this.orInternal(altsOrOpts,7)}OR8(altsOrOpts){return this.orInternal(altsOrOpts,8)}OR9(altsOrOpts){return this.orInternal(altsOrOpts,9)}MANY(actionORMethodDef){this.manyInternal(0,actionORMethodDef)}MANY1(actionORMethodDef){this.manyInternal(1,actionORMethodDef)}MANY2(actionORMethodDef){this.manyInternal(2,actionORMethodDef)}MANY3(actionORMethodDef){this.manyInternal(3,actionORMethodDef)}MANY4(actionORMethodDef){this.manyInternal(4,actionORMethodDef)}MANY5(actionORMethodDef){this.manyInternal(5,actionORMethodDef)}MANY6(actionORMethodDef){this.manyInternal(6,actionORMethodDef)}MANY7(actionORMethodDef){this.manyInternal(7,actionORMethodDef)}MANY8(actionORMethodDef){this.manyInternal(8,actionORMethodDef)}MANY9(actionORMethodDef){this.manyInternal(9,actionORMethodDef)}MANY_SEP(options){this.manySepFirstInternal(0,options)}MANY_SEP1(options){this.manySepFirstInternal(1,options)}MANY_SEP2(options){this.manySepFirstInternal(2,options)}MANY_SEP3(options){this.manySepFirstInternal(3,options)}MANY_SEP4(options){this.manySepFirstInternal(4,options)}MANY_SEP5(options){this.manySepFirstInternal(5,options)}MANY_SEP6(options){this.manySepFirstInternal(6,options)}MANY_SEP7(options){this.manySepFirstInternal(7,options)}MANY_SEP8(options){this.manySepFirstInternal(8,options)}MANY_SEP9(options){this.manySepFirstInternal(9,options)}AT_LEAST_ONE(actionORMethodDef){this.atLeastOneInternal(0,actionORMethodDef)}AT_LEAST_ONE1(actionORMethodDef){return this.atLeastOneInternal(1,actionORMethodDef)}AT_LEAST_ONE2(actionORMethodDef){this.atLeastOneInternal(2,actionORMethodDef)}AT_LEAST_ONE3(actionORMethodDef){this.atLeastOneInternal(3,actionORMethodDef)}AT_LEAST_ONE4(actionORMethodDef){this.atLeastOneInternal(4,actionORMethodDef)}AT_LEAST_ONE5(actionORMethodDef){this.atLeastOneInternal(5,actionORMethodDef)}AT_LEAST_ONE6(actionORMethodDef){this.atLeastOneInternal(6,actionORMethodDef)}AT_LEAST_ONE7(actionORMethodDef){this.atLeastOneInternal(7,actionORMethodDef)}AT_LEAST_ONE8(actionORMethodDef){this.atLeastOneInternal(8,actionORMethodDef)}AT_LEAST_ONE9(actionORMethodDef){this.atLeastOneInternal(9,actionORMethodDef)}AT_LEAST_ONE_SEP(options){this.atLeastOneSepFirstInternal(0,options)}AT_LEAST_ONE_SEP1(options){this.atLeastOneSepFirstInternal(1,options)}AT_LEAST_ONE_SEP2(options){this.atLeastOneSepFirstInternal(2,options)}AT_LEAST_ONE_SEP3(options){this.atLeastOneSepFirstInternal(3,options)}AT_LEAST_ONE_SEP4(options){this.atLeastOneSepFirstInternal(4,options)}AT_LEAST_ONE_SEP5(options){this.atLeastOneSepFirstInternal(5,options)}AT_LEAST_ONE_SEP6(options){this.atLeastOneSepFirstInternal(6,options)}AT_LEAST_ONE_SEP7(options){this.atLeastOneSepFirstInternal(7,options)}AT_LEAST_ONE_SEP8(options){this.atLeastOneSepFirstInternal(8,options)}AT_LEAST_ONE_SEP9(options){this.atLeastOneSepFirstInternal(9,options)}RULE(name,implementation,config=DEFAULT_RULE_CONFIG){if(lodash_es_includes(this.definedRulesNames,name)){const error={message:defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({topLevelRule:name,grammarName:this.className}),type:ParserDefinitionErrorType.DUPLICATE_RULE_NAME,ruleName:name};this.definitionErrors.push(error)}this.definedRulesNames.push(name);const ruleImplementation=this.defineRule(name,implementation,config);return this[name]=ruleImplementation,ruleImplementation}OVERRIDE_RULE(name,impl,config=DEFAULT_RULE_CONFIG){const ruleErrors=function validateRuleIsOverridden(ruleName,definedRulesNames,className){const errors=[];let errMsg;return lodash_es_includes(definedRulesNames,ruleName)||(errMsg=`Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-as it is not defined in any of the super grammars `,errors.push({message:errMsg,type:ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,ruleName})),errors}(name,this.definedRulesNames,this.className);this.definitionErrors=this.definitionErrors.concat(ruleErrors);const ruleImplementation=this.defineRule(name,impl,config);return this[name]=ruleImplementation,ruleImplementation}BACKTRACK(grammarRule,args){return function(){this.isBackTrackingStack.push(1);const orgState=this.saveRecogState();try{return grammarRule.apply(this,args),!0}catch(e){if(isRecognitionException(e))return!1;throw e}finally{this.reloadRecogState(orgState),this.isBackTrackingStack.pop()}}}getGAstProductions(){return this.gastProductionsCache}getSerializedGastProductions(){return function serializeGrammar(topRules){return(0,lodash_es_map.A)(topRules,serializeProduction)}((0,lodash_es_values.A)(this.gastProductionsCache))}},class ErrorHandler{initErrorHandler(config){this._errors=[],this.errorMessageProvider=(0,has.A)(config,"errorMessageProvider")?config.errorMessageProvider:DEFAULT_PARSER_CONFIG.errorMessageProvider}SAVE_ERROR(error){if(isRecognitionException(error))return error.context={ruleStack:this.getHumanReadableRuleStack(),ruleOccurrenceStack:(0,clone.A)(this.RULE_OCCURRENCE_STACK)},this._errors.push(error),error;throw Error("Trying to save an Error which is not a RecognitionException")}get errors(){return(0,clone.A)(this._errors)}set errors(newErrors){this._errors=newErrors}raiseEarlyExitException(occurrence,prodType,userDefinedErrMsg){const ruleName=this.getCurrRuleFullName(),insideProdPaths=getLookaheadPathsForOptionalProd(occurrence,this.getGAstProductions()[ruleName],prodType,this.maxLookahead)[0],actualTokens=[];for(let i=1;i<=this.maxLookahead;i++)actualTokens.push(this.LA(i));const msg=this.errorMessageProvider.buildEarlyExitMessage({expectedIterationPaths:insideProdPaths,actual:actualTokens,previous:this.LA(0),customUserDescription:userDefinedErrMsg,ruleName});throw this.SAVE_ERROR(new EarlyExitException(msg,this.LA(1),this.LA(0)))}raiseNoAltException(occurrence,errMsgTypes){const ruleName=this.getCurrRuleFullName(),lookAheadPathsPerAlternative=getLookaheadPathsForOr(occurrence,this.getGAstProductions()[ruleName],this.maxLookahead),actualTokens=[];for(let i=1;i<=this.maxLookahead;i++)actualTokens.push(this.LA(i));const previousToken=this.LA(0),errMsg=this.errorMessageProvider.buildNoViableAltMessage({expectedPathsPerAlt:lookAheadPathsPerAlternative,actual:actualTokens,previous:previousToken,customUserDescription:errMsgTypes,ruleName:this.getCurrRuleFullName()});throw this.SAVE_ERROR(new NoViableAltException(errMsg,this.LA(1),previousToken))}},class ContentAssist{initContentAssist(){}computeContentAssist(startRuleName,precedingInput){const startRuleGast=this.gastProductionsCache[startRuleName];if((0,isUndefined.A)(startRuleGast))throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);return nextPossibleTokensAfter([startRuleGast],precedingInput,this.tokenMatcher,this.maxLookahead)}getNextPossibleTokenTypes(grammarPath){const topRuleName=lodash_es_head(grammarPath.ruleStack),topProduction=this.getGAstProductions()[topRuleName];return new NextAfterTokenWalker(topProduction,grammarPath).startWalking()}},class GastRecorder{initGastRecorder(config){this.recordingProdStack=[],this.RECORDING_PHASE=!1}enableRecording(){this.RECORDING_PHASE=!0,this.TRACE_INIT("Enable Recording",()=>{for(let i=0;i<10;i++){const idx=i>0?i:"";this[`CONSUME${idx}`]=function(arg1,arg2){return this.consumeInternalRecord(arg1,i,arg2)},this[`SUBRULE${idx}`]=function(arg1,arg2){return this.subruleInternalRecord(arg1,i,arg2)},this[`OPTION${idx}`]=function(arg1){return this.optionInternalRecord(arg1,i)},this[`OR${idx}`]=function(arg1){return this.orInternalRecord(arg1,i)},this[`MANY${idx}`]=function(arg1){this.manyInternalRecord(i,arg1)},this[`MANY_SEP${idx}`]=function(arg1){this.manySepFirstInternalRecord(i,arg1)},this[`AT_LEAST_ONE${idx}`]=function(arg1){this.atLeastOneInternalRecord(i,arg1)},this[`AT_LEAST_ONE_SEP${idx}`]=function(arg1){this.atLeastOneSepFirstInternalRecord(i,arg1)}}this.consume=function(idx,arg1,arg2){return this.consumeInternalRecord(arg1,idx,arg2)},this.subrule=function(idx,arg1,arg2){return this.subruleInternalRecord(arg1,idx,arg2)},this.option=function(idx,arg1){return this.optionInternalRecord(arg1,idx)},this.or=function(idx,arg1){return this.orInternalRecord(arg1,idx)},this.many=function(idx,arg1){this.manyInternalRecord(idx,arg1)},this.atLeastOne=function(idx,arg1){this.atLeastOneInternalRecord(idx,arg1)},this.ACTION=this.ACTION_RECORD,this.BACKTRACK=this.BACKTRACK_RECORD,this.LA=this.LA_RECORD})}disableRecording(){this.RECORDING_PHASE=!1,this.TRACE_INIT("Deleting Recording methods",()=>{const that=this;for(let i=0;i<10;i++){const idx=i>0?i:"";delete that[`CONSUME${idx}`],delete that[`SUBRULE${idx}`],delete that[`OPTION${idx}`],delete that[`OR${idx}`],delete that[`MANY${idx}`],delete that[`MANY_SEP${idx}`],delete that[`AT_LEAST_ONE${idx}`],delete that[`AT_LEAST_ONE_SEP${idx}`]}delete that.consume,delete that.subrule,delete that.option,delete that.or,delete that.many,delete that.atLeastOne,delete that.ACTION,delete that.BACKTRACK,delete that.LA})}ACTION_RECORD(impl){}BACKTRACK_RECORD(grammarRule,args){return()=>!0}LA_RECORD(howMuch){return END_OF_FILE}topLevelRuleRecord(name,def){try{const newTopLevelRule=new Rule({definition:[],name});return newTopLevelRule.name=name,this.recordingProdStack.push(newTopLevelRule),def.call(this),this.recordingProdStack.pop(),newTopLevelRule}catch(originalError){if(!0!==originalError.KNOWN_RECORDER_ERROR)try{originalError.message=originalError.message+'\n\t This error was thrown during the "grammar recording phase" For more info see:\n\thttps://chevrotain.io/docs/guide/internals.html#grammar-recording'}catch(mutabilityError){throw originalError}throw originalError}}optionInternalRecord(actionORMethodDef,occurrence){return recordProd.call(this,Option,actionORMethodDef,occurrence)}atLeastOneInternalRecord(occurrence,actionORMethodDef){recordProd.call(this,RepetitionMandatory,actionORMethodDef,occurrence)}atLeastOneSepFirstInternalRecord(occurrence,options){recordProd.call(this,RepetitionMandatoryWithSeparator,options,occurrence,true)}manyInternalRecord(occurrence,actionORMethodDef){recordProd.call(this,Repetition,actionORMethodDef,occurrence)}manySepFirstInternalRecord(occurrence,options){recordProd.call(this,RepetitionWithSeparator,options,occurrence,true)}orInternalRecord(altsOrOpts,occurrence){return recordOrProd.call(this,altsOrOpts,occurrence)}subruleInternalRecord(ruleToCall,occurrence,options){if(assertMethodIdxIsValid(occurrence),!ruleToCall||!1===(0,has.A)(ruleToCall,"ruleName")){const error=new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>\n inside top level rule: <${this.recordingProdStack[0].name}>`);throw error.KNOWN_RECORDER_ERROR=!0,error}const prevProd=(0,last.A)(this.recordingProdStack),ruleName=ruleToCall.ruleName,newNoneTerminal=new model_NonTerminal({idx:occurrence,nonTerminalName:ruleName,label:null==options?void 0:options.LABEL,referencedRule:void 0});return prevProd.definition.push(newNoneTerminal),this.outputCst?RECORDING_PHASE_CSTNODE:RECORDING_NULL_OBJECT}consumeInternalRecord(tokType,occurrence,options){if(assertMethodIdxIsValid(occurrence),!hasShortKeyProperty(tokType)){const error=new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid expecting a TokenType reference but got: <${JSON.stringify(tokType)}>\n inside top level rule: <${this.recordingProdStack[0].name}>`);throw error.KNOWN_RECORDER_ERROR=!0,error}const prevProd=(0,last.A)(this.recordingProdStack),newNoneTerminal=new Terminal({idx:occurrence,terminalType:tokType,label:null==options?void 0:options.LABEL});return prevProd.definition.push(newNoneTerminal),RECORDING_PHASE_TOKEN}},class PerformanceTracer{initPerformanceTracer(config){if((0,has.A)(config,"traceInitPerf")){const userTraceInitPerf=config.traceInitPerf,traceIsNumber="number"==typeof userTraceInitPerf;this.traceInitMaxIdent=traceIsNumber?userTraceInitPerf:1/0,this.traceInitPerf=traceIsNumber?userTraceInitPerf>0:userTraceInitPerf}else this.traceInitMaxIdent=0,this.traceInitPerf=DEFAULT_PARSER_CONFIG.traceInitPerf;this.traceInitIndent=-1}TRACE_INIT(phaseDesc,phaseImpl){if(!0===this.traceInitPerf){this.traceInitIndent++;const indent=new Array(this.traceInitIndent+1).join("\t");this.traceInitIndent<this.traceInitMaxIdent&&console.log(`${indent}--\x3e <${phaseDesc}>`);const{time,value}=timer(phaseImpl),traceMethod=time>10?console.warn:console.log;return this.traceInitIndent<this.traceInitMaxIdent&&traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`),this.traceInitIndent--,value}return phaseImpl()}}]);class EmbeddedActionsParser extends Parser{constructor(tokenVocabulary,config=DEFAULT_PARSER_CONFIG){const configClone=(0,clone.A)(config);configClone.outputCst=!1,super(tokenVocabulary,configClone)}}},"./node_modules/langium/lib/default-module.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>createDefaultCoreModule,u:()=>createDefaultSharedCoreModule});var cst_utils=__webpack_require__("./node_modules/langium/lib/utils/cst-utils.js"),grammar_utils=__webpack_require__("./node_modules/langium/lib/utils/grammar-utils.js"),regexp_utils=__webpack_require__("./node_modules/langium/lib/utils/regexp-utils.js"),ast=__webpack_require__("./node_modules/langium/lib/languages/generated/ast.js");var api=__webpack_require__("./node_modules/chevrotain/lib/src/api.js"),map=__webpack_require__("./node_modules/lodash-es/map.js"),filter=__webpack_require__("./node_modules/lodash-es/filter.js");function buildATNKey(rule,type,occurrence){return`${rule.name}_${type}_${occurrence}`}class AbstractTransition{constructor(target){this.target=target}isEpsilon(){return!1}}class AtomTransition extends AbstractTransition{constructor(target,tokenType){super(target),this.tokenType=tokenType}}class EpsilonTransition extends AbstractTransition{constructor(target){super(target)}isEpsilon(){return!0}}class RuleTransition extends AbstractTransition{constructor(ruleStart,rule,followState){super(ruleStart),this.rule=rule,this.followState=followState}isEpsilon(){return!0}}function createATN(rules){const atn={decisionMap:{},decisionStates:[],ruleToStartState:new Map,ruleToStopState:new Map,states:[]};!function createRuleStartAndStopATNStates(atn,rules){const ruleLength=rules.length;for(let i=0;i<ruleLength;i++){const rule=rules[i],start=newState(atn,rule,void 0,{type:2}),stop=newState(atn,rule,void 0,{type:7});start.stop=stop,atn.ruleToStartState.set(rule,start),atn.ruleToStopState.set(rule,stop)}}(atn,rules);const ruleLength=rules.length;for(let i=0;i<ruleLength;i++){const rule=rules[i],ruleBlock=block(atn,rule,rule);void 0!==ruleBlock&&buildRuleHandle(atn,rule,ruleBlock)}return atn}function atom(atn,rule,production){return production instanceof api.BK?tokenRef(atn,rule,production.terminalType,production):production instanceof api.wL?function ruleRef(atn,currentRule,nonTerminal){const rule=nonTerminal.referencedRule,start=atn.ruleToStartState.get(rule),left=newState(atn,currentRule,nonTerminal,{type:1}),right=newState(atn,currentRule,nonTerminal,{type:1}),call=new RuleTransition(start,rule,right);return addTransition(left,call),{left,right}}(atn,rule,production):production instanceof api.ak?function alternation(atn,rule,alternation){const start=newState(atn,rule,alternation,{type:1});defineDecisionState(atn,start);const alts=(0,map.A)(alternation.definition,e=>atom(atn,rule,e)),handle=makeAlts(atn,rule,start,alternation,...alts);return handle}(atn,rule,production):production instanceof api.c$?function atn_option(atn,rule,option){const start=newState(atn,rule,option,{type:1});defineDecisionState(atn,start);const handle=makeAlts(atn,rule,start,option,block(atn,rule,option));return function optional(atn,rule,optional,handle){const start=handle.left,end=handle.right;return epsilon(start,end),atn.decisionMap[buildATNKey(rule,"Option",optional.idx)]=start,handle}(atn,rule,option,handle)}(atn,rule,production):production instanceof api.Y2?function repetition(atn,rule,repetition){const starState=newState(atn,rule,repetition,{type:5});defineDecisionState(atn,starState);const handle=makeAlts(atn,rule,starState,repetition,block(atn,rule,repetition));return star(atn,rule,repetition,handle)}(atn,rule,production):production instanceof api.Pp?function repetitionSep(atn,rule,repetition){const starState=newState(atn,rule,repetition,{type:5});defineDecisionState(atn,starState);const handle=makeAlts(atn,rule,starState,repetition,block(atn,rule,repetition)),sep=tokenRef(atn,rule,repetition.separator,repetition);return star(atn,rule,repetition,handle,sep)}(atn,rule,production):production instanceof api.$P?function repetitionMandatory(atn,rule,repetition){const plusState=newState(atn,rule,repetition,{type:4});defineDecisionState(atn,plusState);const handle=makeAlts(atn,rule,plusState,repetition,block(atn,rule,repetition));return plus(atn,rule,repetition,handle)}(atn,rule,production):production instanceof api.Cy?function repetitionMandatorySep(atn,rule,repetition){const plusState=newState(atn,rule,repetition,{type:4});defineDecisionState(atn,plusState);const handle=makeAlts(atn,rule,plusState,repetition,block(atn,rule,repetition)),sep=tokenRef(atn,rule,repetition.separator,repetition);return plus(atn,rule,repetition,handle,sep)}(atn,rule,production):block(atn,rule,production)}function block(atn,rule,block){const handles=(0,filter.A)((0,map.A)(block.definition,e=>atom(atn,rule,e)),e=>void 0!==e);return 1===handles.length?handles[0]:0===handles.length?void 0:function makeBlock(atn,alts){const altsLength=alts.length;for(let i=0;i<altsLength-1;i++){const handle=alts[i];let transition;1===handle.left.transitions.length&&(transition=handle.left.transitions[0]);const isRuleTransition=transition instanceof RuleTransition,ruleTransition=transition,next=alts[i+1].left;1===handle.left.type&&1===handle.right.type&&void 0!==transition&&(isRuleTransition&&ruleTransition.followState===handle.right||transition.target===handle.right)?(isRuleTransition?ruleTransition.followState=next:transition.target=next,removeState(atn,handle.right)):epsilon(handle.right,next)}const first=alts[0],last=alts[altsLength-1];return{left:first.left,right:last.right}}(atn,handles)}function plus(atn,rule,plus,handle,sep){const blkStart=handle.left,blkEnd=handle.right,loop=newState(atn,rule,plus,{type:11});defineDecisionState(atn,loop);const end=newState(atn,rule,plus,{type:12});return blkStart.loopback=loop,end.loopback=loop,atn.decisionMap[buildATNKey(rule,sep?"RepetitionMandatoryWithSeparator":"RepetitionMandatory",plus.idx)]=loop,epsilon(blkEnd,loop),void 0===sep?(epsilon(loop,blkStart),epsilon(loop,end)):(epsilon(loop,end),epsilon(loop,sep.left),epsilon(sep.right,blkStart)),{left:blkStart,right:end}}function star(atn,rule,star,handle,sep){const start=handle.left,end=handle.right,entry=newState(atn,rule,star,{type:10});defineDecisionState(atn,entry);const loopEnd=newState(atn,rule,star,{type:12}),loop=newState(atn,rule,star,{type:9});return entry.loopback=loop,loopEnd.loopback=loop,epsilon(entry,start),epsilon(entry,loopEnd),epsilon(end,loop),void 0!==sep?(epsilon(loop,loopEnd),epsilon(loop,sep.left),epsilon(sep.right,start)):epsilon(loop,entry),atn.decisionMap[buildATNKey(rule,sep?"RepetitionWithSeparator":"Repetition",star.idx)]=entry,{left:entry,right:loopEnd}}function defineDecisionState(atn,state){return atn.decisionStates.push(state),state.decision=atn.decisionStates.length-1,state.decision}function makeAlts(atn,rule,start,production,...alts){const end=newState(atn,rule,production,{type:8,start});start.end=end;for(const alt of alts)void 0!==alt?(epsilon(start,alt.left),epsilon(alt.right,end)):epsilon(start,end);const handle={left:start,right:end};return atn.decisionMap[buildATNKey(rule,function getProdType(production){if(production instanceof api.ak)return"Alternation";if(production instanceof api.c$)return"Option";if(production instanceof api.Y2)return"Repetition";if(production instanceof api.Pp)return"RepetitionWithSeparator";if(production instanceof api.$P)return"RepetitionMandatory";if(production instanceof api.Cy)return"RepetitionMandatoryWithSeparator";throw new Error("Invalid production type encountered")}(production),production.idx)]=start,handle}function tokenRef(atn,rule,tokenType,production){const left=newState(atn,rule,production,{type:1}),right=newState(atn,rule,production,{type:1});return addTransition(left,new AtomTransition(right,tokenType)),{left,right}}function buildRuleHandle(atn,rule,block){const start=atn.ruleToStartState.get(rule);epsilon(start,block.left);const stop=atn.ruleToStopState.get(rule);epsilon(block.right,stop);return{left:start,right:stop}}function epsilon(a,b){addTransition(a,new EpsilonTransition(b))}function newState(atn,rule,production,partial){const t=Object.assign({atn,production,epsilonOnlyTransitions:!1,rule,transitions:[],nextTokenWithinRule:[],stateNumber:atn.states.length},partial);return atn.states.push(t),t}function addTransition(state,transition){0===state.transitions.length&&(state.epsilonOnlyTransitions=transition.isEpsilon()),state.transitions.push(transition)}function removeState(atn,state){atn.states.splice(atn.states.indexOf(state),1)}const DFA_ERROR={};class ATNConfigSet{constructor(){this.map={},this.configs=[]}get size(){return this.configs.length}finalize(){this.map={}}add(config){const key=getATNConfigKey(config);key in this.map||(this.map[key]=this.configs.length,this.configs.push(config))}get elements(){return this.configs}get alts(){return(0,map.A)(this.configs,e=>e.alt)}get key(){let value="";for(const k in this.map)value+=k+":";return value}}function getATNConfigKey(config,alt=!0){return`${alt?`a${config.alt}`:""}s${config.state.stateNumber}:${config.stack.map(e=>e.stateNumber.toString()).join("_")}`}var min=__webpack_require__("./node_modules/lodash-es/min.js"),flatMap=__webpack_require__("./node_modules/lodash-es/flatMap.js"),_baseIteratee=__webpack_require__("./node_modules/lodash-es/_baseIteratee.js"),_baseUniq=__webpack_require__("./node_modules/lodash-es/_baseUniq.js");const lodash_es_uniqBy=function uniqBy(array,iteratee){return array&&array.length?(0,_baseUniq.A)(array,(0,_baseIteratee.A)(iteratee,2)):[]};var flatten=__webpack_require__("./node_modules/lodash-es/flatten.js"),forEach=__webpack_require__("./node_modules/lodash-es/forEach.js"),isEmpty=__webpack_require__("./node_modules/lodash-es/isEmpty.js"),reduce=__webpack_require__("./node_modules/lodash-es/reduce.js");function createDFACache(startState,decision){const map={};return predicateSet=>{const key=predicateSet.toString();let existing=map[key];return void 0!==existing||(existing={atnStartState:startState,decision,states:{}},map[key]=existing),existing}}class PredicateSet{constructor(){this.predicates=[]}is(index){return index>=this.predicates.length||this.predicates[index]}set(index,value){this.predicates[index]=value}toString(){let value="";const size=this.predicates.length;for(let i=0;i<size;i++)value+=!0===this.predicates[i]?"1":"0";return value}}const EMPTY_PREDICATES=new PredicateSet;class LLStarLookaheadStrategy extends api.T6{constructor(options){var _a;super(),this.logging=null!==(_a=null==options?void 0:options.logging)&&void 0!==_a?_a:message=>console.log(message)}initialize(options){this.atn=createATN(options.rules),this.dfas=function initATNSimulator(atn){const decisionLength=atn.decisionStates.length,decisionToDFA=Array(decisionLength);for(let i=0;i<decisionLength;i++)decisionToDFA[i]=createDFACache(atn.decisionStates[i],i);return decisionToDFA}(this.atn)}validateAmbiguousAlternationAlternatives(){return[]}validateEmptyOrAlternatives(){return[]}buildLookaheadForAlternation(options){const{prodOccurrence,rule,hasPredicates,dynamicTokensEnabled}=options,dfas=this.dfas,logging=this.logging,key=buildATNKey(rule,"Alternation",prodOccurrence),decisionIndex=this.atn.decisionMap[key].decision,partialAlts=(0,map.A)((0,api.jk)({maxLookahead:1,occurrence:prodOccurrence,prodType:"Alternation",rule}),currAlt=>(0,map.A)(currAlt,path=>path[0]));if(isLL1Sequence(partialAlts,!1)&&!dynamicTokensEnabled){const choiceToAlt=(0,reduce.A)(partialAlts,(result,currAlt,idx)=>((0,forEach.A)(currAlt,currTokType=>{currTokType&&(result[currTokType.tokenTypeIdx]=idx,(0,forEach.A)(currTokType.categoryMatches,currExtendingType=>{result[currExtendingType]=idx}))}),result),{});return hasPredicates?function(orAlts){var _a;const nextToken=this.LA(1),prediction=choiceToAlt[nextToken.tokenTypeIdx];if(void 0!==orAlts&&void 0!==prediction){const gate=null===(_a=orAlts[prediction])||void 0===_a?void 0:_a.GATE;if(void 0!==gate&&!1===gate.call(this))return}return prediction}:function(){const nextToken=this.LA(1);return choiceToAlt[nextToken.tokenTypeIdx]}}return hasPredicates?function(orAlts){const predicates=new PredicateSet,length=void 0===orAlts?0:orAlts.length;for(let i=0;i<length;i++){const gate=null==orAlts?void 0:orAlts[i].GATE;predicates.set(i,void 0===gate||gate.call(this))}const result=adaptivePredict.call(this,dfas,decisionIndex,predicates,logging);return"number"==typeof result?result:void 0}:function(){const result=adaptivePredict.call(this,dfas,decisionIndex,EMPTY_PREDICATES,logging);return"number"==typeof result?result:void 0}}buildLookaheadForOptional(options){const{prodOccurrence,rule,prodType,dynamicTokensEnabled}=options,dfas=this.dfas,logging=this.logging,key=buildATNKey(rule,prodType,prodOccurrence),decisionIndex=this.atn.decisionMap[key].decision,alts=(0,map.A)((0,api.jk)({maxLookahead:1,occurrence:prodOccurrence,prodType,rule}),e=>(0,map.A)(e,g=>g[0]));if(isLL1Sequence(alts)&&alts[0][0]&&!dynamicTokensEnabled){const alt=alts[0],singleTokensTypes=(0,flatten.A)(alt);if(1===singleTokensTypes.length&&(0,isEmpty.A)(singleTokensTypes[0].categoryMatches)){const expectedTokenUniqueKey=singleTokensTypes[0].tokenTypeIdx;return function(){return this.LA(1).tokenTypeIdx===expectedTokenUniqueKey}}{const choiceToAlt=(0,reduce.A)(singleTokensTypes,(result,currTokType)=>(void 0!==currTokType&&(result[currTokType.tokenTypeIdx]=!0,(0,forEach.A)(currTokType.categoryMatches,currExtendingType=>{result[currExtendingType]=!0})),result),{});return function(){const nextToken=this.LA(1);return!0===choiceToAlt[nextToken.tokenTypeIdx]}}}return function(){const result=adaptivePredict.call(this,dfas,decisionIndex,EMPTY_PREDICATES,logging);return"object"!=typeof result&&0===result}}}function isLL1Sequence(sequences,allowEmpty=!0){const fullSet=new Set;for(const alt of sequences){const altSet=new Set;for(const tokType of alt){if(void 0===tokType){if(allowEmpty)break;return!1}const indices=[tokType.tokenTypeIdx].concat(tokType.categoryMatches);for(const index of indices)if(fullSet.has(index)){if(!altSet.has(index))return!1}else fullSet.add(index),altSet.add(index)}}return!0}function adaptivePredict(dfaCaches,decision,predicateSet,logging){const dfa=dfaCaches[decision](predicateSet);let start=dfa.start;if(void 0===start){start=addDFAState(dfa,newDFAState(computeStartState(dfa.atnStartState))),dfa.start=start}return performLookahead.apply(this,[dfa,start,predicateSet,logging])}function performLookahead(dfa,s0,predicateSet,logging){let previousD=s0,i=1;const path=[];let t=this.LA(i++);for(;;){let d=getExistingTargetState(previousD,t);if(void 0===d&&(d=computeLookaheadTarget.apply(this,[dfa,previousD,t,i,predicateSet,logging])),d===DFA_ERROR)return buildAdaptivePredictError(path,previousD,t);if(!0===d.isAcceptState)return d.prediction;previousD=d,path.push(t),t=this.LA(i++)}}function computeLookaheadTarget(dfa,previousD,token,lookahead,predicateSet,logging){const reach=function computeReachSet(configs,token,predicateSet){const intermediate=new ATNConfigSet,skippedStopStates=[];for(const c of configs.elements){if(!1===predicateSet.is(c.alt))continue;if(7===c.state.type){skippedStopStates.push(c);continue}const transitionLength=c.state.transitions.length;for(let i=0;i<transitionLength;i++){const target=getReachableTarget(c.state.transitions[i],token);void 0!==target&&intermediate.add({state:target,alt:c.alt,stack:c.stack})}}let reach;0===skippedStopStates.length&&1===intermediate.size&&(reach=intermediate);if(void 0===reach){reach=new ATNConfigSet;for(const c of intermediate.elements)closure(c,reach)}if(skippedStopStates.length>0&&!function hasConfigInRuleStopState(configs){for(const c of configs.elements)if(7===c.state.type)return!0;return!1}(reach))for(const c of skippedStopStates)reach.add(c);return reach}(previousD.configs,token,predicateSet);if(0===reach.size)return addDFAEdge(dfa,previousD,token,DFA_ERROR),DFA_ERROR;let newState=newDFAState(reach);const predictedAlt=function getUniqueAlt(configs,predicateSet){let alt;for(const c of configs.elements)if(!0===predicateSet.is(c.alt))if(void 0===alt)alt=c.alt;else if(alt!==c.alt)return;return alt}(reach,predicateSet);if(void 0!==predictedAlt)newState.isAcceptState=!0,newState.prediction=predictedAlt,newState.configs.uniqueAlt=predictedAlt;else if(function hasConflictTerminatingPrediction(configs){if(function allConfigsInRuleStopStates(configs){for(const c of configs.elements)if(7!==c.state.type)return!1;return!0}(configs))return!0;const altSets=function getConflictingAltSets(configs){const configToAlts=new Map;for(const c of configs){const key=getATNConfigKey(c,!1);let alts=configToAlts.get(key);void 0===alts&&(alts={},configToAlts.set(key,alts)),alts[c.alt]=!0}return configToAlts}(configs.elements);return function hasConflictingAltSet(altSets){for(const value of Array.from(altSets.values()))if(Object.keys(value).length>1)return!0;return!1}(altSets)&&!function hasStateAssociatedWithOneAlt(altSets){for(const value of Array.from(altSets.values()))if(1===Object.keys(value).length)return!0;return!1}(altSets)}(reach)){const prediction=(0,min.A)(reach.alts);newState.isAcceptState=!0,newState.prediction=prediction,newState.configs.uniqueAlt=prediction,reportLookaheadAmbiguity.apply(this,[dfa,lookahead,reach.alts,logging])}return newState=addDFAEdge(dfa,previousD,token,newState),newState}function reportLookaheadAmbiguity(dfa,lookahead,ambiguityIndices,logging){const prefixPath=[];for(let i=1;i<=lookahead;i++)prefixPath.push(this.LA(i).tokenType);const atnState=dfa.atnStartState;logging(function buildAmbiguityError(options){const pathMsg=(0,map.A)(options.prefixPath,currtok=>(0,api.Sk)(currtok)).join(", "),occurrence=0===options.production.idx?"":options.production.idx;let currMessage=`Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(", ")}> in <${function getProductionDslName(prod){if(prod instanceof api.wL)return"SUBRULE";if(prod instanceof api.c$)return"OPTION";if(prod instanceof api.ak)return"OR";if(prod instanceof api.$P)return"AT_LEAST_ONE";if(prod instanceof api.Cy)return"AT_LEAST_ONE_SEP";if(prod instanceof api.Pp)return"MANY_SEP";if(prod instanceof api.Y2)return"MANY";if(prod instanceof api.BK)return"CONSUME";throw Error("non exhaustive match")}(options.production)}${occurrence}> inside <${options.topLevelRule.name}> Rule,\n<${pathMsg}> may appears as a prefix path in all these alternatives.\n`;return currMessage+="See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\nFor Further details.",currMessage}({topLevelRule:atnState.rule,ambiguityIndices,production:atnState.production,prefixPath}))}function buildAdaptivePredictError(path,previous,current){const nextTransitions=(0,flatMap.A)(previous.configs.elements,e=>e.state.transitions);return{actualToken:current,possibleTokenTypes:lodash_es_uniqBy(nextTransitions.filter(e=>e instanceof AtomTransition).map(e=>e.tokenType),e=>e.tokenTypeIdx),tokenPath:path}}function getExistingTargetState(state,token){return state.edges[token.tokenTypeIdx]}function getReachableTarget(transition,token){if(transition instanceof AtomTransition&&(0,api.G)(token,transition.tokenType))return transition.target}function newDFAState(closure){return{configs:closure,edges:{},isAcceptState:!1,prediction:-1}}function addDFAEdge(dfa,from,token,to){return to=addDFAState(dfa,to),from.edges[token.tokenTypeIdx]=to,to}function addDFAState(dfa,state){if(state===DFA_ERROR)return state;const mapKey=state.configs.key,existing=dfa.states[mapKey];return void 0!==existing?existing:(state.configs.finalize(),dfa.states[mapKey]=state,state)}function computeStartState(atnState){const configs=new ATNConfigSet,numberOfTransitions=atnState.transitions.length;for(let i=0;i<numberOfTransitions;i++){closure({state:atnState.transitions[i].target,alt:i,stack:[]},configs)}return configs}function closure(config,configs){const p=config.state;if(7===p.type){if(config.stack.length>0){const atnStack=[...config.stack];closure({state:atnStack.pop(),alt:config.alt,stack:atnStack},configs)}else configs.add(config);return}p.epsilonOnlyTransitions||configs.add(config);const transitionLength=p.transitions.length;for(let i=0;i<transitionLength;i++){const c=getEpsilonTarget(config,p.transitions[i]);void 0!==c&&closure(c,configs)}}function getEpsilonTarget(config,transition){if(transition instanceof EpsilonTransition)return{state:transition.target,alt:config.alt,stack:config.stack};if(transition instanceof RuleTransition){const stack=[...config.stack,transition.followState];return{state:transition.target,alt:config.alt,stack}}}var DocumentUri,URI,integer,uinteger,Position,Range,Location,LocationLink,Color,ColorInformation,ColorPresentation,FoldingRangeKind,FoldingRange,DiagnosticRelatedInformation,DiagnosticSeverity,DiagnosticTag,CodeDescription,Diagnostic,Command,TextEdit,ChangeAnnotation,ChangeAnnotationIdentifier,AnnotatedTextEdit,TextDocumentEdit,CreateFile,RenameFile,DeleteFile,WorkspaceEdit,TextDocumentIdentifier,VersionedTextDocumentIdentifier,OptionalVersionedTextDocumentIdentifier,TextDocumentItem,MarkupKind,MarkupContent,CompletionItemKind,InsertTextFormat,CompletionItemTag,InsertReplaceEdit,InsertTextMode,CompletionItemLabelDetails,CompletionItem,CompletionList,MarkedString,Hover,ParameterInformation,SignatureInformation,DocumentHighlightKind,DocumentHighlight,SymbolKind,SymbolTag,SymbolInformation,WorkspaceSymbol,DocumentSymbol,CodeActionKind,CodeActionTriggerKind,CodeActionContext,CodeAction,CodeLens,FormattingOptions,DocumentLink,SelectionRange,SemanticTokenTypes,SemanticTokenModifiers,SemanticTokens,InlineValueText,InlineValueVariableLookup,InlineValueEvaluatableExpression,InlineValueContext,InlayHintKind,InlayHintLabelPart,InlayHint,StringValue,InlineCompletionItem,InlineCompletionList,InlineCompletionTriggerKind,SelectedCompletionInfo,InlineCompletionContext,WorkspaceFolder,ast_utils=__webpack_require__("./node_modules/langium/lib/utils/ast-utils.js");!function(DocumentUri){DocumentUri.is=function is(value){return"string"==typeof value}}(DocumentUri||(DocumentUri={})),function(URI){URI.is=function is(value){return"string"==typeof value}}(URI||(URI={})),function(integer){integer.MIN_VALUE=-2147483648,integer.MAX_VALUE=2147483647,integer.is=function is(value){return"number"==typeof value&&integer.MIN_VALUE<=value&&value<=integer.MAX_VALUE}}(integer||(integer={})),function(uinteger){uinteger.MIN_VALUE=0,uinteger.MAX_VALUE=2147483647,uinteger.is=function is(value){return"number"==typeof value&&uinteger.MIN_VALUE<=value&&value<=uinteger.MAX_VALUE}}(uinteger||(uinteger={})),function(Position){Position.create=function create(line,character){return line===Number.MAX_VALUE&&(line=uinteger.MAX_VALUE),character===Number.MAX_VALUE&&(character=uinteger.MAX_VALUE),{line,character}},Position.is=function is(value){let candidate=value;return Is.objectLiteral(candidate)&&Is.uinteger(candidate.line)&&Is.uinteger(candidate.character)}}(Position||(Position={})),function(Range){Range.create=function create(one,two,three,four){if(Is.uinteger(one)&&Is.uinteger(two)&&Is.uinteger(three)&&Is.uinteger(four))return{start:Position.create(one,two),end:Position.create(three,four)};if(Position.is(one)&&Position.is(two))return{start:one,end:two};throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`)},Range.is=function is(value){let candidate=value;return Is.objectLiteral(candidate)&&Position.is(candidate.start)&&Position.is(candidate.end)}}(Range||(Range={})),function(Location){Location.create=function create(uri,range){return{uri,range}},Location.is=function is(value){let candidate=value;return Is.objectLiteral(candidate)&&Range.is(candidate.range)&&(Is.string(candidate.uri)||Is.undefined(candidate.uri))}}(Location||(Location={})),function(LocationLink){LocationLink.create=function create(targetUri,targetRange,targetSelectionRange,originSelectionRange){return{targetUri,targetRange,targetSelectionRange,originSelectionRange}},LocationLink.is=function is(value){let candidate=value;return Is.objectLiteral(candidate)&&Range.is(candidate.targetRange)&&Is.string(candidate.targetUri)&&Range.is(candidate.targetSelectionRange)&&(Range.is(candidate.originSelectionRange)||Is.undefined(candidate.originSelectionRange))}}(LocationLink||(LocationLink={})),function(Color){Color.create=function create(red,green,blue,alpha){return{red,green,blue,alpha}},Color.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&Is.numberRange(candidate.red,0,1)&&Is.numberRange(candidate.green,0,1)&&Is.numberRange(candidate.blue,0,1)&&Is.numberRange(candidate.alpha,0,1)}}(Color||(Color={})),function(ColorInformation){ColorInformation.create=function create(range,color){return{range,color}},ColorInformation.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&Range.is(candidate.range)&&Color.is(candidate.color)}}(ColorInformation||(ColorInformation={})),function(ColorPresentation){ColorPresentation.create=function create(label,textEdit,additionalTextEdits){return{label,textEdit,additionalTextEdits}},ColorPresentation.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&Is.string(candidate.label)&&(Is.undefined(candidate.textEdit)||TextEdit.is(candidate))&&(Is.undefined(candidate.additionalTextEdits)||Is.typedArray(candidate.additionalTextEdits,TextEdit.is))}}(ColorPresentation||(ColorPresentation={})),function(FoldingRangeKind){FoldingRangeKind.Comment="comment",FoldingRangeKind.Imports="imports",FoldingRangeKind.Region="region"}(FoldingRangeKind||(FoldingRangeKind={})),function(FoldingRange){FoldingRange.create=function create(startLine,endLine,startCharacter,endCharacter,kind,collapsedText){const result={startLine,endLine};return Is.defined(startCharacter)&&(result.startCharacter=startCharacter),Is.defined(endCharacter)&&(result.endCharacter=endCharacter),Is.defined(kind)&&(result.kind=kind),Is.defined(collapsedText)&&(result.collapsedText=collapsedText),result},FoldingRange.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&Is.uinteger(candidate.startLine)&&Is.uinteger(candidate.startLine)&&(Is.undefined(candidate.startCharacter)||Is.uinteger(candidate.startCharacter))&&(Is.undefined(candidate.endCharacter)||Is.uinteger(candidate.endCharacter))&&(Is.undefined(candidate.kind)||Is.string(candidate.kind))}}(FoldingRange||(FoldingRange={})),function(DiagnosticRelatedInformation){DiagnosticRelatedInformation.create=function create(location,message){return{location,message}},DiagnosticRelatedInformation.is=function is(value){let candidate=value;return Is.defined(candidate)&&Location.is(candidate.location)&&Is.string(candidate.message)}}(DiagnosticRelatedInformation||(DiagnosticRelatedInformation={})),function(DiagnosticSeverity){DiagnosticSeverity.Error=1,DiagnosticSeverity.Warning=2,DiagnosticSeverity.Information=3,DiagnosticSeverity.Hint=4}(DiagnosticSeverity||(DiagnosticSeverity={})),function(DiagnosticTag){DiagnosticTag.Unnecessary=1,DiagnosticTag.Deprecated=2}(DiagnosticTag||(DiagnosticTag={})),function(CodeDescription){CodeDescription.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&Is.string(candidate.href)}}(CodeDescription||(CodeDescription={})),function(Diagnostic){Diagnostic.create=function create(range,message,severity,code,source,relatedInformation){let result={range,message};return Is.defined(severity)&&(result.severity=severity),Is.defined(code)&&(result.code=code),Is.defined(source)&&(result.source=source),Is.defined(relatedInformation)&&(result.relatedInformation=relatedInformation),result},Diagnostic.is=function is(value){var _a;let candidate=value;return Is.defined(candidate)&&Range.is(candidate.range)&&Is.string(candidate.message)&&(Is.number(candidate.severity)||Is.undefined(candidate.severity))&&(Is.integer(candidate.code)||Is.string(candidate.code)||Is.undefined(candidate.code))&&(Is.undefined(candidate.codeDescription)||Is.string(null===(_a=candidate.codeDescription)||void 0===_a?void 0:_a.href))&&(Is.string(candidate.source)||Is.undefined(candidate.source))&&(Is.undefined(candidate.relatedInformation)||Is.typedArray(candidate.relatedInformation,DiagnosticRelatedInformation.is))}}(Diagnostic||(Diagnostic={})),function(Command){Command.create=function create(title,command,...args){let result={title,command};return Is.defined(args)&&args.length>0&&(result.arguments=args),result},Command.is=function is(value){let candidate=value;return Is.defined(candidate)&&Is.string(candidate.title)&&Is.string(candidate.command)}}(Command||(Command={})),function(TextEdit){TextEdit.replace=function replace(range,newText){return{range,newText}},TextEdit.insert=function insert(position,newText){return{range:{start:position,end:position},newText}},TextEdit.del=function del(range){return{range,newText:""}},TextEdit.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&Is.string(candidate.newText)&&Range.is(candidate.range)}}(TextEdit||(TextEdit={})),function(ChangeAnnotation){ChangeAnnotation.create=function create(label,needsConfirmation,description){const result={label};return void 0!==needsConfirmation&&(result.needsConfirmation=needsConfirmation),void 0!==description&&(result.description=description),result},ChangeAnnotation.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&Is.string(candidate.label)&&(Is.boolean(candidate.needsConfirmation)||void 0===candidate.needsConfirmation)&&(Is.string(candidate.description)||void 0===candidate.description)}}(ChangeAnnotation||(ChangeAnnotation={})),function(ChangeAnnotationIdentifier){ChangeAnnotationIdentifier.is=function is(value){const candidate=value;return Is.string(candidate)}}(ChangeAnnotationIdentifier||(ChangeAnnotationIdentifier={})),function(AnnotatedTextEdit){AnnotatedTextEdit.replace=function replace(range,newText,annotation){return{range,newText,annotationId:annotation}},AnnotatedTextEdit.insert=function insert(position,newText,annotation){return{range:{start:position,end:position},newText,annotationId:annotation}},AnnotatedTextEdit.del=function del(range,annotation){return{range,newText:"",annotationId:annotation}},AnnotatedTextEdit.is=function is(value){const candidate=value;return TextEdit.is(candidate)&&(ChangeAnnotation.is(candidate.annotationId)||ChangeAnnotationIdentifier.is(candidate.annotationId))}}(AnnotatedTextEdit||(AnnotatedTextEdit={})),function(TextDocumentEdit){TextDocumentEdit.create=function create(textDocument,edits){return{textDocument,edits}},TextDocumentEdit.is=function is(value){let candidate=value;return Is.defined(candidate)&&OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)&&Array.isArray(candidate.edits)}}(TextDocumentEdit||(TextDocumentEdit={})),function(CreateFile){CreateFile.create=function create(uri,options,annotation){let result={kind:"create",uri};return void 0===options||void 0===options.overwrite&&void 0===options.ignoreIfExists||(result.options=options),void 0!==annotation&&(result.annotationId=annotation),result},CreateFile.is=function is(value){let candidate=value;return candidate&&"create"===candidate.kind&&Is.string(candidate.uri)&&(void 0===candidate.options||(void 0===candidate.options.overwrite||Is.boolean(candidate.options.overwrite))&&(void 0===candidate.options.ignoreIfExists||Is.boolean(candidate.options.ignoreIfExists)))&&(void 0===candidate.annotationId||ChangeAnnotationIdentifier.is(candidate.annotationId))}}(CreateFile||(CreateFile={})),function(RenameFile){RenameFile.create=function create(oldUri,newUri,options,annotation){let result={kind:"rename",oldUri,newUri};return void 0===options||void 0===options.overwrite&&void 0===options.ignoreIfExists||(result.options=options),void 0!==annotation&&(result.annotationId=annotation),result},RenameFile.is=function is(value){let candidate=value;return candidate&&"rename"===candidate.kind&&Is.string(candidate.oldUri)&&Is.string(candidate.newUri)&&(void 0===candidate.options||(void 0===candidate.options.overwrite||Is.boolean(candidate.options.overwrite))&&(void 0===candidate.options.ignoreIfExists||Is.boolean(candidate.options.ignoreIfExists)))&&(void 0===candidate.annotationId||ChangeAnnotationIdentifier.is(candidate.annotationId))}}(RenameFile||(RenameFile={})),function(DeleteFile){DeleteFile.create=function create(uri,options,annotation){let result={kind:"delete",uri};return void 0===options||void 0===options.recursive&&void 0===options.ignoreIfNotExists||(result.options=options),void 0!==annotation&&(result.annotationId=annotation),result},DeleteFile.is=function is(value){let candidate=value;return candidate&&"delete"===candidate.kind&&Is.string(candidate.uri)&&(void 0===candidate.options||(void 0===candidate.options.recursive||Is.boolean(candidate.options.recursive))&&(void 0===candidate.options.ignoreIfNotExists||Is.boolean(candidate.options.ignoreIfNotExists)))&&(void 0===candidate.annotationId||ChangeAnnotationIdentifier.is(candidate.annotationId))}}(DeleteFile||(DeleteFile={})),function(WorkspaceEdit){WorkspaceEdit.is=function is(value){let candidate=value;return candidate&&(void 0!==candidate.changes||void 0!==candidate.documentChanges)&&(void 0===candidate.documentChanges||candidate.documentChanges.every(change=>Is.string(change.kind)?CreateFile.is(change)||RenameFile.is(change)||DeleteFile.is(change):TextDocumentEdit.is(change)))}}(WorkspaceEdit||(WorkspaceEdit={}));!function(TextDocumentIdentifier){TextDocumentIdentifier.create=function create(uri){return{uri}},TextDocumentIdentifier.is=function is(value){let candidate=value;return Is.defined(candidate)&&Is.string(candidate.uri)}}(TextDocumentIdentifier||(TextDocumentIdentifier={})),function(VersionedTextDocumentIdentifier){VersionedTextDocumentIdentifier.create=function create(uri,version){return{uri,version}},VersionedTextDocumentIdentifier.is=function is(value){let candidate=value;return Is.defined(candidate)&&Is.string(candidate.uri)&&Is.integer(candidate.version)}}(VersionedTextDocumentIdentifier||(VersionedTextDocumentIdentifier={})),function(OptionalVersionedTextDocumentIdentifier){OptionalVersionedTextDocumentIdentifier.create=function create(uri,version){return{uri,version}},OptionalVersionedTextDocumentIdentifier.is=function is(value){let candidate=value;return Is.defined(candidate)&&Is.string(candidate.uri)&&(null===candidate.version||Is.integer(candidate.version))}}(OptionalVersionedTextDocumentIdentifier||(OptionalVersionedTextDocumentIdentifier={})),function(TextDocumentItem){TextDocumentItem.create=function create(uri,languageId,version,text){return{uri,languageId,version,text}},TextDocumentItem.is=function is(value){let candidate=value;return Is.defined(candidate)&&Is.string(candidate.uri)&&Is.string(candidate.languageId)&&Is.integer(candidate.version)&&Is.string(candidate.text)}}(TextDocumentItem||(TextDocumentItem={})),function(MarkupKind){MarkupKind.PlainText="plaintext",MarkupKind.Markdown="markdown",MarkupKind.is=function is(value){const candidate=value;return candidate===MarkupKind.PlainText||candidate===MarkupKind.Markdown}}(MarkupKind||(MarkupKind={})),function(MarkupContent){MarkupContent.is=function is(value){const candidate=value;return Is.objectLiteral(value)&&MarkupKind.is(candidate.kind)&&Is.string(candidate.value)}}(MarkupContent||(MarkupContent={})),function(CompletionItemKind){CompletionItemKind.Text=1,CompletionItemKind.Method=2,CompletionItemKind.Function=3,CompletionItemKind.Constructor=4,CompletionItemKind.Field=5,CompletionItemKind.Variable=6,CompletionItemKind.Class=7,CompletionItemKind.Interface=8,CompletionItemKind.Module=9,CompletionItemKind.Property=10,CompletionItemKind.Unit=11,CompletionItemKind.Value=12,CompletionItemKind.Enum=13,CompletionItemKind.Keyword=14,CompletionItemKind.Snippet=15,CompletionItemKind.Color=16,CompletionItemKind.File=17,CompletionItemKind.Reference=18,CompletionItemKind.Folder=19,CompletionItemKind.EnumMember=20,CompletionItemKind.Constant=21,CompletionItemKind.Struct=22,CompletionItemKind.Event=23,CompletionItemKind.Operator=24,CompletionItemKind.TypeParameter=25}(CompletionItemKind||(CompletionItemKind={})),function(InsertTextFormat){InsertTextFormat.PlainText=1,InsertTextFormat.Snippet=2}(InsertTextFormat||(InsertTextFormat={})),function(CompletionItemTag){CompletionItemTag.Deprecated=1}(CompletionItemTag||(CompletionItemTag={})),function(InsertReplaceEdit){InsertReplaceEdit.create=function create(newText,insert,replace){return{newText,insert,replace}},InsertReplaceEdit.is=function is(value){const candidate=value;return candidate&&Is.string(candidate.newText)&&Range.is(candidate.insert)&&Range.is(candidate.replace)}}(InsertReplaceEdit||(InsertReplaceEdit={})),function(InsertTextMode){InsertTextMode.asIs=1,InsertTextMode.adjustIndentation=2}(InsertTextMode||(InsertTextMode={})),function(CompletionItemLabelDetails){CompletionItemLabelDetails.is=function is(value){const candidate=value;return candidate&&(Is.string(candidate.detail)||void 0===candidate.detail)&&(Is.string(candidate.description)||void 0===candidate.description)}}(CompletionItemLabelDetails||(CompletionItemLabelDetails={})),function(CompletionItem){CompletionItem.create=function create(label){return{label}}}(CompletionItem||(CompletionItem={})),function(CompletionList){CompletionList.create=function create(items,isIncomplete){return{items:items||[],isIncomplete:!!isIncomplete}}}(CompletionList||(CompletionList={})),function(MarkedString){MarkedString.fromPlainText=function fromPlainText(plainText){return plainText.replace(/[\\`*_{}[\]()#+\-.!]/g,"\\$&")},MarkedString.is=function is(value){const candidate=value;return Is.string(candidate)||Is.objectLiteral(candidate)&&Is.string(candidate.language)&&Is.string(candidate.value)}}(MarkedString||(MarkedString={})),function(Hover){Hover.is=function is(value){let candidate=value;return!!candidate&&Is.objectLiteral(candidate)&&(MarkupContent.is(candidate.contents)||MarkedString.is(candidate.contents)||Is.typedArray(candidate.contents,MarkedString.is))&&(void 0===value.range||Range.is(value.range))}}(Hover||(Hover={})),function(ParameterInformation){ParameterInformation.create=function create(label,documentation){return documentation?{label,documentation}:{label}}}(ParameterInformation||(ParameterInformation={})),function(SignatureInformation){SignatureInformation.create=function create(label,documentation,...parameters){let result={label};return Is.defined(documentation)&&(result.documentation=documentation),Is.defined(parameters)?result.parameters=parameters:result.parameters=[],result}}(SignatureInformation||(SignatureInformation={})),function(DocumentHighlightKind){DocumentHighlightKind.Text=1,DocumentHighlightKind.Read=2,DocumentHighlightKind.Write=3}(DocumentHighlightKind||(DocumentHighlightKind={})),function(DocumentHighlight){DocumentHighlight.create=function create(range,kind){let result={range};return Is.number(kind)&&(result.kind=kind),result}}(DocumentHighlight||(DocumentHighlight={})),function(SymbolKind){SymbolKind.File=1,SymbolKind.Module=2,SymbolKind.Namespace=3,SymbolKind.Package=4,SymbolKind.Class=5,SymbolKind.Method=6,SymbolKind.Property=7,SymbolKind.Field=8,SymbolKind.Constructor=9,SymbolKind.Enum=10,SymbolKind.Interface=11,SymbolKind.Function=12,SymbolKind.Variable=13,SymbolKind.Constant=14,SymbolKind.String=15,SymbolKind.Number=16,SymbolKind.Boolean=17,SymbolKind.Array=18,SymbolKind.Object=19,SymbolKind.Key=20,SymbolKind.Null=21,SymbolKind.EnumMember=22,SymbolKind.Struct=23,SymbolKind.Event=24,SymbolKind.Operator=25,SymbolKind.TypeParameter=26}(SymbolKind||(SymbolKind={})),function(SymbolTag){SymbolTag.Deprecated=1}(SymbolTag||(SymbolTag={})),function(SymbolInformation){SymbolInformation.create=function create(name,kind,range,uri,containerName){let result={name,kind,location:{uri,range}};return containerName&&(result.containerName=containerName),result}}(SymbolInformation||(SymbolInformation={})),function(WorkspaceSymbol){WorkspaceSymbol.create=function create(name,kind,uri,range){return void 0!==range?{name,kind,location:{uri,range}}:{name,kind,location:{uri}}}}(WorkspaceSymbol||(WorkspaceSymbol={})),function(DocumentSymbol){DocumentSymbol.create=function create(name,detail,kind,range,selectionRange,children){let result={name,detail,kind,range,selectionRange};return void 0!==children&&(result.children=children),result},DocumentSymbol.is=function is(value){let candidate=value;return candidate&&Is.string(candidate.name)&&Is.number(candidate.kind)&&Range.is(candidate.range)&&Range.is(candidate.selectionRange)&&(void 0===candidate.detail||Is.string(candidate.detail))&&(void 0===candidate.deprecated||Is.boolean(candidate.deprecated))&&(void 0===candidate.children||Array.isArray(candidate.children))&&(void 0===candidate.tags||Array.isArray(candidate.tags))}}(DocumentSymbol||(DocumentSymbol={})),function(CodeActionKind){CodeActionKind.Empty="",CodeActionKind.QuickFix="quickfix",CodeActionKind.Refactor="refactor",CodeActionKind.RefactorExtract="refactor.extract",CodeActionKind.RefactorInline="refactor.inline",CodeActionKind.RefactorRewrite="refactor.rewrite",CodeActionKind.Source="source",CodeActionKind.SourceOrganizeImports="source.organizeImports",CodeActionKind.SourceFixAll="source.fixAll"}(CodeActionKind||(CodeActionKind={})),function(CodeActionTriggerKind){CodeActionTriggerKind.Invoked=1,CodeActionTriggerKind.Automatic=2}(CodeActionTriggerKind||(CodeActionTriggerKind={})),function(CodeActionContext){CodeActionContext.create=function create(diagnostics,only,triggerKind){let result={diagnostics};return null!=only&&(result.only=only),null!=triggerKind&&(result.triggerKind=triggerKind),result},CodeActionContext.is=function is(value){let candidate=value;return Is.defined(candidate)&&Is.typedArray(candidate.diagnostics,Diagnostic.is)&&(void 0===candidate.only||Is.typedArray(candidate.only,Is.string))&&(void 0===candidate.triggerKind||candidate.triggerKind===CodeActionTriggerKind.Invoked||candidate.triggerKind===CodeActionTriggerKind.Automatic)}}(CodeActionContext||(CodeActionContext={})),function(CodeAction){CodeAction.create=function create(title,kindOrCommandOrEdit,kind){let result={title},checkKind=!0;return"string"==typeof kindOrCommandOrEdit?(checkKind=!1,result.kind=kindOrCommandOrEdit):Command.is(kindOrCommandOrEdit)?result.command=kindOrCommandOrEdit:result.edit=kindOrCommandOrEdit,checkKind&&void 0!==kind&&(result.kind=kind),result},CodeAction.is=function is(value){let candidate=value;return candidate&&Is.string(candidate.title)&&(void 0===candidate.diagnostics||Is.typedArray(candidate.diagnostics,Diagnostic.is))&&(void 0===candidate.kind||Is.string(candidate.kind))&&(void 0!==candidate.edit||void 0!==candidate.command)&&(void 0===candidate.command||Command.is(candidate.command))&&(void 0===candidate.isPreferred||Is.boolean(candidate.isPreferred))&&(void 0===candidate.edit||WorkspaceEdit.is(candidate.edit))}}(CodeAction||(CodeAction={})),function(CodeLens){CodeLens.create=function create(range,data){let result={range};return Is.defined(data)&&(result.data=data),result},CodeLens.is=function is(value){let candidate=value;return Is.defined(candidate)&&Range.is(candidate.range)&&(Is.undefined(candidate.command)||Command.is(candidate.command))}}(CodeLens||(CodeLens={})),function(FormattingOptions){FormattingOptions.create=function create(tabSize,insertSpaces){return{tabSize,insertSpaces}},FormattingOptions.is=function is(value){let candidate=value;return Is.defined(candidate)&&Is.uinteger(candidate.tabSize)&&Is.boolean(candidate.insertSpaces)}}(FormattingOptions||(FormattingOptions={})),function(DocumentLink){DocumentLink.create=function create(range,target,data){return{range,target,data}},DocumentLink.is=function is(value){let candidate=value;return Is.defined(candidate)&&Range.is(candidate.range)&&(Is.undefined(candidate.target)||Is.string(candidate.target))}}(DocumentLink||(DocumentLink={})),function(SelectionRange){SelectionRange.create=function create(range,parent){return{range,parent}},SelectionRange.is=function is(value){let candidate=value;return Is.objectLiteral(candidate)&&Range.is(candidate.range)&&(void 0===candidate.parent||SelectionRange.is(candidate.parent))}}(SelectionRange||(SelectionRange={})),function(SemanticTokenTypes){SemanticTokenTypes.namespace="namespace",SemanticTokenTypes.type="type",SemanticTokenTypes.class="class",SemanticTokenTypes.enum="enum",SemanticTokenTypes.interface="interface",SemanticTokenTypes.struct="struct",SemanticTokenTypes.typeParameter="typeParameter",SemanticTokenTypes.parameter="parameter",SemanticTokenTypes.variable="variable",SemanticTokenTypes.property="property",SemanticTokenTypes.enumMember="enumMember",SemanticTokenTypes.event="event",SemanticTokenTypes.function="function",SemanticTokenTypes.method="method",SemanticTokenTypes.macro="macro",SemanticTokenTypes.keyword="keyword",SemanticTokenTypes.modifier="modifier",SemanticTokenTypes.comment="comment",SemanticTokenTypes.string="string",SemanticTokenTypes.number="number",SemanticTokenTypes.regexp="regexp",SemanticTokenTypes.operator="operator",SemanticTokenTypes.decorator="decorator"}(SemanticTokenTypes||(SemanticTokenTypes={})),function(SemanticTokenModifiers){SemanticTokenModifiers.declaration="declaration",SemanticTokenModifiers.definition="definition",SemanticTokenModifiers.readonly="readonly",SemanticTokenModifiers.static="static",SemanticTokenModifiers.deprecated="deprecated",SemanticTokenModifiers.abstract="abstract",SemanticTokenModifiers.async="async",SemanticTokenModifiers.modification="modification",SemanticTokenModifiers.documentation="documentation",SemanticTokenModifiers.defaultLibrary="defaultLibrary"}(SemanticTokenModifiers||(SemanticTokenModifiers={})),function(SemanticTokens){SemanticTokens.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&(void 0===candidate.resultId||"string"==typeof candidate.resultId)&&Array.isArray(candidate.data)&&(0===candidate.data.length||"number"==typeof candidate.data[0])}}(SemanticTokens||(SemanticTokens={})),function(InlineValueText){InlineValueText.create=function create(range,text){return{range,text}},InlineValueText.is=function is(value){const candidate=value;return null!=candidate&&Range.is(candidate.range)&&Is.string(candidate.text)}}(InlineValueText||(InlineValueText={})),function(InlineValueVariableLookup){InlineValueVariableLookup.create=function create(range,variableName,caseSensitiveLookup){return{range,variableName,caseSensitiveLookup}},InlineValueVariableLookup.is=function is(value){const candidate=value;return null!=candidate&&Range.is(candidate.range)&&Is.boolean(candidate.caseSensitiveLookup)&&(Is.string(candidate.variableName)||void 0===candidate.variableName)}}(InlineValueVariableLookup||(InlineValueVariableLookup={})),function(InlineValueEvaluatableExpression){InlineValueEvaluatableExpression.create=function create(range,expression){return{range,expression}},InlineValueEvaluatableExpression.is=function is(value){const candidate=value;return null!=candidate&&Range.is(candidate.range)&&(Is.string(candidate.expression)||void 0===candidate.expression)}}(InlineValueEvaluatableExpression||(InlineValueEvaluatableExpression={})),function(InlineValueContext){InlineValueContext.create=function create(frameId,stoppedLocation){return{frameId,stoppedLocation}},InlineValueContext.is=function is(value){const candidate=value;return Is.defined(candidate)&&Range.is(value.stoppedLocation)}}(InlineValueContext||(InlineValueContext={})),function(InlayHintKind){InlayHintKind.Type=1,InlayHintKind.Parameter=2,InlayHintKind.is=function is(value){return 1===value||2===value}}(InlayHintKind||(InlayHintKind={})),function(InlayHintLabelPart){InlayHintLabelPart.create=function create(value){return{value}},InlayHintLabelPart.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&(void 0===candidate.tooltip||Is.string(candidate.tooltip)||MarkupContent.is(candidate.tooltip))&&(void 0===candidate.location||Location.is(candidate.location))&&(void 0===candidate.command||Command.is(candidate.command))}}(InlayHintLabelPart||(InlayHintLabelPart={})),function(InlayHint){InlayHint.create=function create(position,label,kind){const result={position,label};return void 0!==kind&&(result.kind=kind),result},InlayHint.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&Position.is(candidate.position)&&(Is.string(candidate.label)||Is.typedArray(candidate.label,InlayHintLabelPart.is))&&(void 0===candidate.kind||InlayHintKind.is(candidate.kind))&&void 0===candidate.textEdits||Is.typedArray(candidate.textEdits,TextEdit.is)&&(void 0===candidate.tooltip||Is.string(candidate.tooltip)||MarkupContent.is(candidate.tooltip))&&(void 0===candidate.paddingLeft||Is.boolean(candidate.paddingLeft))&&(void 0===candidate.paddingRight||Is.boolean(candidate.paddingRight))}}(InlayHint||(InlayHint={})),function(StringValue){StringValue.createSnippet=function createSnippet(value){return{kind:"snippet",value}}}(StringValue||(StringValue={})),function(InlineCompletionItem){InlineCompletionItem.create=function create(insertText,filterText,range,command){return{insertText,filterText,range,command}}}(InlineCompletionItem||(InlineCompletionItem={})),function(InlineCompletionList){InlineCompletionList.create=function create(items){return{items}}}(InlineCompletionList||(InlineCompletionList={})),function(InlineCompletionTriggerKind){InlineCompletionTriggerKind.Invoked=0,InlineCompletionTriggerKind.Automatic=1}(InlineCompletionTriggerKind||(InlineCompletionTriggerKind={})),function(SelectedCompletionInfo){SelectedCompletionInfo.create=function create(range,text){return{range,text}}}(SelectedCompletionInfo||(SelectedCompletionInfo={})),function(InlineCompletionContext){InlineCompletionContext.create=function create(triggerKind,selectedCompletionInfo){return{triggerKind,selectedCompletionInfo}}}(InlineCompletionContext||(InlineCompletionContext={})),function(WorkspaceFolder){WorkspaceFolder.is=function is(value){const candidate=value;return Is.objectLiteral(candidate)&&URI.is(candidate.uri)&&Is.string(candidate.name)}}(WorkspaceFolder||(WorkspaceFolder={}));var TextDocument,Is;!function(TextDocument){function mergeSort(data,compare){if(data.length<=1)return data;const p=data.length/2|0,left=data.slice(0,p),right=data.slice(p);mergeSort(left,compare),mergeSort(right,compare);let leftIdx=0,rightIdx=0,i=0;for(;leftIdx<left.length&&rightIdx<right.length;){let ret=compare(left[leftIdx],right[rightIdx]);data[i++]=ret<=0?left[leftIdx++]:right[rightIdx++]}for(;leftIdx<left.length;)data[i++]=left[leftIdx++];for(;rightIdx<right.length;)data[i++]=right[rightIdx++];return data}TextDocument.create=function create(uri,languageId,version,content){return new FullTextDocument(uri,languageId,version,content)},TextDocument.is=function is(value){let candidate=value;return!!(Is.defined(candidate)&&Is.string(candidate.uri)&&(Is.undefined(candidate.languageId)||Is.string(candidate.languageId))&&Is.uinteger(candidate.lineCount)&&Is.func(candidate.getText)&&Is.func(candidate.positionAt)&&Is.func(candidate.offsetAt))},TextDocument.applyEdits=function applyEdits(document,edits){let text=document.getText(),sortedEdits=mergeSort(edits,(a,b)=>{let diff=a.range.start.line-b.range.start.line;return 0===diff?a.range.start.character-b.range.start.character:diff}),lastModifiedOffset=text.length;for(let i=sortedEdits.length-1;i>=0;i--){let e=sortedEdits[i],startOffset=document.offsetAt(e.range.start),endOffset=document.offsetAt(e.range.end);if(!(endOffset<=lastModifiedOffset))throw new Error("Overlapping edit");text=text.substring(0,startOffset)+e.newText+text.substring(endOffset,text.length),lastModifiedOffset=startOffset}return text}}(TextDocument||(TextDocument={}));class FullTextDocument{constructor(uri,languageId,version,content){this._uri=uri,this._languageId=languageId,this._version=version,this._content=content,this._lineOffsets=void 0}get uri(){return this._uri}get languageId(){return this._languageId}get version(){return this._version}getText(range){if(range){let start=this.offsetAt(range.start),end=this.offsetAt(range.end);return this._content.substring(start,end)}return this._content}update(event,version){this._content=event.text,this._version=version,this._lineOffsets=void 0}getLineOffsets(){if(void 0===this._lineOffsets){let lineOffsets=[],text=this._content,isLineStart=!0;for(let i=0;i<text.length;i++){isLineStart&&(lineOffsets.push(i),isLineStart=!1);let ch=text.charAt(i);isLineStart="\r"===ch||"\n"===ch,"\r"===ch&&i+1<text.length&&"\n"===text.charAt(i+1)&&i++}isLineStart&&text.length>0&&lineOffsets.push(text.length),this._lineOffsets=lineOffsets}return this._lineOffsets}positionAt(offset){offset=Math.max(Math.min(offset,this._content.length),0);let lineOffsets=this.getLineOffsets(),low=0,high=lineOffsets.length;if(0===high)return Position.create(0,offset);for(;low<high;){let mid=Math.floor((low+high)/2);lineOffsets[mid]>offset?high=mid:low=mid+1}let line=low-1;return Position.create(line,offset-lineOffsets[line])}offsetAt(position){let lineOffsets=this.getLineOffsets();if(position.line>=lineOffsets.length)return this._content.length;if(position.line<0)return 0;let lineOffset=lineOffsets[position.line],nextLineOffset=position.line+1<lineOffsets.length?lineOffsets[position.line+1]:this._content.length;return Math.max(Math.min(lineOffset+position.character,nextLineOffset),lineOffset)}get lineCount(){return this.getLineOffsets().length}}!function(Is){const toString=Object.prototype.toString;Is.defined=function defined(value){return void 0!==value},Is.undefined=function undefined(value){return void 0===value},Is.boolean=function boolean(value){return!0===value||!1===value},Is.string=function string(value){return"[object String]"===toString.call(value)},Is.number=function number(value){return"[object Number]"===toString.call(value)},Is.numberRange=function numberRange(value,min,max){return"[object Number]"===toString.call(value)&&min<=value&&value<=max},Is.integer=function integer(value){return"[object Number]"===toString.call(value)&&-2147483648<=value&&value<=2147483647},Is.uinteger=function uinteger(value){return"[object Number]"===toString.call(value)&&0<=value&&value<=2147483647},Is.func=function func(value){return"[object Function]"===toString.call(value)},Is.objectLiteral=function objectLiteral(value){return null!==value&&"object"==typeof value},Is.typedArray=function typedArray(value,check){return Array.isArray(value)&&value.every(check)}}(Is||(Is={}));class CstNodeBuilder{constructor(){this.nodeStack=[]}get current(){var _a;return null!==(_a=this.nodeStack[this.nodeStack.length-1])&&void 0!==_a?_a:this.rootNode}buildRootNode(input){return this.rootNode=new RootCstNodeImpl(input),this.rootNode.root=this.rootNode,this.nodeStack=[this.rootNode],this.rootNode}buildCompositeNode(feature){const compositeNode=new CompositeCstNodeImpl;return compositeNode.grammarSource=feature,compositeNode.root=this.rootNode,this.current.content.push(compositeNode),this.nodeStack.push(compositeNode),compositeNode}buildLeafNode(token,feature){const leafNode=new LeafCstNodeImpl(token.startOffset,token.image.length,(0,cst_utils.wf)(token),token.tokenType,!feature);return leafNode.grammarSource=feature,leafNode.root=this.rootNode,this.current.content.push(leafNode),leafNode}removeNode(node){const parent=node.container;if(parent){const index=parent.content.indexOf(node);index>=0&&parent.content.splice(index,1)}}addHiddenNodes(tokens){const nodes=[];for(const token of tokens){const leafNode=new LeafCstNodeImpl(token.startOffset,token.image.length,(0,cst_utils.wf)(token),token.tokenType,!0);leafNode.root=this.rootNode,nodes.push(leafNode)}let current=this.current,added=!1;if(current.content.length>0)current.content.push(...nodes);else{for(;current.container;){const index=current.container.content.indexOf(current);if(index>0){current.container.content.splice(index,0,...nodes),added=!0;break}current=current.container}added||this.rootNode.content.unshift(...nodes)}}construct(item){const current=this.current;"string"==typeof item.$type&&(this.current.astNode=item),item.$cstNode=current;const node=this.nodeStack.pop();0===(null==node?void 0:node.content.length)&&this.removeNode(node)}}class AbstractCstNode{get parent(){return this.container}get feature(){return this.grammarSource}get hidden(){return!1}get astNode(){var _a,_b;const node="string"==typeof(null===(_a=this._astNode)||void 0===_a?void 0:_a.$type)?this._astNode:null===(_b=this.container)||void 0===_b?void 0:_b.astNode;if(!node)throw new Error("This node has no associated AST element");return node}set astNode(value){this._astNode=value}get element(){return this.astNode}get text(){return this.root.fullText.substring(this.offset,this.end)}}class LeafCstNodeImpl extends AbstractCstNode{get offset(){return this._offset}get length(){return this._length}get end(){return this._offset+this._length}get hidden(){return this._hidden}get tokenType(){return this._tokenType}get range(){return this._range}constructor(offset,length,range,tokenType,hidden=!1){super(),this._hidden=hidden,this._offset=offset,this._tokenType=tokenType,this._length=length,this._range=range}}class CompositeCstNodeImpl extends AbstractCstNode{constructor(){super(...arguments),this.content=new CstNodeContainer(this)}get children(){return this.content}get offset(){var _a,_b;return null!==(_b=null===(_a=this.firstNonHiddenNode)||void 0===_a?void 0:_a.offset)&&void 0!==_b?_b:0}get length(){return this.end-this.offset}get end(){var _a,_b;return null!==(_b=null===(_a=this.lastNonHiddenNode)||void 0===_a?void 0:_a.end)&&void 0!==_b?_b:0}get range(){const firstNode=this.firstNonHiddenNode,lastNode=this.lastNonHiddenNode;if(firstNode&&lastNode){if(void 0===this._rangeCache){const{range:firstRange}=firstNode,{range:lastRange}=lastNode;this._rangeCache={start:firstRange.start,end:lastRange.end.line<firstRange.start.line?firstRange.start:lastRange.end}}return this._rangeCache}return{start:Position.create(0,0),end:Position.create(0,0)}}get firstNonHiddenNode(){for(const child of this.content)if(!child.hidden)return child;return this.content[0]}get lastNonHiddenNode(){for(let i=this.content.length-1;i>=0;i--){const child=this.content[i];if(!child.hidden)return child}return this.content[this.content.length-1]}}class CstNodeContainer extends Array{constructor(parent){super(),this.parent=parent,Object.setPrototypeOf(this,CstNodeContainer.prototype)}push(...items){return this.addParents(items),super.push(...items)}unshift(...items){return this.addParents(items),super.unshift(...items)}splice(start,count,...items){return this.addParents(items),super.splice(start,count,...items)}addParents(items){for(const item of items)item.container=this.parent}}class RootCstNodeImpl extends CompositeCstNodeImpl{get text(){return this._text.substring(this.offset,this.end)}get fullText(){return this._text}constructor(input){super(),this._text="",this._text=null!=input?input:""}}const DatatypeSymbol=Symbol("Datatype");function isDataTypeNode(node){return node.$type===DatatypeSymbol}const withRuleSuffix=name=>name.endsWith("​")?name:name+"​";class AbstractLangiumParser{constructor(services){this._unorderedGroups=new Map,this.allRules=new Map,this.lexer=services.parser.Lexer;const tokens=this.lexer.definition,production="production"===services.LanguageMetaData.mode;this.wrapper=new ChevrotainWrapper(tokens,Object.assign(Object.assign({},services.parser.ParserConfig),{skipValidations:production,errorMessageProvider:services.parser.ParserErrorMessageProvider}))}alternatives(idx,choices){this.wrapper.wrapOr(idx,choices)}optional(idx,callback){this.wrapper.wrapOption(idx,callback)}many(idx,callback){this.wrapper.wrapMany(idx,callback)}atLeastOne(idx,callback){this.wrapper.wrapAtLeastOne(idx,callback)}getRule(name){return this.allRules.get(name)}isRecording(){return this.wrapper.IS_RECORDING}get unorderedGroups(){return this._unorderedGroups}getRuleStack(){return this.wrapper.RULE_STACK}finalize(){this.wrapper.wrapSelfAnalysis()}}class LangiumParser extends AbstractLangiumParser{get current(){return this.stack[this.stack.length-1]}constructor(services){super(services),this.nodeBuilder=new CstNodeBuilder,this.stack=[],this.assignmentMap=new Map,this.linker=services.references.Linker,this.converter=services.parser.ValueConverter,this.astReflection=services.shared.AstReflection}rule(rule,impl){const type=this.computeRuleType(rule),ruleMethod=this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name),this.startImplementation(type,impl).bind(this));return this.allRules.set(rule.name,ruleMethod),rule.entry&&(this.mainRule=ruleMethod),ruleMethod}computeRuleType(rule){if(!rule.fragment){if((0,grammar_utils.Xq)(rule))return DatatypeSymbol;{const explicit=(0,grammar_utils.PV)(rule);return null!=explicit?explicit:rule.name}}}parse(input,options={}){this.nodeBuilder.buildRootNode(input);const lexerResult=this.lexerResult=this.lexer.tokenize(input);this.wrapper.input=lexerResult.tokens;const ruleMethod=options.rule?this.allRules.get(options.rule):this.mainRule;if(!ruleMethod)throw new Error(options.rule?`No rule found with name '${options.rule}'`:"No main rule available.");const result=ruleMethod.call(this.wrapper,{});return this.nodeBuilder.addHiddenNodes(lexerResult.hidden),this.unorderedGroups.clear(),this.lexerResult=void 0,{value:result,lexerErrors:lexerResult.errors,lexerReport:lexerResult.report,parserErrors:this.wrapper.errors}}startImplementation($type,implementation){return args=>{const createNode=!this.isRecording()&&void 0!==$type;if(createNode){const node={$type};this.stack.push(node),$type===DatatypeSymbol&&(node.value="")}let result;try{result=implementation(args)}catch(err){result=void 0}return void 0===result&&createNode&&(result=this.construct()),result}}extractHiddenTokens(token){const hiddenTokens=this.lexerResult.hidden;if(!hiddenTokens.length)return[];const offset=token.startOffset;for(let i=0;i<hiddenTokens.length;i++){if(hiddenTokens[i].startOffset>offset)return hiddenTokens.splice(0,i)}return hiddenTokens.splice(0,hiddenTokens.length)}consume(idx,tokenType,feature){const token=this.wrapper.wrapConsume(idx,tokenType);if(!this.isRecording()&&this.isValidToken(token)){const hiddenTokens=this.extractHiddenTokens(token);this.nodeBuilder.addHiddenNodes(hiddenTokens);const leafNode=this.nodeBuilder.buildLeafNode(token,feature),{assignment,isCrossRef}=this.getAssignment(feature),current=this.current;if(assignment){const convertedValue=(0,ast.wb)(feature)?token.image:this.converter.convert(token.image,leafNode);this.assign(assignment.operator,assignment.feature,convertedValue,leafNode,isCrossRef)}else if(isDataTypeNode(current)){let text=token.image;(0,ast.wb)(feature)||(text=this.converter.convert(text,leafNode).toString()),current.value+=text}}}isValidToken(token){return!token.isInsertedInRecovery&&!isNaN(token.startOffset)&&"number"==typeof token.endOffset&&!isNaN(token.endOffset)}subrule(idx,rule,fragment,feature,args){let cstNode;this.isRecording()||fragment||(cstNode=this.nodeBuilder.buildCompositeNode(feature));const subruleResult=this.wrapper.wrapSubrule(idx,rule,args);!this.isRecording()&&cstNode&&cstNode.length>0&&this.performSubruleAssignment(subruleResult,feature,cstNode)}performSubruleAssignment(result,feature,cstNode){const{assignment,isCrossRef}=this.getAssignment(feature);if(assignment)this.assign(assignment.operator,assignment.feature,result,cstNode,isCrossRef);else if(!assignment){const current=this.current;if(isDataTypeNode(current))current.value+=result.toString();else if("object"==typeof result&&result){const newItem=this.assignWithoutOverride(result,current);this.stack.pop(),this.stack.push(newItem)}}}action($type,action){if(!this.isRecording()){let last=this.current;if(action.feature&&action.operator){last=this.construct(),this.nodeBuilder.removeNode(last.$cstNode);this.nodeBuilder.buildCompositeNode(action).content.push(last.$cstNode);const newItem={$type};this.stack.push(newItem),this.assign(action.operator,action.feature,last,last.$cstNode,!1)}else last.$type=$type}}construct(){if(this.isRecording())return;const obj=this.current;return(0,ast_utils.SD)(obj),this.nodeBuilder.construct(obj),this.stack.pop(),isDataTypeNode(obj)?this.converter.convert(obj.value,obj.$cstNode):((0,ast_utils.OP)(this.astReflection,obj),obj)}getAssignment(feature){if(!this.assignmentMap.has(feature)){const assignment=(0,ast_utils.XG)(feature,ast.wh);this.assignmentMap.set(feature,{assignment,isCrossRef:!!assignment&&(0,ast._c)(assignment.terminal)})}return this.assignmentMap.get(feature)}assign(operator,feature,value,cstNode,isCrossRef){const obj=this.current;let item;switch(item=isCrossRef&&"string"==typeof value?this.linker.buildReference(obj,feature,cstNode,value):value,operator){case"=":obj[feature]=item;break;case"?=":obj[feature]=!0;break;case"+=":Array.isArray(obj[feature])||(obj[feature]=[]),obj[feature].push(item)}}assignWithoutOverride(target,source){for(const[name,existingValue]of Object.entries(source)){const newValue=target[name];void 0===newValue?target[name]=existingValue:Array.isArray(newValue)&&Array.isArray(existingValue)&&(existingValue.push(...newValue),target[name]=existingValue)}const targetCstNode=target.$cstNode;return targetCstNode&&(targetCstNode.astNode=void 0,target.$cstNode=void 0),target}get definitionErrors(){return this.wrapper.definitionErrors}}class AbstractParserErrorMessageProvider{buildMismatchTokenMessage(options){return api.my.buildMismatchTokenMessage(options)}buildNotAllInputParsedMessage(options){return api.my.buildNotAllInputParsedMessage(options)}buildNoViableAltMessage(options){return api.my.buildNoViableAltMessage(options)}buildEarlyExitMessage(options){return api.my.buildEarlyExitMessage(options)}}class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider{buildMismatchTokenMessage({expected,actual}){return`Expecting ${expected.LABEL?"`"+expected.LABEL+"`":expected.name.endsWith(":KW")?`keyword '${expected.name.substring(0,expected.name.length-3)}'`:`token of type '${expected.name}'`} but found \`${actual.image}\`.`}buildNotAllInputParsedMessage({firstRedundant}){return`Expecting end of file but found \`${firstRedundant.image}\`.`}}class LangiumCompletionParser extends AbstractLangiumParser{constructor(){super(...arguments),this.tokens=[],this.elementStack=[],this.lastElementStack=[],this.nextTokenIndex=0,this.stackSize=0}action(){}construct(){}parse(input){this.resetState();const tokens=this.lexer.tokenize(input,{mode:"partial"});return this.tokens=tokens.tokens,this.wrapper.input=[...this.tokens],this.mainRule.call(this.wrapper,{}),this.unorderedGroups.clear(),{tokens:this.tokens,elementStack:[...this.lastElementStack],tokenIndex:this.nextTokenIndex}}rule(rule,impl){const ruleMethod=this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name),this.startImplementation(impl).bind(this));return this.allRules.set(rule.name,ruleMethod),rule.entry&&(this.mainRule=ruleMethod),ruleMethod}resetState(){this.elementStack=[],this.lastElementStack=[],this.nextTokenIndex=0,this.stackSize=0}startImplementation(implementation){return args=>{const size=this.keepStackSize();try{implementation(args)}finally{this.resetStackSize(size)}}}removeUnexpectedElements(){this.elementStack.splice(this.stackSize)}keepStackSize(){const size=this.elementStack.length;return this.stackSize=size,size}resetStackSize(size){this.removeUnexpectedElements(),this.stackSize=size}consume(idx,tokenType,feature){this.wrapper.wrapConsume(idx,tokenType),this.isRecording()||(this.lastElementStack=[...this.elementStack,feature],this.nextTokenIndex=this.currIdx+1)}subrule(idx,rule,fragment,feature,args){this.before(feature),this.wrapper.wrapSubrule(idx,rule,args),this.after(feature)}before(element){this.isRecording()||this.elementStack.push(element)}after(element){if(!this.isRecording()){const index=this.elementStack.lastIndexOf(element);index>=0&&this.elementStack.splice(index)}}get currIdx(){return this.wrapper.currIdx}}const defaultConfig={recoveryEnabled:!0,nodeLocationTracking:"full",skipValidations:!0,errorMessageProvider:new LangiumParserErrorMessageProvider};class ChevrotainWrapper extends api.jr{constructor(tokens,config){const useDefaultLookahead=config&&"maxLookahead"in config;super(tokens,Object.assign(Object.assign(Object.assign({},defaultConfig),{lookaheadStrategy:useDefaultLookahead?new api.T6({maxLookahead:config.maxLookahead}):new LLStarLookaheadStrategy({logging:config.skipValidations?()=>{}:void 0})}),config))}get IS_RECORDING(){return this.RECORDING_PHASE}DEFINE_RULE(name,impl){return this.RULE(name,impl)}wrapSelfAnalysis(){this.performSelfAnalysis()}wrapConsume(idx,tokenType){return this.consume(idx,tokenType)}wrapSubrule(idx,rule,args){return this.subrule(idx,rule,{ARGS:[args]})}wrapOr(idx,choices){this.or(idx,choices)}wrapOption(idx,callback){this.option(idx,callback)}wrapMany(idx,callback){this.many(idx,callback)}wrapAtLeastOne(idx,callback){this.atLeastOne(idx,callback)}}var errors=__webpack_require__("./node_modules/langium/lib/utils/errors.js"),stream=__webpack_require__("./node_modules/langium/lib/utils/stream.js");function createParser(grammar,parser,tokens){return function buildRules(parserContext,grammar){const reachable=(0,grammar_utils.YV)(grammar,!1),parserRules=(0,stream.Td)(grammar.rules).filter(ast.s7).filter(rule=>reachable.has(rule));for(const rule of parserRules){const ctx=Object.assign(Object.assign({},parserContext),{consume:1,optional:1,subrule:1,many:1,or:1});parserContext.parser.rule(rule,buildElement(ctx,rule.definition))}}({parser,tokens,ruleNames:new Map},grammar),parser}function buildElement(ctx,element,ignoreGuard=!1){let method;if((0,ast.wb)(element))method=function buildKeyword(ctx,keyword){const idx=ctx.consume++,token=ctx.tokens[keyword.value];if(!token)throw new Error("Could not find token for keyword: "+keyword.value);return()=>ctx.parser.consume(idx,token,keyword)}(ctx,element);else if((0,ast.ve)(element))method=function buildAction(ctx,action){const actionType=(0,grammar_utils.Uz)(action);return()=>ctx.parser.action(actionType,action)}(ctx,element);else if((0,ast.wh)(element))method=buildElement(ctx,element.terminal);else if((0,ast._c)(element))method=buildCrossReference(ctx,element);else if((0,ast.$g)(element))method=function buildRuleCall(ctx,ruleCall){const rule=ruleCall.rule.ref;if((0,ast.s7)(rule)){const idx=ctx.subrule++,fragment=rule.fragment,predicate=ruleCall.arguments.length>0?function buildRuleCallPredicate(rule,namedArgs){const predicates=namedArgs.map(e=>buildPredicate(e.value));return args=>{const ruleArgs={};for(let i=0;i<predicates.length;i++){const ruleTarget=rule.parameters[i],predicate=predicates[i];ruleArgs[ruleTarget.name]=predicate(args)}return ruleArgs}}(rule,ruleCall.arguments):()=>({});return args=>ctx.parser.subrule(idx,getRule(ctx,rule),fragment,ruleCall,predicate(args))}if((0,ast.rE)(rule)){const idx=ctx.consume++,method=getToken(ctx,rule.name);return()=>ctx.parser.consume(idx,method,ruleCall)}if(!rule)throw new errors.W(ruleCall.$cstNode,`Undefined rule: ${ruleCall.rule.$refText}`);(0,errors.d)(rule)}(ctx,element);else if((0,ast.jp)(element))method=function buildAlternatives(ctx,alternatives){if(1===alternatives.elements.length)return buildElement(ctx,alternatives.elements[0]);{const methods=[];for(const element of alternatives.elements){const predicatedMethod={ALT:buildElement(ctx,element,!0)},guard=getGuardCondition(element);guard&&(predicatedMethod.GATE=buildPredicate(guard)),methods.push(predicatedMethod)}const idx=ctx.or++;return args=>ctx.parser.alternatives(idx,methods.map(method=>{const alt={ALT:()=>method.ALT(args)},gate=method.GATE;return gate&&(alt.GATE=()=>gate(args)),alt}))}}(ctx,element);else if((0,ast.cY)(element))method=function buildUnorderedGroup(ctx,group){if(1===group.elements.length)return buildElement(ctx,group.elements[0]);const methods=[];for(const element of group.elements){const predicatedMethod={ALT:buildElement(ctx,element,!0)},guard=getGuardCondition(element);guard&&(predicatedMethod.GATE=buildPredicate(guard)),methods.push(predicatedMethod)}const orIdx=ctx.or++,idFunc=(groupIdx,lParser)=>`uGroup_${groupIdx}_${lParser.getRuleStack().join("-")}`,alternatives=args=>ctx.parser.alternatives(orIdx,methods.map((method,idx)=>{const alt={ALT:()=>!0},parser=ctx.parser;alt.ALT=()=>{if(method.ALT(args),!parser.isRecording()){const key=idFunc(orIdx,parser);parser.unorderedGroups.get(key)||parser.unorderedGroups.set(key,[]);const groupState=parser.unorderedGroups.get(key);void 0===(null==groupState?void 0:groupState[idx])&&(groupState[idx]=!0)}};const gate=method.GATE;return alt.GATE=gate?()=>gate(args):()=>{const trackedAlternatives=parser.unorderedGroups.get(idFunc(orIdx,parser));return!(null==trackedAlternatives?void 0:trackedAlternatives[idx])},alt})),wrapped=wrap(ctx,getGuardCondition(group),alternatives,"*");return args=>{wrapped(args),ctx.parser.isRecording()||ctx.parser.unorderedGroups.delete(idFunc(orIdx,ctx.parser))}}(ctx,element);else if((0,ast.IZ)(element))method=function buildGroup(ctx,group){const methods=group.elements.map(e=>buildElement(ctx,e));return args=>methods.forEach(method=>method(args))}(ctx,element);else{if(!(0,ast.FO)(element))throw new errors.W(element.$cstNode,`Unexpected element type: ${element.$type}`);{const idx=ctx.consume++;method=()=>ctx.parser.consume(idx,api.LT,element)}}return wrap(ctx,ignoreGuard?void 0:getGuardCondition(element),method,element.cardinality)}function buildPredicate(condition){if((0,ast.RP)(condition)){const left=buildPredicate(condition.left),right=buildPredicate(condition.right);return args=>left(args)||right(args)}if((0,ast.Tu)(condition)){const left=buildPredicate(condition.left),right=buildPredicate(condition.right);return args=>left(args)&&right(args)}if((0,ast.Ct)(condition)){const value=buildPredicate(condition.value);return args=>!value(args)}if((0,ast.TF)(condition)){const name=condition.parameter.ref.name;return args=>void 0!==args&&!0===args[name]}if((0,ast.Cz)(condition)){const value=Boolean(condition.true);return()=>value}(0,errors.d)(condition)}function getGuardCondition(element){if((0,ast.IZ)(element))return element.guardCondition}function buildCrossReference(ctx,crossRef,terminal=crossRef.terminal){if(terminal){if((0,ast.$g)(terminal)&&(0,ast.s7)(terminal.rule.ref)){const rule=terminal.rule.ref,idx=ctx.subrule++;return args=>ctx.parser.subrule(idx,getRule(ctx,rule),!1,crossRef,args)}if((0,ast.$g)(terminal)&&(0,ast.rE)(terminal.rule.ref)){const idx=ctx.consume++,terminalRule=getToken(ctx,terminal.rule.ref.name);return()=>ctx.parser.consume(idx,terminalRule,crossRef)}if((0,ast.wb)(terminal)){const idx=ctx.consume++,keyword=getToken(ctx,terminal.value);return()=>ctx.parser.consume(idx,keyword,crossRef)}throw new Error("Could not build cross reference parser")}{if(!crossRef.type.ref)throw new Error("Could not resolve reference to type: "+crossRef.type.$refText);const assignment=(0,grammar_utils.U5)(crossRef.type.ref),assignTerminal=null==assignment?void 0:assignment.terminal;if(!assignTerminal)throw new Error("Could not find name assignment for type: "+(0,grammar_utils.Uz)(crossRef.type.ref));return buildCrossReference(ctx,crossRef,assignTerminal)}}function wrap(ctx,guard,method,cardinality){const gate=guard&&buildPredicate(guard);if(!cardinality){if(gate){const idx=ctx.or++;return args=>ctx.parser.alternatives(idx,[{ALT:()=>method(args),GATE:()=>gate(args)},{ALT:(0,api.mT)(),GATE:()=>!gate(args)}])}return method}if("*"===cardinality){const idx=ctx.many++;return args=>ctx.parser.many(idx,{DEF:()=>method(args),GATE:gate?()=>gate(args):void 0})}if("+"===cardinality){const idx=ctx.many++;if(gate){const orIdx=ctx.or++;return args=>ctx.parser.alternatives(orIdx,[{ALT:()=>ctx.parser.atLeastOne(idx,{DEF:()=>method(args)}),GATE:()=>gate(args)},{ALT:(0,api.mT)(),GATE:()=>!gate(args)}])}return args=>ctx.parser.atLeastOne(idx,{DEF:()=>method(args)})}if("?"===cardinality){const idx=ctx.optional++;return args=>ctx.parser.optional(idx,{DEF:()=>method(args),GATE:gate?()=>gate(args):void 0})}(0,errors.d)(cardinality)}function getRule(ctx,element){const name=function getRuleName(ctx,element){if((0,ast.s7)(element))return element.name;if(ctx.ruleNames.has(element))return ctx.ruleNames.get(element);{let item=element,parent=item.$container,ruleName=element.$type;for(;!(0,ast.s7)(parent);){if((0,ast.IZ)(parent)||(0,ast.jp)(parent)||(0,ast.cY)(parent)){ruleName=parent.elements.indexOf(item).toString()+":"+ruleName}item=parent,parent=parent.$container}return ruleName=parent.name+":"+ruleName,ctx.ruleNames.set(element,ruleName),ruleName}}(ctx,element),rule=ctx.parser.getRule(name);if(!rule)throw new Error(`Rule "${name}" not found."`);return rule}function getToken(ctx,name){const token=ctx.tokens[name];if(!token)throw new Error(`Token "${name}" not found."`);return token}function createLangiumParser(services){const parser=function prepareLangiumParser(services){const grammar=services.Grammar,lexer=services.parser.Lexer,parser=new LangiumParser(services);return createParser(grammar,parser,lexer.definition)}(services);return parser.finalize(),parser}var token_builder=__webpack_require__("./node_modules/langium/lib/parser/token-builder.js"),value_converter=__webpack_require__("./node_modules/langium/lib/parser/value-converter.js"),cancellation=__webpack_require__("./node_modules/vscode-jsonrpc/lib/common/cancellation.js"),syntax_tree=__webpack_require__("./node_modules/langium/lib/syntax-tree.js");let lastTick=0,globalInterruptionPeriod=10;const promise_utils_OperationCancelled=Symbol("OperationCancelled");function isOperationCancelled(err){return err===promise_utils_OperationCancelled}async function interruptAndCheck(token){if(token===cancellation.XO.None)return;const current=performance.now();if(current-lastTick>=globalInterruptionPeriod&&(lastTick=current,await function delayNextTick(){return new Promise(resolve=>{"undefined"==typeof setImmediate?setTimeout(resolve,0):setImmediate(resolve)})}(),lastTick=performance.now()),token.isCancellationRequested)throw promise_utils_OperationCancelled}class promise_utils_Deferred{constructor(){this.promise=new Promise((resolve,reject)=>{this.resolve=arg=>(resolve(arg),this),this.reject=err=>(reject(err),this)})}}class main_FullTextDocument{constructor(uri,languageId,version,content){this._uri=uri,this._languageId=languageId,this._version=version,this._content=content,this._lineOffsets=void 0}get uri(){return this._uri}get languageId(){return this._languageId}get version(){return this._version}getText(range){if(range){const start=this.offsetAt(range.start),end=this.offsetAt(range.end);return this._content.substring(start,end)}return this._content}update(changes,version){for(const change of changes)if(main_FullTextDocument.isIncremental(change)){const range=getWellformedRange(change.range),startOffset=this.offsetAt(range.start),endOffset=this.offsetAt(range.end);this._content=this._content.substring(0,startOffset)+change.text+this._content.substring(endOffset,this._content.length);const startLine=Math.max(range.start.line,0),endLine=Math.max(range.end.line,0);let lineOffsets=this._lineOffsets;const addedLineOffsets=computeLineOffsets(change.text,!1,startOffset);if(endLine-startLine===addedLineOffsets.length)for(let i=0,len=addedLineOffsets.length;i<len;i++)lineOffsets[i+startLine+1]=addedLineOffsets[i];else addedLineOffsets.length<1e4?lineOffsets.splice(startLine+1,endLine-startLine,...addedLineOffsets):this._lineOffsets=lineOffsets=lineOffsets.slice(0,startLine+1).concat(addedLineOffsets,lineOffsets.slice(endLine+1));const diff=change.text.length-(endOffset-startOffset);if(0!==diff)for(let i=startLine+1+addedLineOffsets.length,len=lineOffsets.length;i<len;i++)lineOffsets[i]=lineOffsets[i]+diff}else{if(!main_FullTextDocument.isFull(change))throw new Error("Unknown change event received");this._content=change.text,this._lineOffsets=void 0}this._version=version}getLineOffsets(){return void 0===this._lineOffsets&&(this._lineOffsets=computeLineOffsets(this._content,!0)),this._lineOffsets}positionAt(offset){offset=Math.max(Math.min(offset,this._content.length),0);const lineOffsets=this.getLineOffsets();let low=0,high=lineOffsets.length;if(0===high)return{line:0,character:offset};for(;low<high;){const mid=Math.floor((low+high)/2);lineOffsets[mid]>offset?high=mid:low=mid+1}const line=low-1;return{line,character:(offset=this.ensureBeforeEOL(offset,lineOffsets[line]))-lineOffsets[line]}}offsetAt(position){const lineOffsets=this.getLineOffsets();if(position.line>=lineOffsets.length)return this._content.length;if(position.line<0)return 0;const lineOffset=lineOffsets[position.line];if(position.character<=0)return lineOffset;const nextLineOffset=position.line+1<lineOffsets.length?lineOffsets[position.line+1]:this._content.length,offset=Math.min(lineOffset+position.character,nextLineOffset);return this.ensureBeforeEOL(offset,lineOffset)}ensureBeforeEOL(offset,lineOffset){for(;offset>lineOffset&&isEOL(this._content.charCodeAt(offset-1));)offset--;return offset}get lineCount(){return this.getLineOffsets().length}static isIncremental(event){const candidate=event;return null!=candidate&&"string"==typeof candidate.text&&void 0!==candidate.range&&(void 0===candidate.rangeLength||"number"==typeof candidate.rangeLength)}static isFull(event){const candidate=event;return null!=candidate&&"string"==typeof candidate.text&&void 0===candidate.range&&void 0===candidate.rangeLength}}var main_TextDocument;function mergeSort(data,compare){if(data.length<=1)return data;const p=data.length/2|0,left=data.slice(0,p),right=data.slice(p);mergeSort(left,compare),mergeSort(right,compare);let leftIdx=0,rightIdx=0,i=0;for(;leftIdx<left.length&&rightIdx<right.length;){const ret=compare(left[leftIdx],right[rightIdx]);data[i++]=ret<=0?left[leftIdx++]:right[rightIdx++]}for(;leftIdx<left.length;)data[i++]=left[leftIdx++];for(;rightIdx<right.length;)data[i++]=right[rightIdx++];return data}function computeLineOffsets(text,isAtLineStart,textOffset=0){const result=isAtLineStart?[textOffset]:[];for(let i=0;i<text.length;i++){const ch=text.charCodeAt(i);isEOL(ch)&&(13===ch&&i+1<text.length&&10===text.charCodeAt(i+1)&&i++,result.push(textOffset+i+1))}return result}function isEOL(char){return 13===char||10===char}function getWellformedRange(range){const start=range.start,end=range.end;return start.line>end.line||start.line===end.line&&start.character>end.character?{start:end,end:start}:range}function getWellformedEdit(textEdit){const range=getWellformedRange(textEdit.range);return range!==textEdit.range?{newText:textEdit.newText,range}:textEdit}!function(TextDocument){TextDocument.create=function create(uri,languageId,version,content){return new main_FullTextDocument(uri,languageId,version,content)},TextDocument.update=function update(document,changes,version){if(document instanceof main_FullTextDocument)return document.update(changes,version),document;throw new Error("TextDocument.update: document must be created by TextDocument.create")},TextDocument.applyEdits=function applyEdits(document,edits){const text=document.getText(),sortedEdits=mergeSort(edits.map(getWellformedEdit),(a,b)=>{const diff=a.range.start.line-b.range.start.line;return 0===diff?a.range.start.character-b.range.start.character:diff});let lastModifiedOffset=0;const spans=[];for(const e of sortedEdits){const startOffset=document.offsetAt(e.range.start);if(startOffset<lastModifiedOffset)throw new Error("Overlapping edit");startOffset>lastModifiedOffset&&spans.push(text.substring(lastModifiedOffset,startOffset)),e.newText.length&&spans.push(e.newText),lastModifiedOffset=document.offsetAt(e.range.end)}return spans.push(text.substr(lastModifiedOffset)),spans.join("")}}(main_TextDocument||(main_TextDocument={}));var DocumentState,esm=__webpack_require__("./node_modules/vscode-uri/lib/esm/index.mjs");!function(DocumentState){DocumentState[DocumentState.Changed=0]="Changed",DocumentState[DocumentState.Parsed=1]="Parsed",DocumentState[DocumentState.IndexedContent=2]="IndexedContent",DocumentState[DocumentState.ComputedScopes=3]="ComputedScopes",DocumentState[DocumentState.Linked=4]="Linked",DocumentState[DocumentState.IndexedReferences=5]="IndexedReferences",DocumentState[DocumentState.Validated=6]="Validated"}(DocumentState||(DocumentState={}));class DefaultLangiumDocumentFactory{constructor(services){this.serviceRegistry=services.ServiceRegistry,this.textDocuments=services.workspace.TextDocuments,this.fileSystemProvider=services.workspace.FileSystemProvider}async fromUri(uri,cancellationToken=cancellation.XO.None){const content=await this.fileSystemProvider.readFile(uri);return this.createAsync(uri,content,cancellationToken)}fromTextDocument(textDocument,uri,token){return uri=null!=uri?uri:esm.r.parse(textDocument.uri),cancellation.XO.is(token)?this.createAsync(uri,textDocument,token):this.create(uri,textDocument,token)}fromString(text,uri,token){return cancellation.XO.is(token)?this.createAsync(uri,text,token):this.create(uri,text,token)}fromModel(model,uri){return this.create(uri,{$model:model})}create(uri,content,options){if("string"==typeof content){const parseResult=this.parse(uri,content,options);return this.createLangiumDocument(parseResult,uri,void 0,content)}if("$model"in content){const parseResult={value:content.$model,parserErrors:[],lexerErrors:[]};return this.createLangiumDocument(parseResult,uri)}{const parseResult=this.parse(uri,content.getText(),options);return this.createLangiumDocument(parseResult,uri,content)}}async createAsync(uri,content,cancelToken){if("string"==typeof content){const parseResult=await this.parseAsync(uri,content,cancelToken);return this.createLangiumDocument(parseResult,uri,void 0,content)}{const parseResult=await this.parseAsync(uri,content.getText(),cancelToken);return this.createLangiumDocument(parseResult,uri,content)}}createLangiumDocument(parseResult,uri,textDocument,text){let document;if(textDocument)document={parseResult,uri,state:DocumentState.Parsed,references:[],textDocument};else{const textDocumentGetter=this.createTextDocumentGetter(uri,text);document={parseResult,uri,state:DocumentState.Parsed,references:[],get textDocument(){return textDocumentGetter()}}}return parseResult.value.$document=document,document}async update(document,cancellationToken){var _a,_b;const oldText=null===(_a=document.parseResult.value.$cstNode)||void 0===_a?void 0:_a.root.fullText,textDocument=null===(_b=this.textDocuments)||void 0===_b?void 0:_b.get(document.uri.toString()),text=textDocument?textDocument.getText():await this.fileSystemProvider.readFile(document.uri);if(textDocument)Object.defineProperty(document,"textDocument",{value:textDocument});else{const textDocumentGetter=this.createTextDocumentGetter(document.uri,text);Object.defineProperty(document,"textDocument",{get:textDocumentGetter})}return oldText!==text&&(document.parseResult=await this.parseAsync(document.uri,text,cancellationToken),document.parseResult.value.$document=document),document.state=DocumentState.Parsed,document}parse(uri,text,options){return this.serviceRegistry.getServices(uri).parser.LangiumParser.parse(text,options)}parseAsync(uri,text,cancellationToken){return this.serviceRegistry.getServices(uri).parser.AsyncParser.parse(text,cancellationToken)}createTextDocumentGetter(uri,text){const serviceRegistry=this.serviceRegistry;let textDoc;return()=>null!=textDoc?textDoc:textDoc=main_TextDocument.create(uri.toString(),serviceRegistry.getServices(uri).LanguageMetaData.languageId,0,null!=text?text:"")}}class DefaultLangiumDocuments{constructor(services){this.documentMap=new Map,this.langiumDocumentFactory=services.workspace.LangiumDocumentFactory,this.serviceRegistry=services.ServiceRegistry}get all(){return(0,stream.Td)(this.documentMap.values())}addDocument(document){const uriString=document.uri.toString();if(this.documentMap.has(uriString))throw new Error(`A document with the URI '${uriString}' is already present.`);this.documentMap.set(uriString,document)}getDocument(uri){const uriString=uri.toString();return this.documentMap.get(uriString)}async getOrCreateDocument(uri,cancellationToken){let document=this.getDocument(uri);return document||(document=await this.langiumDocumentFactory.fromUri(uri,cancellationToken),this.addDocument(document),document)}createDocument(uri,text,cancellationToken){if(cancellationToken)return this.langiumDocumentFactory.fromString(text,uri,cancellationToken).then(document=>(this.addDocument(document),document));{const document=this.langiumDocumentFactory.fromString(text,uri);return this.addDocument(document),document}}hasDocument(uri){return this.documentMap.has(uri.toString())}invalidateDocument(uri){const uriString=uri.toString(),langiumDoc=this.documentMap.get(uriString);if(langiumDoc){this.serviceRegistry.getServices(uri).references.Linker.unlink(langiumDoc),langiumDoc.state=DocumentState.Changed,langiumDoc.precomputedScopes=void 0,langiumDoc.diagnostics=void 0}return langiumDoc}deleteDocument(uri){const uriString=uri.toString(),langiumDoc=this.documentMap.get(uriString);return langiumDoc&&(langiumDoc.state=DocumentState.Changed,this.documentMap.delete(uriString)),langiumDoc}}const ref_resolving=Symbol("ref_resolving");class DefaultLinker{constructor(services){this.reflection=services.shared.AstReflection,this.langiumDocuments=()=>services.shared.workspace.LangiumDocuments,this.scopeProvider=services.references.ScopeProvider,this.astNodeLocator=services.workspace.AstNodeLocator}async link(document,cancelToken=cancellation.XO.None){for(const node of(0,ast_utils.jm)(document.parseResult.value))await interruptAndCheck(cancelToken),(0,ast_utils.DM)(node).forEach(ref=>this.doLink(ref,document))}doLink(refInfo,document){var _a;const ref=refInfo.reference;if(void 0===ref._ref){ref._ref=ref_resolving;try{const description=this.getCandidate(refInfo);if((0,syntax_tree.Zl)(description))ref._ref=description;else if(ref._nodeDescription=description,this.langiumDocuments().hasDocument(description.documentUri)){const linkedNode=this.loadAstNode(description);ref._ref=null!=linkedNode?linkedNode:this.createLinkingError(refInfo,description)}else ref._ref=void 0}catch(err){console.error(`An error occurred while resolving reference to '${ref.$refText}':`,err);const errorMessage=null!==(_a=err.message)&&void 0!==_a?_a:String(err);ref._ref=Object.assign(Object.assign({},refInfo),{message:`An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}`})}document.references.push(ref)}}unlink(document){for(const ref of document.references)delete ref._ref,delete ref._nodeDescription;document.references=[]}getCandidate(refInfo){const description=this.scopeProvider.getScope(refInfo).getElement(refInfo.reference.$refText);return null!=description?description:this.createLinkingError(refInfo)}buildReference(node,property,refNode,refText){const linker=this,reference={$refNode:refNode,$refText:refText,get ref(){var _a;if((0,syntax_tree.ng)(this._ref))return this._ref;if((0,syntax_tree.Nr)(this._nodeDescription)){const linkedNode=linker.loadAstNode(this._nodeDescription);this._ref=null!=linkedNode?linkedNode:linker.createLinkingError({reference,container:node,property},this._nodeDescription)}else if(void 0===this._ref){this._ref=ref_resolving;const document=(0,ast_utils.cQ)(node).$document,refData=linker.getLinkedNode({reference,container:node,property});if(refData.error&&document&&document.state<DocumentState.ComputedScopes)return this._ref=void 0;this._ref=null!==(_a=refData.node)&&void 0!==_a?_a:refData.error,this._nodeDescription=refData.descr,null==document||document.references.push(this)}else if(this._ref===ref_resolving)throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);return(0,syntax_tree.ng)(this._ref)?this._ref:void 0},get $nodeDescription(){return this._nodeDescription},get error(){return(0,syntax_tree.Zl)(this._ref)?this._ref:void 0}};return reference}getLinkedNode(refInfo){var _a;try{const description=this.getCandidate(refInfo);if((0,syntax_tree.Zl)(description))return{error:description};const linkedNode=this.loadAstNode(description);return linkedNode?{node:linkedNode,descr:description}:{descr:description,error:this.createLinkingError(refInfo,description)}}catch(err){console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`,err);const errorMessage=null!==(_a=err.message)&&void 0!==_a?_a:String(err);return{error:Object.assign(Object.assign({},refInfo),{message:`An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}`})}}}loadAstNode(nodeDescription){if(nodeDescription.node)return nodeDescription.node;const doc=this.langiumDocuments().getDocument(nodeDescription.documentUri);return doc?this.astNodeLocator.getAstNode(doc.parseResult.value,nodeDescription.path):void 0}createLinkingError(refInfo,targetDescription){const document=(0,ast_utils.cQ)(refInfo.container).$document;document&&document.state<DocumentState.ComputedScopes&&console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);const referenceType=this.reflection.getReferenceType(refInfo);return Object.assign(Object.assign({},refInfo),{message:`Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`,targetDescription})}}class DefaultNameProvider{getName(node){if(function isNamed(node){return"string"==typeof node.name}(node))return node.name}getNameNode(node){return(0,grammar_utils.qO)(node.$cstNode,"name")}}var UriUtils;!function(UriUtils){UriUtils.basename=esm.A.basename,UriUtils.dirname=esm.A.dirname,UriUtils.extname=esm.A.extname,UriUtils.joinPath=esm.A.joinPath,UriUtils.resolvePath=esm.A.resolvePath,UriUtils.equals=function equals(a,b){return(null==a?void 0:a.toString())===(null==b?void 0:b.toString())},UriUtils.relative=function relative(from,to){const fromPath="string"==typeof from?from:from.path,toPath="string"==typeof to?to:to.path,fromParts=fromPath.split("/").filter(e=>e.length>0),toParts=toPath.split("/").filter(e=>e.length>0);let i=0;for(;i<fromParts.length&&fromParts[i]===toParts[i];i++);return"../".repeat(fromParts.length-i)+toParts.slice(i).join("/")},UriUtils.normalize=function normalize(uri){return esm.r.parse(uri.toString()).toString()}}(UriUtils||(UriUtils={}));class DefaultReferences{constructor(services){this.nameProvider=services.references.NameProvider,this.index=services.shared.workspace.IndexManager,this.nodeLocator=services.workspace.AstNodeLocator}findDeclaration(sourceCstNode){if(sourceCstNode){const assignment=(0,grammar_utils.Rp)(sourceCstNode),nodeElem=sourceCstNode.astNode;if(assignment&&nodeElem){const reference=nodeElem[assignment.feature];if((0,syntax_tree.A_)(reference))return reference.ref;if(Array.isArray(reference))for(const ref of reference)if((0,syntax_tree.A_)(ref)&&ref.$refNode&&ref.$refNode.offset<=sourceCstNode.offset&&ref.$refNode.end>=sourceCstNode.end)return ref.ref}if(nodeElem){const nameNode=this.nameProvider.getNameNode(nodeElem);if(nameNode&&(nameNode===sourceCstNode||(0,cst_utils.pO)(sourceCstNode,nameNode)))return nodeElem}}}findDeclarationNode(sourceCstNode){const astNode=this.findDeclaration(sourceCstNode);if(null==astNode?void 0:astNode.$cstNode){const targetNode=this.nameProvider.getNameNode(astNode);return null!=targetNode?targetNode:astNode.$cstNode}}findReferences(targetNode,options){const refs=[];if(options.includeDeclaration){const ref=this.getReferenceToSelf(targetNode);ref&&refs.push(ref)}let indexReferences=this.index.findAllReferences(targetNode,this.nodeLocator.getAstNodePath(targetNode));return options.documentUri&&(indexReferences=indexReferences.filter(ref=>UriUtils.equals(ref.sourceUri,options.documentUri))),refs.push(...indexReferences),(0,stream.Td)(refs)}getReferenceToSelf(targetNode){const nameNode=this.nameProvider.getNameNode(targetNode);if(nameNode){const doc=(0,ast_utils.YE)(targetNode),path=this.nodeLocator.getAstNodePath(targetNode);return{sourceUri:doc.uri,sourcePath:path,targetUri:doc.uri,targetPath:path,segment:(0,cst_utils.SX)(nameNode),local:!0}}}}class MultiMap{constructor(elements){if(this.map=new Map,elements)for(const[key,value]of elements)this.add(key,value)}get size(){return stream.iD.sum((0,stream.Td)(this.map.values()).map(a=>a.length))}clear(){this.map.clear()}delete(key,value){if(void 0===value)return this.map.delete(key);{const values=this.map.get(key);if(values){const index=values.indexOf(value);if(index>=0)return 1===values.length?this.map.delete(key):values.splice(index,1),!0}return!1}}get(key){var _a;return null!==(_a=this.map.get(key))&&void 0!==_a?_a:[]}has(key,value){if(void 0===value)return this.map.has(key);{const values=this.map.get(key);return!!values&&values.indexOf(value)>=0}}add(key,value){return this.map.has(key)?this.map.get(key).push(value):this.map.set(key,[value]),this}addAll(key,values){return this.map.has(key)?this.map.get(key).push(...values):this.map.set(key,Array.from(values)),this}forEach(callbackfn){this.map.forEach((array,key)=>array.forEach(value=>callbackfn(value,key,this)))}[Symbol.iterator](){return this.entries().iterator()}entries(){return(0,stream.Td)(this.map.entries()).flatMap(([key,array])=>array.map(value=>[key,value]))}keys(){return(0,stream.Td)(this.map.keys())}values(){return(0,stream.Td)(this.map.values()).flat()}entriesGroupedByKey(){return(0,stream.Td)(this.map.entries())}}class BiMap{get size(){return this.map.size}constructor(elements){if(this.map=new Map,this.inverse=new Map,elements)for(const[key,value]of elements)this.set(key,value)}clear(){this.map.clear(),this.inverse.clear()}set(key,value){return this.map.set(key,value),this.inverse.set(value,key),this}get(key){return this.map.get(key)}getKey(value){return this.inverse.get(value)}delete(key){const value=this.map.get(key);return void 0!==value&&(this.map.delete(key),this.inverse.delete(value),!0)}}class DefaultScopeComputation{constructor(services){this.nameProvider=services.references.NameProvider,this.descriptions=services.workspace.AstNodeDescriptionProvider}async computeExports(document,cancelToken=cancellation.XO.None){return this.computeExportsForNode(document.parseResult.value,document,void 0,cancelToken)}async computeExportsForNode(parentNode,document,children=ast_utils.VN,cancelToken=cancellation.XO.None){const exports=[];this.exportNode(parentNode,exports,document);for(const node of children(parentNode))await interruptAndCheck(cancelToken),this.exportNode(node,exports,document);return exports}exportNode(node,exports,document){const name=this.nameProvider.getName(node);name&&exports.push(this.descriptions.createDescription(node,name,document))}async computeLocalScopes(document,cancelToken=cancellation.XO.None){const rootNode=document.parseResult.value,scopes=new MultiMap;for(const node of(0,ast_utils.Uo)(rootNode))await interruptAndCheck(cancelToken),this.processNode(node,document,scopes);return scopes}processNode(node,document,scopes){const container=node.$container;if(container){const name=this.nameProvider.getName(node);name&&scopes.add(container,this.descriptions.createDescription(node,name,document))}}}class StreamScope{constructor(elements,outerScope,options){var _a;this.elements=elements,this.outerScope=outerScope,this.caseInsensitive=null!==(_a=null==options?void 0:options.caseInsensitive)&&void 0!==_a&&_a}getAllElements(){return this.outerScope?this.elements.concat(this.outerScope.getAllElements()):this.elements}getElement(name){const local=this.caseInsensitive?this.elements.find(e=>e.name.toLowerCase()===name.toLowerCase()):this.elements.find(e=>e.name===name);return local||(this.outerScope?this.outerScope.getElement(name):void 0)}}class MapScope{constructor(elements,outerScope,options){var _a;this.elements=new Map,this.caseInsensitive=null!==(_a=null==options?void 0:options.caseInsensitive)&&void 0!==_a&&_a;for(const element of elements){const name=this.caseInsensitive?element.name.toLowerCase():element.name;this.elements.set(name,element)}this.outerScope=outerScope}getElement(name){const localName=this.caseInsensitive?name.toLowerCase():name,local=this.elements.get(localName);return local||(this.outerScope?this.outerScope.getElement(name):void 0)}getAllElements(){let elementStream=(0,stream.Td)(this.elements.values());return this.outerScope&&(elementStream=elementStream.concat(this.outerScope.getAllElements())),elementStream}}class DisposableCache{constructor(){this.toDispose=[],this.isDisposed=!1}onDispose(disposable){this.toDispose.push(disposable)}dispose(){this.throwIfDisposed(),this.clear(),this.isDisposed=!0,this.toDispose.forEach(disposable=>disposable.dispose())}throwIfDisposed(){if(this.isDisposed)throw new Error("This cache has already been disposed")}}class SimpleCache extends DisposableCache{constructor(){super(...arguments),this.cache=new Map}has(key){return this.throwIfDisposed(),this.cache.has(key)}set(key,value){this.throwIfDisposed(),this.cache.set(key,value)}get(key,provider){if(this.throwIfDisposed(),this.cache.has(key))return this.cache.get(key);if(provider){const value=provider();return this.cache.set(key,value),value}}delete(key){return this.throwIfDisposed(),this.cache.delete(key)}clear(){this.throwIfDisposed(),this.cache.clear()}}class ContextCache extends DisposableCache{constructor(converter){super(),this.cache=new Map,this.converter=null!=converter?converter:value=>value}has(contextKey,key){return this.throwIfDisposed(),this.cacheForContext(contextKey).has(key)}set(contextKey,key,value){this.throwIfDisposed(),this.cacheForContext(contextKey).set(key,value)}get(contextKey,key,provider){this.throwIfDisposed();const contextCache=this.cacheForContext(contextKey);if(contextCache.has(key))return contextCache.get(key);if(provider){const value=provider();return contextCache.set(key,value),value}}delete(contextKey,key){return this.throwIfDisposed(),this.cacheForContext(contextKey).delete(key)}clear(contextKey){if(this.throwIfDisposed(),contextKey){const mapKey=this.converter(contextKey);this.cache.delete(mapKey)}else this.cache.clear()}cacheForContext(contextKey){const mapKey=this.converter(contextKey);let documentCache=this.cache.get(mapKey);return documentCache||(documentCache=new Map,this.cache.set(mapKey,documentCache)),documentCache}}class WorkspaceCache extends SimpleCache{constructor(sharedServices,state){super(),state?(this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state,()=>{this.clear()})),this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed,deleted)=>{deleted.length>0&&this.clear()}))):this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(()=>{this.clear()}))}}class DefaultScopeProvider{constructor(services){this.reflection=services.shared.AstReflection,this.nameProvider=services.references.NameProvider,this.descriptions=services.workspace.AstNodeDescriptionProvider,this.indexManager=services.shared.workspace.IndexManager,this.globalScopeCache=new WorkspaceCache(services.shared)}getScope(context){const scopes=[],referenceType=this.reflection.getReferenceType(context),precomputed=(0,ast_utils.YE)(context.container).precomputedScopes;if(precomputed){let currentNode=context.container;do{const allDescriptions=precomputed.get(currentNode);allDescriptions.length>0&&scopes.push((0,stream.Td)(allDescriptions).filter(desc=>this.reflection.isSubtype(desc.type,referenceType))),currentNode=currentNode.$container}while(currentNode)}let result=this.getGlobalScope(referenceType,context);for(let i=scopes.length-1;i>=0;i--)result=this.createScope(scopes[i],result);return result}createScope(elements,outerScope,options){return new StreamScope((0,stream.Td)(elements),outerScope,options)}createScopeForNodes(elements,outerScope,options){const s=(0,stream.Td)(elements).map(e=>{const name=this.nameProvider.getName(e);if(name)return this.descriptions.createDescription(e,name)}).nonNullable();return new StreamScope(s,outerScope,options)}getGlobalScope(referenceType,_context){return this.globalScopeCache.get(referenceType,()=>new MapScope(this.indexManager.allElements(referenceType)))}}function isIntermediateReference(obj){return"object"==typeof obj&&!!obj&&("$ref"in obj||"$error"in obj)}class DefaultJsonSerializer{constructor(services){this.ignoreProperties=new Set(["$container","$containerProperty","$containerIndex","$document","$cstNode"]),this.langiumDocuments=services.shared.workspace.LangiumDocuments,this.astNodeLocator=services.workspace.AstNodeLocator,this.nameProvider=services.references.NameProvider,this.commentProvider=services.documentation.CommentProvider}serialize(node,options){const serializeOptions=null!=options?options:{},specificReplacer=null==options?void 0:options.replacer,defaultReplacer=(key,value)=>this.replacer(key,value,serializeOptions),replacer=specificReplacer?(key,value)=>specificReplacer(key,value,defaultReplacer):defaultReplacer;try{return this.currentDocument=(0,ast_utils.YE)(node),JSON.stringify(node,replacer,null==options?void 0:options.space)}finally{this.currentDocument=void 0}}deserialize(content,options){const deserializeOptions=null!=options?options:{},root=JSON.parse(content);return this.linkNode(root,root,deserializeOptions),root}replacer(key,value,{refText,sourceText,textRegions,comments,uriConverter}){var _a,_b,_c,_d;if(!this.ignoreProperties.has(key)){if((0,syntax_tree.A_)(value)){const refValue=value.ref,$refText=refText?value.$refText:void 0;if(refValue){const targetDocument=(0,ast_utils.YE)(refValue);let targetUri="";this.currentDocument&&this.currentDocument!==targetDocument&&(targetUri=uriConverter?uriConverter(targetDocument.uri,value):targetDocument.uri.toString());return{$ref:`${targetUri}#${this.astNodeLocator.getAstNodePath(refValue)}`,$refText}}return{$error:null!==(_b=null===(_a=value.error)||void 0===_a?void 0:_a.message)&&void 0!==_b?_b:"Could not resolve reference",$refText}}if((0,syntax_tree.ng)(value)){let astNode;if(textRegions&&(astNode=this.addAstNodeRegionWithAssignmentsTo(Object.assign({},value)),key&&!value.$document||!(null==astNode?void 0:astNode.$textRegion)||(astNode.$textRegion.documentURI=null===(_c=this.currentDocument)||void 0===_c?void 0:_c.uri.toString())),sourceText&&!key&&(null!=astNode||(astNode=Object.assign({},value)),astNode.$sourceText=null===(_d=value.$cstNode)||void 0===_d?void 0:_d.text),comments){null!=astNode||(astNode=Object.assign({},value));const comment=this.commentProvider.getComment(value);comment&&(astNode.$comment=comment.replace(/\r/g,""))}return null!=astNode?astNode:value}return value}}addAstNodeRegionWithAssignmentsTo(node){const createDocumentSegment=cstNode=>({offset:cstNode.offset,end:cstNode.end,length:cstNode.length,range:cstNode.range});if(node.$cstNode){const assignments=(node.$textRegion=createDocumentSegment(node.$cstNode)).assignments={};return Object.keys(node).filter(key=>!key.startsWith("$")).forEach(key=>{const propertyAssignments=(0,grammar_utils.Bd)(node.$cstNode,key).map(createDocumentSegment);0!==propertyAssignments.length&&(assignments[key]=propertyAssignments)}),node}}linkNode(node,root,options,container,containerProperty,containerIndex){for(const[propertyName,item]of Object.entries(node))if(Array.isArray(item))for(let index=0;index<item.length;index++){const element=item[index];isIntermediateReference(element)?item[index]=this.reviveReference(node,propertyName,root,element,options):(0,syntax_tree.ng)(element)&&this.linkNode(element,root,options,node,propertyName,index)}else isIntermediateReference(item)?node[propertyName]=this.reviveReference(node,propertyName,root,item,options):(0,syntax_tree.ng)(item)&&this.linkNode(item,root,options,node,propertyName);const mutable=node;mutable.$container=container,mutable.$containerProperty=containerProperty,mutable.$containerIndex=containerIndex}reviveReference(container,property,root,reference,options){let refText=reference.$refText,error=reference.$error;if(reference.$ref){const ref=this.getRefNode(root,reference.$ref,options.uriConverter);if((0,syntax_tree.ng)(ref))return refText||(refText=this.nameProvider.getName(ref)),{$refText:null!=refText?refText:"",ref};error=ref}if(error){const ref={$refText:null!=refText?refText:""};return ref.error={container,property,message:error,reference:ref},ref}}getRefNode(root,uri,uriConverter){try{const fragmentIndex=uri.indexOf("#");if(0===fragmentIndex){const node=this.astNodeLocator.getAstNode(root,uri.substring(1));return node||"Could not resolve path: "+uri}if(fragmentIndex<0){const documentUri=uriConverter?uriConverter(uri):esm.r.parse(uri),document=this.langiumDocuments.getDocument(documentUri);return document?document.parseResult.value:"Could not find document for URI: "+uri}const documentUri=uriConverter?uriConverter(uri.substring(0,fragmentIndex)):esm.r.parse(uri.substring(0,fragmentIndex)),document=this.langiumDocuments.getDocument(documentUri);if(!document)return"Could not find document for URI: "+uri;if(fragmentIndex===uri.length-1)return document.parseResult.value;const node=this.astNodeLocator.getAstNode(document.parseResult.value,uri.substring(fragmentIndex+1));return node||"Could not resolve URI: "+uri}catch(err){return String(err)}}}class DefaultServiceRegistry{get map(){return this.fileExtensionMap}constructor(services){this.languageIdMap=new Map,this.fileExtensionMap=new Map,this.textDocuments=null==services?void 0:services.workspace.TextDocuments}register(language){const data=language.LanguageMetaData;for(const ext of data.fileExtensions)this.fileExtensionMap.has(ext)&&console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`),this.fileExtensionMap.set(ext,language);this.languageIdMap.set(data.languageId,language),1===this.languageIdMap.size?this.singleton=language:this.singleton=void 0}getServices(uri){var _a,_b;if(void 0!==this.singleton)return this.singleton;if(0===this.languageIdMap.size)throw new Error("The service registry is empty. Use `register` to register the services of a language.");const languageId=null===(_b=null===(_a=this.textDocuments)||void 0===_a?void 0:_a.get(uri))||void 0===_b?void 0:_b.languageId;if(void 0!==languageId){const services=this.languageIdMap.get(languageId);if(services)return services}const ext=UriUtils.extname(uri),services=this.fileExtensionMap.get(ext);if(!services)throw languageId?new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`):new Error(`The service registry contains no services for the extension '${ext}'.`);return services}hasServices(uri){try{return this.getServices(uri),!0}catch(_a){return!1}}get all(){return Array.from(this.languageIdMap.values())}}function diagnosticData(code){return{code}}var ValidationCategory,DocumentValidator;!function(ValidationCategory){ValidationCategory.all=["fast","slow","built-in"]}(ValidationCategory||(ValidationCategory={}));class ValidationRegistry{constructor(services){this.entries=new MultiMap,this.entriesBefore=[],this.entriesAfter=[],this.reflection=services.shared.AstReflection}register(checksRecord,thisObj=this,category="fast"){if("built-in"===category)throw new Error("The 'built-in' category is reserved for lexer, parser, and linker errors.");for(const[type,ch]of Object.entries(checksRecord)){const callbacks=ch;if(Array.isArray(callbacks))for(const check of callbacks){const entry={check:this.wrapValidationException(check,thisObj),category};this.addEntry(type,entry)}else if("function"==typeof callbacks){const entry={check:this.wrapValidationException(callbacks,thisObj),category};this.addEntry(type,entry)}else(0,errors.d)(callbacks)}}wrapValidationException(check,thisObj){return async(node,accept,cancelToken)=>{await this.handleException(()=>check.call(thisObj,node,accept,cancelToken),"An error occurred during validation",accept,node)}}async handleException(functionality,messageContext,accept,node){try{await functionality()}catch(err){if(isOperationCancelled(err))throw err;console.error(`${messageContext}:`,err),err instanceof Error&&err.stack&&console.error(err.stack);accept("error",`${messageContext}: ${err instanceof Error?err.message:String(err)}`,{node})}}addEntry(type,entry){if("AstNode"!==type)for(const subtype of this.reflection.getAllSubTypes(type))this.entries.add(subtype,entry);else this.entries.add("AstNode",entry)}getChecks(type,categories){let checks=(0,stream.Td)(this.entries.get(type)).concat(this.entries.get("AstNode"));return categories&&(checks=checks.filter(entry=>categories.includes(entry.category))),checks.map(entry=>entry.check)}registerBeforeDocument(checkBefore,thisObj=this){this.entriesBefore.push(this.wrapPreparationException(checkBefore,"An error occurred during set-up of the validation",thisObj))}registerAfterDocument(checkAfter,thisObj=this){this.entriesAfter.push(this.wrapPreparationException(checkAfter,"An error occurred during tear-down of the validation",thisObj))}wrapPreparationException(check,messageContext,thisObj){return async(rootNode,accept,categories,cancelToken)=>{await this.handleException(()=>check.call(thisObj,rootNode,accept,categories,cancelToken),messageContext,accept,rootNode)}}get checksBefore(){return this.entriesBefore}get checksAfter(){return this.entriesAfter}}class DefaultDocumentValidator{constructor(services){this.validationRegistry=services.validation.ValidationRegistry,this.metadata=services.LanguageMetaData}async validateDocument(document,options={},cancelToken=cancellation.XO.None){const parseResult=document.parseResult,diagnostics=[];if(await interruptAndCheck(cancelToken),!options.categories||options.categories.includes("built-in")){if(this.processLexingErrors(parseResult,diagnostics,options),options.stopAfterLexingErrors&&diagnostics.some(d=>{var _a;return(null===(_a=d.data)||void 0===_a?void 0:_a.code)===DocumentValidator.LexingError}))return diagnostics;if(this.processParsingErrors(parseResult,diagnostics,options),options.stopAfterParsingErrors&&diagnostics.some(d=>{var _a;return(null===(_a=d.data)||void 0===_a?void 0:_a.code)===DocumentValidator.ParsingError}))return diagnostics;if(this.processLinkingErrors(document,diagnostics,options),options.stopAfterLinkingErrors&&diagnostics.some(d=>{var _a;return(null===(_a=d.data)||void 0===_a?void 0:_a.code)===DocumentValidator.LinkingError}))return diagnostics}try{diagnostics.push(...await this.validateAst(parseResult.value,options,cancelToken))}catch(err){if(isOperationCancelled(err))throw err;console.error("An error occurred during validation:",err)}return await interruptAndCheck(cancelToken),diagnostics}processLexingErrors(parseResult,diagnostics,_options){var _a,_b,_c;const lexerDiagnostics=[...parseResult.lexerErrors,...null!==(_b=null===(_a=parseResult.lexerReport)||void 0===_a?void 0:_a.diagnostics)&&void 0!==_b?_b:[]];for(const lexerDiagnostic of lexerDiagnostics){const severity=null!==(_c=lexerDiagnostic.severity)&&void 0!==_c?_c:"error",diagnostic={severity:toDiagnosticSeverity(severity),range:{start:{line:lexerDiagnostic.line-1,character:lexerDiagnostic.column-1},end:{line:lexerDiagnostic.line-1,character:lexerDiagnostic.column+lexerDiagnostic.length-1}},message:lexerDiagnostic.message,data:toDiagnosticData(severity),source:this.getSource()};diagnostics.push(diagnostic)}}processParsingErrors(parseResult,diagnostics,_options){for(const parserError of parseResult.parserErrors){let range;if(isNaN(parserError.token.startOffset)){if("previousToken"in parserError){const token=parserError.previousToken;if(isNaN(token.startOffset)){const position={line:0,character:0};range={start:position,end:position}}else{const position={line:token.endLine-1,character:token.endColumn};range={start:position,end:position}}}}else range=(0,cst_utils.wf)(parserError.token);if(range){const diagnostic={severity:toDiagnosticSeverity("error"),range,message:parserError.message,data:diagnosticData(DocumentValidator.ParsingError),source:this.getSource()};diagnostics.push(diagnostic)}}}processLinkingErrors(document,diagnostics,_options){for(const reference of document.references){const linkingError=reference.error;if(linkingError){const info={node:linkingError.container,property:linkingError.property,index:linkingError.index,data:{code:DocumentValidator.LinkingError,containerType:linkingError.container.$type,property:linkingError.property,refText:linkingError.reference.$refText}};diagnostics.push(this.toDiagnostic("error",linkingError.message,info))}}}async validateAst(rootNode,options,cancelToken=cancellation.XO.None){const validationItems=[],acceptor=(severity,message,info)=>{validationItems.push(this.toDiagnostic(severity,message,info))};return await this.validateAstBefore(rootNode,options,acceptor,cancelToken),await this.validateAstNodes(rootNode,options,acceptor,cancelToken),await this.validateAstAfter(rootNode,options,acceptor,cancelToken),validationItems}async validateAstBefore(rootNode,options,acceptor,cancelToken=cancellation.XO.None){var _a;const checksBefore=this.validationRegistry.checksBefore;for(const checkBefore of checksBefore)await interruptAndCheck(cancelToken),await checkBefore(rootNode,acceptor,null!==(_a=options.categories)&&void 0!==_a?_a:[],cancelToken)}async validateAstNodes(rootNode,options,acceptor,cancelToken=cancellation.XO.None){await Promise.all((0,ast_utils.jm)(rootNode).map(async node=>{await interruptAndCheck(cancelToken);const checks=this.validationRegistry.getChecks(node.$type,options.categories);for(const check of checks)await check(node,acceptor,cancelToken)}))}async validateAstAfter(rootNode,options,acceptor,cancelToken=cancellation.XO.None){var _a;const checksAfter=this.validationRegistry.checksAfter;for(const checkAfter of checksAfter)await interruptAndCheck(cancelToken),await checkAfter(rootNode,acceptor,null!==(_a=options.categories)&&void 0!==_a?_a:[],cancelToken)}toDiagnostic(severity,message,info){return{message,range:getDiagnosticRange(info),severity:toDiagnosticSeverity(severity),code:info.code,codeDescription:info.codeDescription,tags:info.tags,relatedInformation:info.relatedInformation,data:info.data,source:this.getSource()}}getSource(){return this.metadata.languageId}}function getDiagnosticRange(info){if(info.range)return info.range;let cstNode;return"string"==typeof info.property?cstNode=(0,grammar_utils.qO)(info.node.$cstNode,info.property,info.index):"string"==typeof info.keyword&&(cstNode=(0,grammar_utils.SS)(info.node.$cstNode,info.keyword,info.index)),null!=cstNode||(cstNode=info.node.$cstNode),cstNode?cstNode.range:{start:{line:0,character:0},end:{line:0,character:0}}}function toDiagnosticSeverity(severity){switch(severity){case"error":return 1;case"warning":return 2;case"info":return 3;case"hint":return 4;default:throw new Error("Invalid diagnostic severity: "+severity)}}function toDiagnosticData(severity){switch(severity){case"error":return diagnosticData(DocumentValidator.LexingError);case"warning":return diagnosticData(DocumentValidator.LexingWarning);case"info":return diagnosticData(DocumentValidator.LexingInfo);case"hint":return diagnosticData(DocumentValidator.LexingHint);default:throw new Error("Invalid diagnostic severity: "+severity)}}!function(DocumentValidator){DocumentValidator.LexingError="lexing-error",DocumentValidator.LexingWarning="lexing-warning",DocumentValidator.LexingInfo="lexing-info",DocumentValidator.LexingHint="lexing-hint",DocumentValidator.ParsingError="parsing-error",DocumentValidator.LinkingError="linking-error"}(DocumentValidator||(DocumentValidator={}));class DefaultAstNodeDescriptionProvider{constructor(services){this.astNodeLocator=services.workspace.AstNodeLocator,this.nameProvider=services.references.NameProvider}createDescription(node,name,document){const doc=null!=document?document:(0,ast_utils.YE)(node);null!=name||(name=this.nameProvider.getName(node));const path=this.astNodeLocator.getAstNodePath(node);if(!name)throw new Error(`Node at path ${path} has no name.`);let nameNodeSegment;const nameSegmentGetter=()=>{var _a;return null!=nameNodeSegment?nameNodeSegment:nameNodeSegment=(0,cst_utils.SX)(null!==(_a=this.nameProvider.getNameNode(node))&&void 0!==_a?_a:node.$cstNode)};return{node,name,get nameSegment(){return nameSegmentGetter()},selectionSegment:(0,cst_utils.SX)(node.$cstNode),type:node.$type,documentUri:doc.uri,path}}}class DefaultReferenceDescriptionProvider{constructor(services){this.nodeLocator=services.workspace.AstNodeLocator}async createDescriptions(document,cancelToken=cancellation.XO.None){const descr=[],rootNode=document.parseResult.value;for(const astNode of(0,ast_utils.jm)(rootNode))await interruptAndCheck(cancelToken),(0,ast_utils.DM)(astNode).filter(refInfo=>!(0,syntax_tree.Zl)(refInfo)).forEach(refInfo=>{const description=this.createDescription(refInfo);description&&descr.push(description)});return descr}createDescription(refInfo){const targetNodeDescr=refInfo.reference.$nodeDescription,refCstNode=refInfo.reference.$refNode;if(!targetNodeDescr||!refCstNode)return;const docUri=(0,ast_utils.YE)(refInfo.container).uri;return{sourceUri:docUri,sourcePath:this.nodeLocator.getAstNodePath(refInfo.container),targetUri:targetNodeDescr.documentUri,targetPath:targetNodeDescr.path,segment:(0,cst_utils.SX)(refCstNode),local:UriUtils.equals(targetNodeDescr.documentUri,docUri)}}}class DefaultAstNodeLocator{constructor(){this.segmentSeparator="/",this.indexSeparator="@"}getAstNodePath(node){if(node.$container){const containerPath=this.getAstNodePath(node.$container),newSegment=this.getPathSegment(node);return containerPath+this.segmentSeparator+newSegment}return""}getPathSegment({$containerProperty,$containerIndex}){if(!$containerProperty)throw new Error("Missing '$containerProperty' in AST node.");return void 0!==$containerIndex?$containerProperty+this.indexSeparator+$containerIndex:$containerProperty}getAstNode(node,path){return path.split(this.segmentSeparator).reduce((previousValue,currentValue)=>{if(!previousValue||0===currentValue.length)return previousValue;const propertyIndex=currentValue.indexOf(this.indexSeparator);if(propertyIndex>0){const property=currentValue.substring(0,propertyIndex),arrayIndex=parseInt(currentValue.substring(propertyIndex+1)),array=previousValue[property];return null==array?void 0:array[arrayIndex]}return previousValue[currentValue]},node)}}var Disposable,events=__webpack_require__("./node_modules/vscode-jsonrpc/lib/common/events.js");class DefaultConfigurationProvider{constructor(services){this._ready=new promise_utils_Deferred,this.settings={},this.workspaceConfig=!1,this.onConfigurationSectionUpdateEmitter=new events.Emitter,this.serviceRegistry=services.ServiceRegistry}get ready(){return this._ready.promise}initialize(params){var _a,_b;this.workspaceConfig=null!==(_b=null===(_a=params.capabilities.workspace)||void 0===_a?void 0:_a.configuration)&&void 0!==_b&&_b}async initialized(params){if(this.workspaceConfig){if(params.register){const languages=this.serviceRegistry.all;params.register({section:languages.map(lang=>this.toSectionName(lang.LanguageMetaData.languageId))})}if(params.fetchConfiguration){const configToUpdate=this.serviceRegistry.all.map(lang=>({section:this.toSectionName(lang.LanguageMetaData.languageId)})),configs=await params.fetchConfiguration(configToUpdate);configToUpdate.forEach((conf,idx)=>{this.updateSectionConfiguration(conf.section,configs[idx])})}}this._ready.resolve()}updateConfiguration(change){change.settings&&Object.keys(change.settings).forEach(section=>{const configuration=change.settings[section];this.updateSectionConfiguration(section,configuration),this.onConfigurationSectionUpdateEmitter.fire({section,configuration})})}updateSectionConfiguration(section,configuration){this.settings[section]=configuration}async getConfiguration(language,configuration){await this.ready;const sectionName=this.toSectionName(language);if(this.settings[sectionName])return this.settings[sectionName][configuration]}toSectionName(languageId){return`${languageId}`}get onConfigurationSectionUpdate(){return this.onConfigurationSectionUpdateEmitter.event}}!function(Disposable){Disposable.create=function create(callback){return{dispose:async()=>await callback()}}}(Disposable||(Disposable={}));class DefaultDocumentBuilder{constructor(services){this.updateBuildOptions={validation:{categories:["built-in","fast"]}},this.updateListeners=[],this.buildPhaseListeners=new MultiMap,this.documentPhaseListeners=new MultiMap,this.buildState=new Map,this.documentBuildWaiters=new Map,this.currentState=DocumentState.Changed,this.langiumDocuments=services.workspace.LangiumDocuments,this.langiumDocumentFactory=services.workspace.LangiumDocumentFactory,this.textDocuments=services.workspace.TextDocuments,this.indexManager=services.workspace.IndexManager,this.serviceRegistry=services.ServiceRegistry}async build(documents,options={},cancelToken=cancellation.XO.None){var _a,_b;for(const document of documents){const key=document.uri.toString();if(document.state===DocumentState.Validated){if("boolean"==typeof options.validation&&options.validation)document.state=DocumentState.IndexedReferences,document.diagnostics=void 0,this.buildState.delete(key);else if("object"==typeof options.validation){const buildState=this.buildState.get(key),previousCategories=null===(_a=null==buildState?void 0:buildState.result)||void 0===_a?void 0:_a.validationChecks;if(previousCategories){const categories=(null!==(_b=options.validation.categories)&&void 0!==_b?_b:ValidationCategory.all).filter(c=>!previousCategories.includes(c));categories.length>0&&(this.buildState.set(key,{completed:!1,options:{validation:Object.assign(Object.assign({},options.validation),{categories})},result:buildState.result}),document.state=DocumentState.IndexedReferences)}}}else this.buildState.delete(key)}this.currentState=DocumentState.Changed,await this.emitUpdate(documents.map(e=>e.uri),[]),await this.buildDocuments(documents,options,cancelToken)}async update(changed,deleted,cancelToken=cancellation.XO.None){this.currentState=DocumentState.Changed;for(const deletedUri of deleted)this.langiumDocuments.deleteDocument(deletedUri),this.buildState.delete(deletedUri.toString()),this.indexManager.remove(deletedUri);for(const changedUri of changed){if(!this.langiumDocuments.invalidateDocument(changedUri)){const newDocument=this.langiumDocumentFactory.fromModel({$type:"INVALID"},changedUri);newDocument.state=DocumentState.Changed,this.langiumDocuments.addDocument(newDocument)}this.buildState.delete(changedUri.toString())}const allChangedUris=(0,stream.Td)(changed).concat(deleted).map(uri=>uri.toString()).toSet();this.langiumDocuments.all.filter(doc=>!allChangedUris.has(doc.uri.toString())&&this.shouldRelink(doc,allChangedUris)).forEach(doc=>{this.serviceRegistry.getServices(doc.uri).references.Linker.unlink(doc),doc.state=Math.min(doc.state,DocumentState.ComputedScopes),doc.diagnostics=void 0}),await this.emitUpdate(changed,deleted),await interruptAndCheck(cancelToken);const rebuildDocuments=this.sortDocuments(this.langiumDocuments.all.filter(doc=>{var _a;return doc.state<DocumentState.Linked||!(null===(_a=this.buildState.get(doc.uri.toString()))||void 0===_a?void 0:_a.completed)}).toArray());await this.buildDocuments(rebuildDocuments,this.updateBuildOptions,cancelToken)}async emitUpdate(changed,deleted){await Promise.all(this.updateListeners.map(listener=>listener(changed,deleted)))}sortDocuments(documents){let left=0,right=documents.length-1;for(;left<right;){for(;left<documents.length&&this.hasTextDocument(documents[left]);)left++;for(;right>=0&&!this.hasTextDocument(documents[right]);)right--;left<right&&([documents[left],documents[right]]=[documents[right],documents[left]])}return documents}hasTextDocument(doc){var _a;return Boolean(null===(_a=this.textDocuments)||void 0===_a?void 0:_a.get(doc.uri))}shouldRelink(document,changedUris){return!!document.references.some(ref=>void 0!==ref.error)||this.indexManager.isAffected(document,changedUris)}onUpdate(callback){return this.updateListeners.push(callback),Disposable.create(()=>{const index=this.updateListeners.indexOf(callback);index>=0&&this.updateListeners.splice(index,1)})}async buildDocuments(documents,options,cancelToken){this.prepareBuild(documents,options),await this.runCancelable(documents,DocumentState.Parsed,cancelToken,doc=>this.langiumDocumentFactory.update(doc,cancelToken)),await this.runCancelable(documents,DocumentState.IndexedContent,cancelToken,doc=>this.indexManager.updateContent(doc,cancelToken)),await this.runCancelable(documents,DocumentState.ComputedScopes,cancelToken,async doc=>{const scopeComputation=this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;doc.precomputedScopes=await scopeComputation.computeLocalScopes(doc,cancelToken)}),await this.runCancelable(documents,DocumentState.Linked,cancelToken,doc=>this.serviceRegistry.getServices(doc.uri).references.Linker.link(doc,cancelToken)),await this.runCancelable(documents,DocumentState.IndexedReferences,cancelToken,doc=>this.indexManager.updateReferences(doc,cancelToken));const toBeValidated=documents.filter(doc=>this.shouldValidate(doc));await this.runCancelable(toBeValidated,DocumentState.Validated,cancelToken,doc=>this.validate(doc,cancelToken));for(const doc of documents){const state=this.buildState.get(doc.uri.toString());state&&(state.completed=!0)}}prepareBuild(documents,options){for(const doc of documents){const key=doc.uri.toString(),state=this.buildState.get(key);state&&!state.completed||this.buildState.set(key,{completed:!1,options,result:null==state?void 0:state.result})}}async runCancelable(documents,targetState,cancelToken,callback){const filtered=documents.filter(doc=>doc.state<targetState);for(const document of filtered)await interruptAndCheck(cancelToken),await callback(document),document.state=targetState,await this.notifyDocumentPhase(document,targetState,cancelToken);const targetStateDocs=documents.filter(doc=>doc.state===targetState);await this.notifyBuildPhase(targetStateDocs,targetState,cancelToken),this.currentState=targetState}onBuildPhase(targetState,callback){return this.buildPhaseListeners.add(targetState,callback),Disposable.create(()=>{this.buildPhaseListeners.delete(targetState,callback)})}onDocumentPhase(targetState,callback){return this.documentPhaseListeners.add(targetState,callback),Disposable.create(()=>{this.documentPhaseListeners.delete(targetState,callback)})}waitUntil(state,uriOrToken,cancelToken){let uri;if(uriOrToken&&"path"in uriOrToken?uri=uriOrToken:cancelToken=uriOrToken,null!=cancelToken||(cancelToken=cancellation.XO.None),uri){const document=this.langiumDocuments.getDocument(uri);if(document&&document.state>state)return Promise.resolve(uri)}return this.currentState>=state?Promise.resolve(void 0):cancelToken.isCancellationRequested?Promise.reject(promise_utils_OperationCancelled):new Promise((resolve,reject)=>{const buildDisposable=this.onBuildPhase(state,()=>{if(buildDisposable.dispose(),cancelDisposable.dispose(),uri){const document=this.langiumDocuments.getDocument(uri);resolve(null==document?void 0:document.uri)}else resolve(void 0)}),cancelDisposable=cancelToken.onCancellationRequested(()=>{buildDisposable.dispose(),cancelDisposable.dispose(),reject(promise_utils_OperationCancelled)})})}async notifyDocumentPhase(document,state,cancelToken){const listenersCopy=this.documentPhaseListeners.get(state).slice();for(const listener of listenersCopy)try{await listener(document,cancelToken)}catch(err){if(!isOperationCancelled(err))throw err}}async notifyBuildPhase(documents,state,cancelToken){if(0===documents.length)return;const listenersCopy=this.buildPhaseListeners.get(state).slice();for(const listener of listenersCopy)await interruptAndCheck(cancelToken),await listener(documents,cancelToken)}shouldValidate(document){return Boolean(this.getBuildOptions(document).validation)}async validate(document,cancelToken){var _a,_b;const validator=this.serviceRegistry.getServices(document.uri).validation.DocumentValidator,validationSetting=this.getBuildOptions(document).validation,options="object"==typeof validationSetting?validationSetting:void 0,diagnostics=await validator.validateDocument(document,options,cancelToken);document.diagnostics?document.diagnostics.push(...diagnostics):document.diagnostics=diagnostics;const state=this.buildState.get(document.uri.toString());if(state){null!==(_a=state.result)&&void 0!==_a||(state.result={});const newCategories=null!==(_b=null==options?void 0:options.categories)&&void 0!==_b?_b:ValidationCategory.all;state.result.validationChecks?state.result.validationChecks.push(...newCategories):state.result.validationChecks=[...newCategories]}}getBuildOptions(document){var _a,_b;return null!==(_b=null===(_a=this.buildState.get(document.uri.toString()))||void 0===_a?void 0:_a.options)&&void 0!==_b?_b:{}}}class DefaultIndexManager{constructor(services){this.symbolIndex=new Map,this.symbolByTypeIndex=new ContextCache,this.referenceIndex=new Map,this.documents=services.workspace.LangiumDocuments,this.serviceRegistry=services.ServiceRegistry,this.astReflection=services.AstReflection}findAllReferences(targetNode,astNodePath){const targetDocUri=(0,ast_utils.YE)(targetNode).uri,result=[];return this.referenceIndex.forEach(docRefs=>{docRefs.forEach(refDescr=>{UriUtils.equals(refDescr.targetUri,targetDocUri)&&refDescr.targetPath===astNodePath&&result.push(refDescr)})}),(0,stream.Td)(result)}allElements(nodeType,uris){let documentUris=(0,stream.Td)(this.symbolIndex.keys());return uris&&(documentUris=documentUris.filter(uri=>!uris||uris.has(uri))),documentUris.map(uri=>this.getFileDescriptions(uri,nodeType)).flat()}getFileDescriptions(uri,nodeType){var _a;if(!nodeType)return null!==(_a=this.symbolIndex.get(uri))&&void 0!==_a?_a:[];const descriptions=this.symbolByTypeIndex.get(uri,nodeType,()=>{var _a;return(null!==(_a=this.symbolIndex.get(uri))&&void 0!==_a?_a:[]).filter(e=>this.astReflection.isSubtype(e.type,nodeType))});return descriptions}remove(uri){const uriString=uri.toString();this.symbolIndex.delete(uriString),this.symbolByTypeIndex.clear(uriString),this.referenceIndex.delete(uriString)}async updateContent(document,cancelToken=cancellation.XO.None){const services=this.serviceRegistry.getServices(document.uri),exports=await services.references.ScopeComputation.computeExports(document,cancelToken),uri=document.uri.toString();this.symbolIndex.set(uri,exports),this.symbolByTypeIndex.clear(uri)}async updateReferences(document,cancelToken=cancellation.XO.None){const services=this.serviceRegistry.getServices(document.uri),indexData=await services.workspace.ReferenceDescriptionProvider.createDescriptions(document,cancelToken);this.referenceIndex.set(document.uri.toString(),indexData)}isAffected(document,changedUris){const references=this.referenceIndex.get(document.uri.toString());return!!references&&references.some(ref=>!ref.local&&changedUris.has(ref.targetUri.toString()))}}class DefaultWorkspaceManager{constructor(services){this.initialBuildOptions={},this._ready=new promise_utils_Deferred,this.serviceRegistry=services.ServiceRegistry,this.langiumDocuments=services.workspace.LangiumDocuments,this.documentBuilder=services.workspace.DocumentBuilder,this.fileSystemProvider=services.workspace.FileSystemProvider,this.mutex=services.workspace.WorkspaceLock}get ready(){return this._ready.promise}get workspaceFolders(){return this.folders}initialize(params){var _a;this.folders=null!==(_a=params.workspaceFolders)&&void 0!==_a?_a:void 0}initialized(_params){return this.mutex.write(token=>{var _a;return this.initializeWorkspace(null!==(_a=this.folders)&&void 0!==_a?_a:[],token)})}async initializeWorkspace(folders,cancelToken=cancellation.XO.None){const documents=await this.performStartup(folders);await interruptAndCheck(cancelToken),await this.documentBuilder.build(documents,this.initialBuildOptions,cancelToken)}async performStartup(folders){const fileExtensions=this.serviceRegistry.all.flatMap(e=>e.LanguageMetaData.fileExtensions),documents=[],collector=document=>{documents.push(document),this.langiumDocuments.hasDocument(document.uri)||this.langiumDocuments.addDocument(document)};return await this.loadAdditionalDocuments(folders,collector),await Promise.all(folders.map(wf=>[wf,this.getRootFolder(wf)]).map(async entry=>this.traverseFolder(...entry,fileExtensions,collector))),this._ready.resolve(),documents}loadAdditionalDocuments(_folders,_collector){return Promise.resolve()}getRootFolder(workspaceFolder){return esm.r.parse(workspaceFolder.uri)}async traverseFolder(workspaceFolder,folderPath,fileExtensions,collector){const content=await this.fileSystemProvider.readDirectory(folderPath);await Promise.all(content.map(async entry=>{if(this.includeEntry(workspaceFolder,entry,fileExtensions))if(entry.isDirectory)await this.traverseFolder(workspaceFolder,entry.uri,fileExtensions,collector);else if(entry.isFile){const document=await this.langiumDocuments.getOrCreateDocument(entry.uri);collector(document)}}))}includeEntry(_workspaceFolder,entry,fileExtensions){const name=UriUtils.basename(entry.uri);if(name.startsWith("."))return!1;if(entry.isDirectory)return"node_modules"!==name&&"out"!==name;if(entry.isFile){const extname=UriUtils.extname(entry.uri);return fileExtensions.includes(extname)}return!1}}class DefaultLexerErrorMessageProvider{buildUnexpectedCharactersMessage(fullText,startOffset,length,line,column){return api.PW.buildUnexpectedCharactersMessage(fullText,startOffset,length,line,column)}buildUnableToPopLexerModeMessage(token){return api.PW.buildUnableToPopLexerModeMessage(token)}}const DEFAULT_TOKENIZE_OPTIONS={mode:"full"};class DefaultLexer{constructor(services){this.errorMessageProvider=services.parser.LexerErrorMessageProvider,this.tokenBuilder=services.parser.TokenBuilder;const tokens=this.tokenBuilder.buildTokens(services.Grammar,{caseInsensitive:services.LanguageMetaData.caseInsensitive});this.tokenTypes=this.toTokenTypeDictionary(tokens);const lexerTokens=isTokenTypeDictionary(tokens)?Object.values(tokens):tokens,production="production"===services.LanguageMetaData.mode;this.chevrotainLexer=new api.JG(lexerTokens,{positionTracking:"full",skipValidations:production,errorMessageProvider:this.errorMessageProvider})}get definition(){return this.tokenTypes}tokenize(text,_options=DEFAULT_TOKENIZE_OPTIONS){var _a,_b,_c;const chevrotainResult=this.chevrotainLexer.tokenize(text);return{tokens:chevrotainResult.tokens,errors:chevrotainResult.errors,hidden:null!==(_a=chevrotainResult.groups.hidden)&&void 0!==_a?_a:[],report:null===(_c=(_b=this.tokenBuilder).flushLexingReport)||void 0===_c?void 0:_c.call(_b,text)}}toTokenTypeDictionary(buildTokens){if(isTokenTypeDictionary(buildTokens))return buildTokens;const tokens=isIMultiModeLexerDefinition(buildTokens)?Object.values(buildTokens.modes).flat():buildTokens,res={};return tokens.forEach(token=>res[token.name]=token),res}}function isIMultiModeLexerDefinition(tokenVocabulary){return tokenVocabulary&&"modes"in tokenVocabulary&&"defaultMode"in tokenVocabulary}function isTokenTypeDictionary(tokenVocabulary){return!function isTokenTypeArray(tokenVocabulary){return Array.isArray(tokenVocabulary)&&(0===tokenVocabulary.length||"name"in tokenVocabulary[0])}(tokenVocabulary)&&!isIMultiModeLexerDefinition(tokenVocabulary)}function parseJSDoc(node,start,options){let opts,position;"string"==typeof node?(position=start,opts=options):(position=node.range.start,opts=start),position||(position=Position.create(0,0));const tokens=function tokenize(context){var _a,_b,_c;const tokens=[];let currentLine=context.position.line,currentCharacter=context.position.character;for(let i=0;i<context.lines.length;i++){const first=0===i,last=i===context.lines.length-1;let line=context.lines[i],index=0;if(first&&context.options.start){const match=null===(_a=context.options.start)||void 0===_a?void 0:_a.exec(line);match&&(index=match.index+match[0].length)}else{const match=null===(_b=context.options.line)||void 0===_b?void 0:_b.exec(line);match&&(index=match.index+match[0].length)}if(last){const match=null===(_c=context.options.end)||void 0===_c?void 0:_c.exec(line);match&&(line=line.substring(0,match.index))}line=line.substring(0,lastCharacter(line));if(skipWhitespace(line,index)>=line.length){if(tokens.length>0){const position=Position.create(currentLine,currentCharacter);tokens.push({type:"break",content:"",range:Range.create(position,position)})}}else{tagRegex.lastIndex=index;const tagMatch=tagRegex.exec(line);if(tagMatch){const fullMatch=tagMatch[0],value=tagMatch[1],start=Position.create(currentLine,currentCharacter+index),end=Position.create(currentLine,currentCharacter+index+fullMatch.length);tokens.push({type:"tag",content:value,range:Range.create(start,end)}),index+=fullMatch.length,index=skipWhitespace(line,index)}if(index<line.length){const rest=line.substring(index),inlineTagMatches=Array.from(rest.matchAll(inlineTagRegex));tokens.push(...buildInlineTokens(inlineTagMatches,rest,currentLine,currentCharacter+index))}}currentLine++,currentCharacter=0}if(tokens.length>0&&"break"===tokens[tokens.length-1].type)return tokens.slice(0,-1);return tokens}({lines:getLines(node),position,options:normalizeOptions(opts)});return function parseJSDocComment(context){var _a,_b,_c,_d;const startPosition=Position.create(context.position.line,context.position.character);if(0===context.tokens.length)return new JSDocCommentImpl([],Range.create(startPosition,startPosition));const elements=[];for(;context.index<context.tokens.length;){const element=parseJSDocElement(context,elements[elements.length-1]);element&&elements.push(element)}const start=null!==(_b=null===(_a=elements[0])||void 0===_a?void 0:_a.range.start)&&void 0!==_b?_b:startPosition,end=null!==(_d=null===(_c=elements[elements.length-1])||void 0===_c?void 0:_c.range.end)&&void 0!==_d?_d:startPosition;return new JSDocCommentImpl(elements,Range.create(start,end))}({index:0,tokens,position})}function getLines(node){let content="";content="string"==typeof node?node:node.text;return content.split(regexp_utils.TH)}const tagRegex=/\s*(@([\p{L}][\p{L}\p{N}]*)?)/uy,inlineTagRegex=/\{(@[\p{L}][\p{L}\p{N}]*)(\s*)([^\r\n}]+)?\}/gu;function buildInlineTokens(tags,line,lineIndex,characterIndex){const tokens=[];if(0===tags.length){const start=Position.create(lineIndex,characterIndex),end=Position.create(lineIndex,characterIndex+line.length);tokens.push({type:"text",content:line,range:Range.create(start,end)})}else{let lastIndex=0;for(const match of tags){const matchIndex=match.index,startContent=line.substring(lastIndex,matchIndex);startContent.length>0&&tokens.push({type:"text",content:line.substring(lastIndex,matchIndex),range:Range.create(Position.create(lineIndex,lastIndex+characterIndex),Position.create(lineIndex,matchIndex+characterIndex))});let offset=startContent.length+1;const tagName=match[1];if(tokens.push({type:"inline-tag",content:tagName,range:Range.create(Position.create(lineIndex,lastIndex+offset+characterIndex),Position.create(lineIndex,lastIndex+offset+tagName.length+characterIndex))}),offset+=tagName.length,4===match.length){offset+=match[2].length;const value=match[3];tokens.push({type:"text",content:value,range:Range.create(Position.create(lineIndex,lastIndex+offset+characterIndex),Position.create(lineIndex,lastIndex+offset+value.length+characterIndex))})}else tokens.push({type:"text",content:"",range:Range.create(Position.create(lineIndex,lastIndex+offset+characterIndex),Position.create(lineIndex,lastIndex+offset+characterIndex))});lastIndex=matchIndex+match[0].length}const endContent=line.substring(lastIndex);endContent.length>0&&tokens.push({type:"text",content:endContent,range:Range.create(Position.create(lineIndex,lastIndex+characterIndex),Position.create(lineIndex,lastIndex+characterIndex+endContent.length))})}return tokens}const nonWhitespaceRegex=/\S/,whitespaceEndRegex=/\s*$/;function skipWhitespace(line,index){const match=line.substring(index).match(nonWhitespaceRegex);return match?index+match.index:line.length}function lastCharacter(line){const match=line.match(whitespaceEndRegex);if(match&&"number"==typeof match.index)return match.index}function parseJSDocElement(context,last){const next=context.tokens[context.index];return"tag"===next.type?parseJSDocTag(context,!1):"text"===next.type||"inline-tag"===next.type?parseJSDocText(context):(function appendEmptyLine(token,element){if(element){const line=new JSDocLineImpl("",token.range);"inlines"in element?element.inlines.push(line):element.content.inlines.push(line)}}(next,last),void context.index++)}function parseJSDocText(context){let token=context.tokens[context.index];const firstToken=token;let lastToken=token;const lines=[];for(;token&&"break"!==token.type&&"tag"!==token.type;)lines.push(parseJSDocInline(context)),lastToken=token,token=context.tokens[context.index];return new JSDocTextImpl(lines,Range.create(firstToken.range.start,lastToken.range.end))}function parseJSDocInline(context){return"inline-tag"===context.tokens[context.index].type?parseJSDocTag(context,!0):parseJSDocLine(context)}function parseJSDocTag(context,inline){const tagToken=context.tokens[context.index++],name=tagToken.content.substring(1),nextToken=context.tokens[context.index];if("text"===(null==nextToken?void 0:nextToken.type)){if(inline){const docLine=parseJSDocLine(context);return new JSDocTagImpl(name,new JSDocTextImpl([docLine],docLine.range),inline,Range.create(tagToken.range.start,docLine.range.end))}{const textDoc=parseJSDocText(context);return new JSDocTagImpl(name,textDoc,inline,Range.create(tagToken.range.start,textDoc.range.end))}}{const range=tagToken.range;return new JSDocTagImpl(name,new JSDocTextImpl([],range),inline,range)}}function parseJSDocLine(context){const token=context.tokens[context.index++];return new JSDocLineImpl(token.content,token.range)}function normalizeOptions(options){if(!options)return normalizeOptions({start:"/**",end:"*/",line:"*"});const{start,end,line}=options;return{start:normalizeOption(start,!0),end:normalizeOption(end,!1),line:normalizeOption(line,!0)}}function normalizeOption(option,start){if("string"==typeof option||"object"==typeof option){const escaped="string"==typeof option?(0,regexp_utils.Nt)(option):option.source;return start?new RegExp(`^\\s*${escaped}`):new RegExp(`\\s*${escaped}\\s*$`)}return option}class JSDocCommentImpl{constructor(elements,range){this.elements=elements,this.range=range}getTag(name){return this.getAllTags().find(e=>e.name===name)}getTags(name){return this.getAllTags().filter(e=>e.name===name)}getAllTags(){return this.elements.filter(e=>"name"in e)}toString(){let value="";for(const element of this.elements)if(0===value.length)value=element.toString();else{const text=element.toString();value+=fillNewlines(value)+text}return value.trim()}toMarkdown(options){let value="";for(const element of this.elements)if(0===value.length)value=element.toMarkdown(options);else{const text=element.toMarkdown(options);value+=fillNewlines(value)+text}return value.trim()}}class JSDocTagImpl{constructor(name,content,inline,range){this.name=name,this.content=content,this.inline=inline,this.range=range}toString(){let text=`@${this.name}`;const content=this.content.toString();return 1===this.content.inlines.length?text=`${text} ${content}`:this.content.inlines.length>1&&(text=`${text}\n${content}`),this.inline?`{${text}}`:text}toMarkdown(options){var _a,_b;return null!==(_b=null===(_a=null==options?void 0:options.renderTag)||void 0===_a?void 0:_a.call(options,this))&&void 0!==_b?_b:this.toMarkdownDefault(options)}toMarkdownDefault(options){const content=this.content.toMarkdown(options);if(this.inline){const rendered=function renderInlineTag(tag,content,options){var _a,_b;if("linkplain"===tag||"linkcode"===tag||"link"===tag){const index=content.indexOf(" ");let display=content;if(index>0){const displayStart=skipWhitespace(content,index);display=content.substring(displayStart),content=content.substring(0,index)}("linkcode"===tag||"link"===tag&&"code"===options.link)&&(display=`\`${display}\``);const renderedLink=null!==(_b=null===(_a=options.renderLink)||void 0===_a?void 0:_a.call(options,content,display))&&void 0!==_b?_b:function renderLinkDefault(content,display){try{return esm.r.parse(content,!0),`[${display}](${content})`}catch(_a){return content}}(content,display);return renderedLink}return}(this.name,content,null!=options?options:{});if("string"==typeof rendered)return rendered}let marker="";"italic"===(null==options?void 0:options.tag)||void 0===(null==options?void 0:options.tag)?marker="*":"bold"===(null==options?void 0:options.tag)?marker="**":"bold-italic"===(null==options?void 0:options.tag)&&(marker="***");let text=`${marker}@${this.name}${marker}`;return 1===this.content.inlines.length?text=`${text} — ${content}`:this.content.inlines.length>1&&(text=`${text}\n${content}`),this.inline?`{${text}}`:text}}class JSDocTextImpl{constructor(lines,range){this.inlines=lines,this.range=range}toString(){let text="";for(let i=0;i<this.inlines.length;i++){const inline=this.inlines[i],next=this.inlines[i+1];text+=inline.toString(),next&&next.range.start.line>inline.range.start.line&&(text+="\n")}return text}toMarkdown(options){let text="";for(let i=0;i<this.inlines.length;i++){const inline=this.inlines[i],next=this.inlines[i+1];text+=inline.toMarkdown(options),next&&next.range.start.line>inline.range.start.line&&(text+="\n")}return text}}class JSDocLineImpl{constructor(text,range){this.text=text,this.range=range}toString(){return this.text}toMarkdown(){return this.text}}function fillNewlines(text){return text.endsWith("\n")?"\n":"\n\n"}class JSDocDocumentationProvider{constructor(services){this.indexManager=services.shared.workspace.IndexManager,this.commentProvider=services.documentation.CommentProvider}getDocumentation(node){const comment=this.commentProvider.getComment(node);if(comment&&function isJSDoc(node,options){const normalizedOptions=normalizeOptions(options),lines=getLines(node);if(0===lines.length)return!1;const first=lines[0],last=lines[lines.length-1],firstRegex=normalizedOptions.start,lastRegex=normalizedOptions.end;return Boolean(null==firstRegex?void 0:firstRegex.exec(first))&&Boolean(null==lastRegex?void 0:lastRegex.exec(last))}(comment)){return parseJSDoc(comment).toMarkdown({renderLink:(link,display)=>this.documentationLinkRenderer(node,link,display),renderTag:tag=>this.documentationTagRenderer(node,tag)})}}documentationLinkRenderer(node,name,display){var _a;const description=null!==(_a=this.findNameInPrecomputedScopes(node,name))&&void 0!==_a?_a:this.findNameInGlobalScope(node,name);if(description&&description.nameSegment){const line=description.nameSegment.range.start.line+1,character=description.nameSegment.range.start.character+1;return`[${display}](${description.documentUri.with({fragment:`L${line},${character}`}).toString()})`}}documentationTagRenderer(_node,_tag){}findNameInPrecomputedScopes(node,name){const precomputed=(0,ast_utils.YE)(node).precomputedScopes;if(!precomputed)return;let currentNode=node;do{const description=precomputed.get(currentNode).find(e=>e.name===name);if(description)return description;currentNode=currentNode.$container}while(currentNode)}findNameInGlobalScope(node,name){return this.indexManager.allElements().find(e=>e.name===name)}}class DefaultCommentProvider{constructor(services){this.grammarConfig=()=>services.parser.GrammarConfig}getComment(node){var _a;return function isAstNodeWithComment(node){return"string"==typeof node.$comment}(node)?node.$comment:null===(_a=(0,cst_utils.v)(node.$cstNode,this.grammarConfig().multilineCommentRules))||void 0===_a?void 0:_a.text}}class DefaultAsyncParser{constructor(services){this.syncParser=services.parser.LangiumParser}parse(text,_cancelToken){return Promise.resolve(this.syncParser.parse(text))}}class DefaultWorkspaceLock{constructor(){this.previousTokenSource=new cancellation.Qi,this.writeQueue=[],this.readQueue=[],this.done=!0}write(action){this.cancelWrite();const tokenSource=function startCancelableOperation(){return lastTick=performance.now(),new cancellation.Qi}();return this.previousTokenSource=tokenSource,this.enqueue(this.writeQueue,action,tokenSource.token)}read(action){return this.enqueue(this.readQueue,action)}enqueue(queue,action,cancellationToken=cancellation.XO.None){const deferred=new promise_utils_Deferred,entry={action,deferred,cancellationToken};return queue.push(entry),this.performNextOperation(),deferred.promise}async performNextOperation(){if(!this.done)return;const entries=[];if(this.writeQueue.length>0)entries.push(this.writeQueue.shift());else{if(!(this.readQueue.length>0))return;entries.push(...this.readQueue.splice(0,this.readQueue.length))}this.done=!1,await Promise.all(entries.map(async({action,deferred,cancellationToken})=>{try{const result=await Promise.resolve().then(()=>action(cancellationToken));deferred.resolve(result)}catch(err){isOperationCancelled(err)?deferred.resolve(void 0):deferred.reject(err)}})),this.done=!0,this.performNextOperation()}cancelWrite(){this.previousTokenSource.cancel()}}class DefaultHydrator{constructor(services){this.grammarElementIdMap=new BiMap,this.tokenTypeIdMap=new BiMap,this.grammar=services.Grammar,this.lexer=services.parser.Lexer,this.linker=services.references.Linker}dehydrate(result){return{lexerErrors:result.lexerErrors,lexerReport:result.lexerReport?this.dehydrateLexerReport(result.lexerReport):void 0,parserErrors:result.parserErrors.map(e=>Object.assign(Object.assign({},e),{message:e.message})),value:this.dehydrateAstNode(result.value,this.createDehyrationContext(result.value))}}dehydrateLexerReport(lexerReport){return lexerReport}createDehyrationContext(node){const astNodes=new Map,cstNodes=new Map;for(const astNode of(0,ast_utils.jm)(node))astNodes.set(astNode,{});if(node.$cstNode)for(const cstNode of(0,cst_utils.NS)(node.$cstNode))cstNodes.set(cstNode,{});return{astNodes,cstNodes}}dehydrateAstNode(node,context){const obj=context.astNodes.get(node);obj.$type=node.$type,obj.$containerIndex=node.$containerIndex,obj.$containerProperty=node.$containerProperty,void 0!==node.$cstNode&&(obj.$cstNode=this.dehydrateCstNode(node.$cstNode,context));for(const[name,value]of Object.entries(node))if(!name.startsWith("$"))if(Array.isArray(value)){const arr=[];obj[name]=arr;for(const item of value)(0,syntax_tree.ng)(item)?arr.push(this.dehydrateAstNode(item,context)):(0,syntax_tree.A_)(item)?arr.push(this.dehydrateReference(item,context)):arr.push(item)}else(0,syntax_tree.ng)(value)?obj[name]=this.dehydrateAstNode(value,context):(0,syntax_tree.A_)(value)?obj[name]=this.dehydrateReference(value,context):void 0!==value&&(obj[name]=value);return obj}dehydrateReference(reference,context){const obj={};return obj.$refText=reference.$refText,reference.$refNode&&(obj.$refNode=context.cstNodes.get(reference.$refNode)),obj}dehydrateCstNode(node,context){const cstNode=context.cstNodes.get(node);return(0,syntax_tree.br)(node)?cstNode.fullText=node.fullText:cstNode.grammarSource=this.getGrammarElementId(node.grammarSource),cstNode.hidden=node.hidden,cstNode.astNode=context.astNodes.get(node.astNode),(0,syntax_tree.mD)(node)?cstNode.content=node.content.map(child=>this.dehydrateCstNode(child,context)):(0,syntax_tree.FC)(node)&&(cstNode.tokenType=node.tokenType.name,cstNode.offset=node.offset,cstNode.length=node.length,cstNode.startLine=node.range.start.line,cstNode.startColumn=node.range.start.character,cstNode.endLine=node.range.end.line,cstNode.endColumn=node.range.end.character),cstNode}hydrate(result){const node=result.value,context=this.createHydrationContext(node);return"$cstNode"in node&&this.hydrateCstNode(node.$cstNode,context),{lexerErrors:result.lexerErrors,lexerReport:result.lexerReport,parserErrors:result.parserErrors,value:this.hydrateAstNode(node,context)}}createHydrationContext(node){const astNodes=new Map,cstNodes=new Map;for(const astNode of(0,ast_utils.jm)(node))astNodes.set(astNode,{});let root;if(node.$cstNode)for(const cstNode of(0,cst_utils.NS)(node.$cstNode)){let cst;"fullText"in cstNode?(cst=new RootCstNodeImpl(cstNode.fullText),root=cst):"content"in cstNode?cst=new CompositeCstNodeImpl:"tokenType"in cstNode&&(cst=this.hydrateCstLeafNode(cstNode)),cst&&(cstNodes.set(cstNode,cst),cst.root=root)}return{astNodes,cstNodes}}hydrateAstNode(node,context){const astNode=context.astNodes.get(node);astNode.$type=node.$type,astNode.$containerIndex=node.$containerIndex,astNode.$containerProperty=node.$containerProperty,node.$cstNode&&(astNode.$cstNode=context.cstNodes.get(node.$cstNode));for(const[name,value]of Object.entries(node))if(!name.startsWith("$"))if(Array.isArray(value)){const arr=[];astNode[name]=arr;for(const item of value)(0,syntax_tree.ng)(item)?arr.push(this.setParent(this.hydrateAstNode(item,context),astNode)):(0,syntax_tree.A_)(item)?arr.push(this.hydrateReference(item,astNode,name,context)):arr.push(item)}else(0,syntax_tree.ng)(value)?astNode[name]=this.setParent(this.hydrateAstNode(value,context),astNode):(0,syntax_tree.A_)(value)?astNode[name]=this.hydrateReference(value,astNode,name,context):void 0!==value&&(astNode[name]=value);return astNode}setParent(node,parent){return node.$container=parent,node}hydrateReference(reference,node,name,context){return this.linker.buildReference(node,name,context.cstNodes.get(reference.$refNode),reference.$refText)}hydrateCstNode(cstNode,context,num=0){const cstNodeObj=context.cstNodes.get(cstNode);if("number"==typeof cstNode.grammarSource&&(cstNodeObj.grammarSource=this.getGrammarElement(cstNode.grammarSource)),cstNodeObj.astNode=context.astNodes.get(cstNode.astNode),(0,syntax_tree.mD)(cstNodeObj))for(const child of cstNode.content){const hydrated=this.hydrateCstNode(child,context,num++);cstNodeObj.content.push(hydrated)}return cstNodeObj}hydrateCstLeafNode(cstNode){const tokenType=this.getTokenType(cstNode.tokenType),offset=cstNode.offset,length=cstNode.length,startLine=cstNode.startLine,startColumn=cstNode.startColumn,endLine=cstNode.endLine,endColumn=cstNode.endColumn,hidden=cstNode.hidden;return new LeafCstNodeImpl(offset,length,{start:{line:startLine,character:startColumn},end:{line:endLine,character:endColumn}},tokenType,hidden)}getTokenType(name){return this.lexer.definition[name]}getGrammarElementId(node){if(node)return 0===this.grammarElementIdMap.size&&this.createGrammarElementIdMap(),this.grammarElementIdMap.get(node)}getGrammarElement(id){0===this.grammarElementIdMap.size&&this.createGrammarElementIdMap();return this.grammarElementIdMap.getKey(id)}createGrammarElementIdMap(){let id=0;for(const element of(0,ast_utils.jm)(this.grammar))(0,ast.r1)(element)&&this.grammarElementIdMap.set(element,id++)}}function createDefaultCoreModule(context){return{documentation:{CommentProvider:services=>new DefaultCommentProvider(services),DocumentationProvider:services=>new JSDocDocumentationProvider(services)},parser:{AsyncParser:services=>new DefaultAsyncParser(services),GrammarConfig:services=>function createGrammarConfig(services){const rules=[],grammar=services.Grammar;for(const rule of grammar.rules)(0,ast.rE)(rule)&&(0,grammar_utils.eb)(rule)&&(0,regexp_utils.lU)((0,grammar_utils.S)(rule))&&rules.push(rule.name);return{multilineCommentRules:rules,nameRegexp:cst_utils.El}}(services),LangiumParser:services=>createLangiumParser(services),CompletionParser:services=>function createCompletionParser(services){const grammar=services.Grammar,lexer=services.parser.Lexer,parser=new LangiumCompletionParser(services);return createParser(grammar,parser,lexer.definition),parser.finalize(),parser}(services),ValueConverter:()=>new value_converter.d,TokenBuilder:()=>new token_builder.Q,Lexer:services=>new DefaultLexer(services),ParserErrorMessageProvider:()=>new LangiumParserErrorMessageProvider,LexerErrorMessageProvider:()=>new DefaultLexerErrorMessageProvider},workspace:{AstNodeLocator:()=>new DefaultAstNodeLocator,AstNodeDescriptionProvider:services=>new DefaultAstNodeDescriptionProvider(services),ReferenceDescriptionProvider:services=>new DefaultReferenceDescriptionProvider(services)},references:{Linker:services=>new DefaultLinker(services),NameProvider:()=>new DefaultNameProvider,ScopeProvider:services=>new DefaultScopeProvider(services),ScopeComputation:services=>new DefaultScopeComputation(services),References:services=>new DefaultReferences(services)},serializer:{Hydrator:services=>new DefaultHydrator(services),JsonSerializer:services=>new DefaultJsonSerializer(services)},validation:{DocumentValidator:services=>new DefaultDocumentValidator(services),ValidationRegistry:services=>new ValidationRegistry(services)},shared:()=>context.shared}}function createDefaultSharedCoreModule(context){return{ServiceRegistry:services=>new DefaultServiceRegistry(services),workspace:{LangiumDocuments:services=>new DefaultLangiumDocuments(services),LangiumDocumentFactory:services=>new DefaultLangiumDocumentFactory(services),DocumentBuilder:services=>new DefaultDocumentBuilder(services),IndexManager:services=>new DefaultIndexManager(services),WorkspaceManager:services=>new DefaultWorkspaceManager(services),FileSystemProvider:services=>context.fileSystemProvider(services),WorkspaceLock:()=>new DefaultWorkspaceLock,ConfigurationProvider:services=>new DefaultConfigurationProvider(services)}}}},"./node_modules/langium/lib/dependency-injection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var Module;function inject(module1,module2,module3,module4,module5,module6,module7,module8,module9){return _inject([module1,module2,module3,module4,module5,module6,module7,module8,module9].reduce(_merge,{}))}__webpack_require__.d(__webpack_exports__,{WQ:()=>inject}),function(Module){Module.merge=(m1,m2)=>_merge(_merge({},m1),m2)}(Module||(Module={}));const isProxy=Symbol("isProxy");function _inject(module,injector){const proxy=new Proxy({},{deleteProperty:()=>!1,set:()=>{throw new Error("Cannot set property on injected service container")},get:(obj,prop)=>prop===isProxy||_resolve(obj,prop,module,injector||proxy),getOwnPropertyDescriptor:(obj,prop)=>(_resolve(obj,prop,module,injector||proxy),Object.getOwnPropertyDescriptor(obj,prop)),has:(_,prop)=>prop in module,ownKeys:()=>[...Object.getOwnPropertyNames(module)]});return proxy}const __requested__=Symbol();function _resolve(obj,prop,module,injector){if(prop in obj){if(obj[prop]instanceof Error)throw new Error("Construction failure. Please make sure that your dependencies are constructable.",{cause:obj[prop]});if(obj[prop]===__requested__)throw new Error('Cycle detected. Please make "'+String(prop)+'" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');return obj[prop]}if(prop in module){const value=module[prop];obj[prop]=__requested__;try{obj[prop]="function"==typeof value?value(injector):_inject(value,injector)}catch(error){throw obj[prop]=error instanceof Error?error:void 0,error}return obj[prop]}}function _merge(target,source){if(source)for(const[key,value2]of Object.entries(source))if(void 0!==value2){const value1=target[key];target[key]=null!==value1&&null!==value2&&"object"==typeof value1&&"object"==typeof value2?_merge(value1,value2):value2}return target}},"./node_modules/langium/lib/languages/generated/ast.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$g:()=>isRuleCall,Bg:()=>isCharacterRange,Ct:()=>isNegation,Cz:()=>isBooleanLiteral,D8:()=>isSimpleType,FO:()=>isEndOfFile,Fy:()=>isTerminalAlternatives,GL:()=>isNegatedToken,IZ:()=>isGroup,Mz:()=>isUntilToken,O4:()=>isTerminalGroup,QX:()=>LangiumGrammarAstReflection,RP:()=>isDisjunction,S2:()=>isInterface,SP:()=>isInferredType,TF:()=>isParameterReference,Tu:()=>isConjunction,Xj:()=>isType,_c:()=>isCrossReference,cY:()=>isUnorderedGroup,fG:()=>isReturnType,jp:()=>isAlternatives,lF:()=>isTerminalRuleCall,r1:()=>isAbstractElement,rE:()=>isTerminalRule,s7:()=>isParserRule,vd:()=>isRegexToken,ve:()=>isAction,wb:()=>isKeyword,wh:()=>isAssignment,z2:()=>isWildcard});var _syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/langium/lib/syntax-tree.js");const AbstractElement="AbstractElement";function isAbstractElement(item){return reflection.isInstance(item,AbstractElement)}const BooleanLiteral="BooleanLiteral";function isBooleanLiteral(item){return reflection.isInstance(item,BooleanLiteral)}const Conjunction="Conjunction";function isConjunction(item){return reflection.isInstance(item,Conjunction)}const Disjunction="Disjunction";function isDisjunction(item){return reflection.isInstance(item,Disjunction)}const InferredType="InferredType";function isInferredType(item){return reflection.isInstance(item,InferredType)}const Interface="Interface";function isInterface(item){return reflection.isInstance(item,Interface)}const Negation="Negation";function isNegation(item){return reflection.isInstance(item,Negation)}const ParameterReference="ParameterReference";function isParameterReference(item){return reflection.isInstance(item,ParameterReference)}const ParserRule="ParserRule";function isParserRule(item){return reflection.isInstance(item,ParserRule)}const ReturnType="ReturnType";function isReturnType(item){return reflection.isInstance(item,ReturnType)}const SimpleType="SimpleType";function isSimpleType(item){return reflection.isInstance(item,SimpleType)}const TerminalRule="TerminalRule";function isTerminalRule(item){return reflection.isInstance(item,TerminalRule)}const Type="Type";function isType(item){return reflection.isInstance(item,Type)}const Action="Action";function isAction(item){return reflection.isInstance(item,Action)}const Alternatives="Alternatives";function isAlternatives(item){return reflection.isInstance(item,Alternatives)}const Assignment="Assignment";function isAssignment(item){return reflection.isInstance(item,Assignment)}const CharacterRange="CharacterRange";function isCharacterRange(item){return reflection.isInstance(item,CharacterRange)}const CrossReference="CrossReference";function isCrossReference(item){return reflection.isInstance(item,CrossReference)}const EndOfFile="EndOfFile";function isEndOfFile(item){return reflection.isInstance(item,EndOfFile)}const Group="Group";function isGroup(item){return reflection.isInstance(item,Group)}const Keyword="Keyword";function isKeyword(item){return reflection.isInstance(item,Keyword)}const NegatedToken="NegatedToken";function isNegatedToken(item){return reflection.isInstance(item,NegatedToken)}const RegexToken="RegexToken";function isRegexToken(item){return reflection.isInstance(item,RegexToken)}const RuleCall="RuleCall";function isRuleCall(item){return reflection.isInstance(item,RuleCall)}const TerminalAlternatives="TerminalAlternatives";function isTerminalAlternatives(item){return reflection.isInstance(item,TerminalAlternatives)}const TerminalGroup="TerminalGroup";function isTerminalGroup(item){return reflection.isInstance(item,TerminalGroup)}const TerminalRuleCall="TerminalRuleCall";function isTerminalRuleCall(item){return reflection.isInstance(item,TerminalRuleCall)}const UnorderedGroup="UnorderedGroup";function isUnorderedGroup(item){return reflection.isInstance(item,UnorderedGroup)}const UntilToken="UntilToken";function isUntilToken(item){return reflection.isInstance(item,UntilToken)}const Wildcard="Wildcard";function isWildcard(item){return reflection.isInstance(item,Wildcard)}class LangiumGrammarAstReflection extends _syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.kD{getAllTypes(){return[AbstractElement,"AbstractRule","AbstractType",Action,Alternatives,"ArrayLiteral","ArrayType",Assignment,BooleanLiteral,CharacterRange,"Condition",Conjunction,CrossReference,Disjunction,EndOfFile,"Grammar","GrammarImport",Group,InferredType,Interface,Keyword,"NamedArgument",NegatedToken,Negation,"NumberLiteral","Parameter",ParameterReference,ParserRule,"ReferenceType",RegexToken,ReturnType,RuleCall,SimpleType,"StringLiteral",TerminalAlternatives,TerminalGroup,TerminalRule,TerminalRuleCall,Type,"TypeAttribute","TypeDefinition","UnionType",UnorderedGroup,UntilToken,"ValueLiteral",Wildcard]}computeIsSubtype(subtype,supertype){switch(subtype){case Action:case Alternatives:case Assignment:case CharacterRange:case CrossReference:case EndOfFile:case Group:case Keyword:case NegatedToken:case RegexToken:case RuleCall:case TerminalAlternatives:case TerminalGroup:case TerminalRuleCall:case UnorderedGroup:case UntilToken:case Wildcard:return this.isSubtype(AbstractElement,supertype);case"ArrayLiteral":case"NumberLiteral":case"StringLiteral":return this.isSubtype("ValueLiteral",supertype);case"ArrayType":case"ReferenceType":case SimpleType:case"UnionType":return this.isSubtype("TypeDefinition",supertype);case BooleanLiteral:return this.isSubtype("Condition",supertype)||this.isSubtype("ValueLiteral",supertype);case Conjunction:case Disjunction:case Negation:case ParameterReference:return this.isSubtype("Condition",supertype);case InferredType:case Interface:case Type:return this.isSubtype("AbstractType",supertype);case ParserRule:return this.isSubtype("AbstractRule",supertype)||this.isSubtype("AbstractType",supertype);case TerminalRule:return this.isSubtype("AbstractRule",supertype);default:return!1}}getReferenceType(refInfo){const referenceId=`${refInfo.container.$type}:${refInfo.property}`;switch(referenceId){case"Action:type":case"CrossReference:type":case"Interface:superTypes":case"ParserRule:returnType":case"SimpleType:typeRef":return"AbstractType";case"Grammar:hiddenTokens":case"ParserRule:hiddenTokens":case"RuleCall:rule":return"AbstractRule";case"Grammar:usedGrammars":return"Grammar";case"NamedArgument:parameter":case"ParameterReference:parameter":return"Parameter";case"TerminalRuleCall:rule":return TerminalRule;default:throw new Error(`${referenceId} is not a valid reference id.`)}}getTypeMetaData(type){switch(type){case AbstractElement:return{name:AbstractElement,properties:[{name:"cardinality"},{name:"lookahead"}]};case"ArrayLiteral":return{name:"ArrayLiteral",properties:[{name:"elements",defaultValue:[]}]};case"ArrayType":return{name:"ArrayType",properties:[{name:"elementType"}]};case BooleanLiteral:return{name:BooleanLiteral,properties:[{name:"true",defaultValue:!1}]};case Conjunction:return{name:Conjunction,properties:[{name:"left"},{name:"right"}]};case Disjunction:return{name:Disjunction,properties:[{name:"left"},{name:"right"}]};case"Grammar":return{name:"Grammar",properties:[{name:"definesHiddenTokens",defaultValue:!1},{name:"hiddenTokens",defaultValue:[]},{name:"imports",defaultValue:[]},{name:"interfaces",defaultValue:[]},{name:"isDeclared",defaultValue:!1},{name:"name"},{name:"rules",defaultValue:[]},{name:"types",defaultValue:[]},{name:"usedGrammars",defaultValue:[]}]};case"GrammarImport":return{name:"GrammarImport",properties:[{name:"path"}]};case InferredType:return{name:InferredType,properties:[{name:"name"}]};case Interface:return{name:Interface,properties:[{name:"attributes",defaultValue:[]},{name:"name"},{name:"superTypes",defaultValue:[]}]};case"NamedArgument":return{name:"NamedArgument",properties:[{name:"calledByName",defaultValue:!1},{name:"parameter"},{name:"value"}]};case Negation:return{name:Negation,properties:[{name:"value"}]};case"NumberLiteral":return{name:"NumberLiteral",properties:[{name:"value"}]};case"Parameter":return{name:"Parameter",properties:[{name:"name"}]};case ParameterReference:return{name:ParameterReference,properties:[{name:"parameter"}]};case ParserRule:return{name:ParserRule,properties:[{name:"dataType"},{name:"definesHiddenTokens",defaultValue:!1},{name:"definition"},{name:"entry",defaultValue:!1},{name:"fragment",defaultValue:!1},{name:"hiddenTokens",defaultValue:[]},{name:"inferredType"},{name:"name"},{name:"parameters",defaultValue:[]},{name:"returnType"},{name:"wildcard",defaultValue:!1}]};case"ReferenceType":return{name:"ReferenceType",properties:[{name:"referenceType"}]};case ReturnType:return{name:ReturnType,properties:[{name:"name"}]};case SimpleType:return{name:SimpleType,properties:[{name:"primitiveType"},{name:"stringType"},{name:"typeRef"}]};case"StringLiteral":return{name:"StringLiteral",properties:[{name:"value"}]};case TerminalRule:return{name:TerminalRule,properties:[{name:"definition"},{name:"fragment",defaultValue:!1},{name:"hidden",defaultValue:!1},{name:"name"},{name:"type"}]};case Type:return{name:Type,properties:[{name:"name"},{name:"type"}]};case"TypeAttribute":return{name:"TypeAttribute",properties:[{name:"defaultValue"},{name:"isOptional",defaultValue:!1},{name:"name"},{name:"type"}]};case"UnionType":return{name:"UnionType",properties:[{name:"types",defaultValue:[]}]};case Action:return{name:Action,properties:[{name:"cardinality"},{name:"feature"},{name:"inferredType"},{name:"lookahead"},{name:"operator"},{name:"type"}]};case Alternatives:return{name:Alternatives,properties:[{name:"cardinality"},{name:"elements",defaultValue:[]},{name:"lookahead"}]};case Assignment:return{name:Assignment,properties:[{name:"cardinality"},{name:"feature"},{name:"lookahead"},{name:"operator"},{name:"terminal"}]};case CharacterRange:return{name:CharacterRange,properties:[{name:"cardinality"},{name:"left"},{name:"lookahead"},{name:"right"}]};case CrossReference:return{name:CrossReference,properties:[{name:"cardinality"},{name:"deprecatedSyntax",defaultValue:!1},{name:"lookahead"},{name:"terminal"},{name:"type"}]};case EndOfFile:return{name:EndOfFile,properties:[{name:"cardinality"},{name:"lookahead"}]};case Group:return{name:Group,properties:[{name:"cardinality"},{name:"elements",defaultValue:[]},{name:"guardCondition"},{name:"lookahead"}]};case Keyword:return{name:Keyword,properties:[{name:"cardinality"},{name:"lookahead"},{name:"value"}]};case NegatedToken:return{name:NegatedToken,properties:[{name:"cardinality"},{name:"lookahead"},{name:"terminal"}]};case RegexToken:return{name:RegexToken,properties:[{name:"cardinality"},{name:"lookahead"},{name:"regex"}]};case RuleCall:return{name:RuleCall,properties:[{name:"arguments",defaultValue:[]},{name:"cardinality"},{name:"lookahead"},{name:"rule"}]};case TerminalAlternatives:return{name:TerminalAlternatives,properties:[{name:"cardinality"},{name:"elements",defaultValue:[]},{name:"lookahead"}]};case TerminalGroup:return{name:TerminalGroup,properties:[{name:"cardinality"},{name:"elements",defaultValue:[]},{name:"lookahead"}]};case TerminalRuleCall:return{name:TerminalRuleCall,properties:[{name:"cardinality"},{name:"lookahead"},{name:"rule"}]};case UnorderedGroup:return{name:UnorderedGroup,properties:[{name:"cardinality"},{name:"elements",defaultValue:[]},{name:"lookahead"}]};case UntilToken:return{name:UntilToken,properties:[{name:"cardinality"},{name:"lookahead"},{name:"terminal"}]};case Wildcard:return{name:Wildcard,properties:[{name:"cardinality"},{name:"lookahead"}]};default:return{name:type,properties:[]}}}}const reflection=new LangiumGrammarAstReflection},"./node_modules/langium/lib/parser/token-builder.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>DefaultTokenBuilder});var chevrotain__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/chevrotain/lib/src/api.js"),_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/languages/generated/ast.js"),_utils_ast_utils_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/utils/ast-utils.js"),_utils_grammar_utils_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/utils/grammar-utils.js"),_utils_regexp_utils_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/langium/lib/utils/regexp-utils.js"),_utils_stream_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/langium/lib/utils/stream.js");class DefaultTokenBuilder{constructor(){this.diagnostics=[]}buildTokens(grammar,options){const reachableRules=(0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_5__.Td)((0,_utils_grammar_utils_js__WEBPACK_IMPORTED_MODULE_3__.YV)(grammar,!1)),terminalTokens=this.buildTerminalTokens(reachableRules),tokens=this.buildKeywordTokens(reachableRules,terminalTokens,options);return terminalTokens.forEach(terminalToken=>{const pattern=terminalToken.PATTERN;"object"==typeof pattern&&pattern&&"test"in pattern&&(0,_utils_regexp_utils_js__WEBPACK_IMPORTED_MODULE_4__.Yv)(pattern)?tokens.unshift(terminalToken):tokens.push(terminalToken)}),tokens}flushLexingReport(text){return{diagnostics:this.popDiagnostics()}}popDiagnostics(){const diagnostics=[...this.diagnostics];return this.diagnostics=[],diagnostics}buildTerminalTokens(rules){return rules.filter(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.rE).filter(e=>!e.fragment).map(terminal=>this.buildTerminalToken(terminal)).toArray()}buildTerminalToken(terminal){const regex=(0,_utils_grammar_utils_js__WEBPACK_IMPORTED_MODULE_3__.S)(terminal),pattern=this.requiresCustomPattern(regex)?this.regexPatternFunction(regex):regex,tokenType={name:terminal.name,PATTERN:pattern};return"function"==typeof pattern&&(tokenType.LINE_BREAKS=!0),terminal.hidden&&(tokenType.GROUP=(0,_utils_regexp_utils_js__WEBPACK_IMPORTED_MODULE_4__.Yv)(regex)?chevrotain__WEBPACK_IMPORTED_MODULE_0__.JG.SKIPPED:"hidden"),tokenType}requiresCustomPattern(regex){return!(!regex.flags.includes("u")&&!regex.flags.includes("s"))||!(!regex.source.includes("?<=")&&!regex.source.includes("?<!"))}regexPatternFunction(regex){const stickyRegex=new RegExp(regex,regex.flags+"y");return(text,offset)=>{stickyRegex.lastIndex=offset;return stickyRegex.exec(text)}}buildKeywordTokens(rules,terminalTokens,options){return rules.filter(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.s7).flatMap(rule=>(0,_utils_ast_utils_js__WEBPACK_IMPORTED_MODULE_2__.Uo)(rule).filter(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.wb)).distinct(e=>e.value).toArray().sort((a,b)=>b.value.length-a.value.length).map(keyword=>this.buildKeywordToken(keyword,terminalTokens,Boolean(null==options?void 0:options.caseInsensitive)))}buildKeywordToken(keyword,terminalTokens,caseInsensitive){const keywordPattern=this.buildKeywordPattern(keyword,caseInsensitive),tokenType={name:keyword.value,PATTERN:keywordPattern,LONGER_ALT:this.findLongerAlt(keyword,terminalTokens)};return"function"==typeof keywordPattern&&(tokenType.LINE_BREAKS=!0),tokenType}buildKeywordPattern(keyword,caseInsensitive){return caseInsensitive?new RegExp((0,_utils_regexp_utils_js__WEBPACK_IMPORTED_MODULE_4__.Ao)(keyword.value)):keyword.value}findLongerAlt(keyword,terminalTokens){return terminalTokens.reduce((longerAlts,token)=>{const pattern=null==token?void 0:token.PATTERN;return(null==pattern?void 0:pattern.source)&&(0,_utils_regexp_utils_js__WEBPACK_IMPORTED_MODULE_4__.PC)("^"+pattern.source+"$",keyword.value)&&longerAlts.push(token),longerAlts},[])}}},"./node_modules/langium/lib/parser/value-converter.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>DefaultValueConverter});var ValueConverter,_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/langium/lib/languages/generated/ast.js"),_utils_grammar_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/utils/grammar-utils.js");class DefaultValueConverter{convert(input,cstNode){let feature=cstNode.grammarSource;if((0,_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_0__._c)(feature)&&(feature=(0,_utils_grammar_utils_js__WEBPACK_IMPORTED_MODULE_1__.g4)(feature)),(0,_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_0__.$g)(feature)){const rule=feature.rule.ref;if(!rule)throw new Error("This cst node was not parsed by a rule.");return this.runConverter(rule,input,cstNode)}return input}runConverter(rule,input,cstNode){var _a;switch(rule.name.toUpperCase()){case"INT":return ValueConverter.convertInt(input);case"STRING":return ValueConverter.convertString(input);case"ID":return ValueConverter.convertID(input)}switch(null===(_a=(0,_utils_grammar_utils_js__WEBPACK_IMPORTED_MODULE_1__.P3)(rule))||void 0===_a?void 0:_a.toLowerCase()){case"number":return ValueConverter.convertNumber(input);case"boolean":return ValueConverter.convertBoolean(input);case"bigint":return ValueConverter.convertBigint(input);case"date":return ValueConverter.convertDate(input);default:return input}}}!function(ValueConverter){function convertEscapeCharacter(char){switch(char){case"b":return"\b";case"f":return"\f";case"n":return"\n";case"r":return"\r";case"t":return"\t";case"v":return"\v";case"0":return"\0";default:return char}}ValueConverter.convertString=function convertString(input){let result="";for(let i=1;i<input.length-1;i++){const c=input.charAt(i);if("\\"===c){result+=convertEscapeCharacter(input.charAt(++i))}else result+=c}return result},ValueConverter.convertID=function convertID(input){return"^"===input.charAt(0)?input.substring(1):input},ValueConverter.convertInt=function convertInt(input){return parseInt(input)},ValueConverter.convertBigint=function convertBigint(input){return BigInt(input)},ValueConverter.convertDate=function convertDate(input){return new Date(input)},ValueConverter.convertNumber=function convertNumber(input){return Number(input)},ValueConverter.convertBoolean=function convertBoolean(input){return"true"===input.toLowerCase()}}(ValueConverter||(ValueConverter={}))},"./node_modules/langium/lib/syntax-tree.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function isAstNode(obj){return"object"==typeof obj&&null!==obj&&"string"==typeof obj.$type}function isReference(obj){return"object"==typeof obj&&null!==obj&&"string"==typeof obj.$refText}function isAstNodeDescription(obj){return"object"==typeof obj&&null!==obj&&"string"==typeof obj.name&&"string"==typeof obj.type&&"string"==typeof obj.path}function isLinkingError(obj){return"object"==typeof obj&&null!==obj&&isAstNode(obj.container)&&isReference(obj.reference)&&"string"==typeof obj.message}__webpack_require__.d(__webpack_exports__,{A_:()=>isReference,FC:()=>isLeafCstNode,Nr:()=>isAstNodeDescription,Zl:()=>isLinkingError,br:()=>isRootCstNode,kD:()=>AbstractAstReflection,mD:()=>isCompositeCstNode,ng:()=>isAstNode});class AbstractAstReflection{constructor(){this.subtypes={},this.allSubtypes={}}isInstance(node,type){return isAstNode(node)&&this.isSubtype(node.$type,type)}isSubtype(subtype,supertype){if(subtype===supertype)return!0;let nested=this.subtypes[subtype];nested||(nested=this.subtypes[subtype]={});const existing=nested[supertype];if(void 0!==existing)return existing;{const result=this.computeIsSubtype(subtype,supertype);return nested[supertype]=result,result}}getAllSubTypes(type){const existing=this.allSubtypes[type];if(existing)return existing;{const allTypes=this.getAllTypes(),types=[];for(const possibleSubType of allTypes)this.isSubtype(possibleSubType,type)&&types.push(possibleSubType);return this.allSubtypes[type]=types,types}}}function isCompositeCstNode(node){return"object"==typeof node&&null!==node&&Array.isArray(node.content)}function isLeafCstNode(node){return"object"==typeof node&&null!==node&&"object"==typeof node.tokenType}function isRootCstNode(node){return isCompositeCstNode(node)&&"string"==typeof node.fullText}},"./node_modules/langium/lib/utils/ast-utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{DM:()=>streamReferences,OP:()=>assignMandatoryProperties,SD:()=>linkContentToContainer,Uo:()=>streamAllContents,VN:()=>streamContents,XG:()=>getContainerOfType,YE:()=>getDocument,cQ:()=>findRootNode,jm:()=>streamAst});var _syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/langium/lib/syntax-tree.js"),_stream_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/utils/stream.js"),_cst_utils_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/utils/cst-utils.js");function linkContentToContainer(node){for(const[name,value]of Object.entries(node))name.startsWith("$")||(Array.isArray(value)?value.forEach((item,index)=>{(0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.ng)(item)&&(item.$container=node,item.$containerProperty=name,item.$containerIndex=index)}):(0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.ng)(value)&&(value.$container=node,value.$containerProperty=name))}function getContainerOfType(node,typePredicate){let item=node;for(;item;){if(typePredicate(item))return item;item=item.$container}}function getDocument(node){const result=findRootNode(node).$document;if(!result)throw new Error("AST node has no document.");return result}function findRootNode(node){for(;node.$container;)node=node.$container;return node}function streamContents(node,options){if(!node)throw new Error("Node must be an AstNode.");const range=null==options?void 0:options.range;return new _stream_js__WEBPACK_IMPORTED_MODULE_1__.fq(()=>({keys:Object.keys(node),keyIndex:0,arrayIndex:0}),state=>{for(;state.keyIndex<state.keys.length;){const property=state.keys[state.keyIndex];if(!property.startsWith("$")){const value=node[property];if((0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.ng)(value)){if(state.keyIndex++,isAstNodeInRange(value,range))return{done:!1,value}}else if(Array.isArray(value)){for(;state.arrayIndex<value.length;){const element=value[state.arrayIndex++];if((0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.ng)(element)&&isAstNodeInRange(element,range))return{done:!1,value:element}}state.arrayIndex=0}}state.keyIndex++}return _stream_js__WEBPACK_IMPORTED_MODULE_1__.Rf})}function streamAllContents(root,options){if(!root)throw new Error("Root node must be an AstNode.");return new _stream_js__WEBPACK_IMPORTED_MODULE_1__.Vj(root,node=>streamContents(node,options))}function streamAst(root,options){if(!root)throw new Error("Root node must be an AstNode.");return(null==options?void 0:options.range)&&!isAstNodeInRange(root,options.range)?new _stream_js__WEBPACK_IMPORTED_MODULE_1__.Vj(root,()=>[]):new _stream_js__WEBPACK_IMPORTED_MODULE_1__.Vj(root,node=>streamContents(node,options),{includeRoot:!0})}function isAstNodeInRange(astNode,range){var _a;if(!range)return!0;const nodeRange=null===(_a=astNode.$cstNode)||void 0===_a?void 0:_a.range;return!!nodeRange&&(0,_cst_utils_js__WEBPACK_IMPORTED_MODULE_2__.r4)(nodeRange,range)}function streamReferences(node){return new _stream_js__WEBPACK_IMPORTED_MODULE_1__.fq(()=>({keys:Object.keys(node),keyIndex:0,arrayIndex:0}),state=>{for(;state.keyIndex<state.keys.length;){const property=state.keys[state.keyIndex];if(!property.startsWith("$")){const value=node[property];if((0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.A_)(value))return state.keyIndex++,{done:!1,value:{reference:value,container:node,property}};if(Array.isArray(value)){for(;state.arrayIndex<value.length;){const index=state.arrayIndex++,element=value[index];if((0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.A_)(element))return{done:!1,value:{reference:element,container:node,property,index}}}state.arrayIndex=0}}state.keyIndex++}return _stream_js__WEBPACK_IMPORTED_MODULE_1__.Rf})}function assignMandatoryProperties(reflection,node){const typeMetaData=reflection.getTypeMetaData(node.$type),genericNode=node;for(const property of typeMetaData.properties)void 0!==property.defaultValue&&void 0===genericNode[property.name]&&(genericNode[property.name]=copyDefaultValue(property.defaultValue))}function copyDefaultValue(propertyType){return Array.isArray(propertyType)?[...propertyType.map(copyDefaultValue)]:propertyType}},"./node_modules/langium/lib/utils/cst-utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{El:()=>DefaultNameRegexp,NS:()=>streamCst,SX:()=>toDocumentSegment,pO:()=>isChildNode,r4:()=>inRange,v:()=>findCommentNode,wf:()=>tokenToRange});var RangeComparison,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/langium/lib/syntax-tree.js"),_stream_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/utils/stream.js");function streamCst(node){return new _stream_js__WEBPACK_IMPORTED_MODULE_1__.Vj(node,element=>(0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.mD)(element)?element.content:[],{includeRoot:!0})}function isChildNode(child,parent){for(;child.container;)if((child=child.container)===parent)return!0;return!1}function tokenToRange(token){return{start:{character:token.startColumn-1,line:token.startLine-1},end:{character:token.endColumn,line:token.endLine-1}}}function toDocumentSegment(node){if(!node)return;const{offset,end,range}=node;return{range,offset,end,length:end-offset}}function inRange(range,to){const comparison=function compareRange(range,to){if(range.end.line<to.start.line||range.end.line===to.start.line&&range.end.character<=to.start.character)return RangeComparison.Before;if(range.start.line>to.end.line||range.start.line===to.end.line&&range.start.character>=to.end.character)return RangeComparison.After;const startInside=range.start.line>to.start.line||range.start.line===to.start.line&&range.start.character>=to.start.character,endInside=range.end.line<to.end.line||range.end.line===to.end.line&&range.end.character<=to.end.character;return startInside&&endInside?RangeComparison.Inside:startInside?RangeComparison.OverlapBack:endInside?RangeComparison.OverlapFront:RangeComparison.Outside}(range,to);return comparison>RangeComparison.After}!function(RangeComparison){RangeComparison[RangeComparison.Before=0]="Before",RangeComparison[RangeComparison.After=1]="After",RangeComparison[RangeComparison.OverlapFront=2]="OverlapFront",RangeComparison[RangeComparison.OverlapBack=3]="OverlapBack",RangeComparison[RangeComparison.Inside=4]="Inside",RangeComparison[RangeComparison.Outside=5]="Outside"}(RangeComparison||(RangeComparison={}));const DefaultNameRegexp=/^[\w\p{L}]$/u;function findCommentNode(cstNode,commentNames){if(cstNode){const previous=function getPreviousNode(node,hidden=!0){for(;node.container;){const parent=node.container;let index=parent.content.indexOf(node);for(;index>0;){index--;const previous=parent.content[index];if(hidden||!previous.hidden)return previous}node=parent}return}(cstNode,!0);if(previous&&isCommentNode(previous,commentNames))return previous;if((0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.br)(cstNode)){for(let i=cstNode.content.findIndex(e=>!e.hidden)-1;i>=0;i--){const child=cstNode.content[i];if(isCommentNode(child,commentNames))return child}}}}function isCommentNode(cstNode,commentNames){return(0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_0__.FC)(cstNode)&&commentNames.includes(cstNode.tokenType.name)}},"./node_modules/langium/lib/utils/errors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>ErrorWithLocation,d:()=>assertUnreachable});class ErrorWithLocation extends Error{constructor(node,message){super(node?`${message} at ${node.range.start.line}:${node.range.start.character}`:message)}}function assertUnreachable(_){throw new Error("Error! The input value was not handled.")}},"./node_modules/langium/lib/utils/grammar-utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bd:()=>findNodesForProperty,P3:()=>getRuleType,PV:()=>getExplicitRuleType,Rp:()=>findAssignment,S:()=>terminalRegex,SS:()=>findNodeForKeyword,U5:()=>findNameAssignment,Uz:()=>getTypeName,Xq:()=>isDataTypeRule,YV:()=>getAllReachableRules,eb:()=>isCommentTerminal,g4:()=>getCrossReferenceTerminal,qO:()=>findNodeForProperty});var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/langium/lib/utils/errors.js"),_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/langium/lib/languages/generated/ast.js"),_syntax_tree_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/langium/lib/syntax-tree.js"),_ast_utils_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/langium/lib/utils/ast-utils.js"),_cst_utils_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/langium/lib/utils/cst-utils.js"),_regexp_utils_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/langium/lib/utils/regexp-utils.js");function getAllReachableRules(grammar,allTerminals){const ruleNames=new Set,entryRule=function getEntryRule(grammar){return grammar.rules.find(e=>_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.s7(e)&&e.entry)}(grammar);if(!entryRule)return new Set(grammar.rules);const topMostRules=[entryRule].concat(function getHiddenRules(grammar){return grammar.rules.filter(e=>_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.rE(e)&&e.hidden)}(grammar));for(const rule of topMostRules)ruleDfs(rule,ruleNames,allTerminals);const rules=new Set;for(const rule of grammar.rules)(ruleNames.has(rule.name)||_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.rE(rule)&&rule.hidden)&&rules.add(rule);return rules}function ruleDfs(rule,visitedSet,allTerminals){visitedSet.add(rule.name),(0,_ast_utils_js__WEBPACK_IMPORTED_MODULE_3__.Uo)(rule).forEach(node=>{if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.$g(node)||allTerminals&&_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.lF(node)){const refRule=node.rule.ref;refRule&&!visitedSet.has(refRule.name)&&ruleDfs(refRule,visitedSet,allTerminals)}})}function getCrossReferenceTerminal(crossRef){if(crossRef.terminal)return crossRef.terminal;if(crossRef.type.ref){const nameAssigment=findNameAssignment(crossRef.type.ref);return null==nameAssigment?void 0:nameAssigment.terminal}}function isCommentTerminal(terminalRule){return terminalRule.hidden&&!(0,_regexp_utils_js__WEBPACK_IMPORTED_MODULE_5__.Yv)(terminalRegex(terminalRule))}function findNodesForProperty(node,property){return node&&property?findNodesForPropertyInternal(node,property,node.astNode,!0):[]}function findNodeForProperty(node,property,index){if(!node||!property)return;const nodes=findNodesForPropertyInternal(node,property,node.astNode,!0);return 0!==nodes.length?nodes[index=void 0!==index?Math.max(0,Math.min(index,nodes.length-1)):0]:void 0}function findNodesForPropertyInternal(node,property,element,first){if(!first){const nodeFeature=(0,_ast_utils_js__WEBPACK_IMPORTED_MODULE_3__.XG)(node.grammarSource,_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.wh);if(nodeFeature&&nodeFeature.feature===property)return[node]}return(0,_syntax_tree_js__WEBPACK_IMPORTED_MODULE_2__.mD)(node)&&node.astNode===element?node.content.flatMap(e=>findNodesForPropertyInternal(e,property,element,!1)):[]}function findNodeForKeyword(node,keyword,index){if(!node)return;const nodes=findNodesForKeywordInternal(node,keyword,null==node?void 0:node.astNode);return 0!==nodes.length?nodes[index=void 0!==index?Math.max(0,Math.min(index,nodes.length-1)):0]:void 0}function findNodesForKeywordInternal(node,keyword,element){if(node.astNode!==element)return[];if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.wb(node.grammarSource)&&node.grammarSource.value===keyword)return[node];const treeIterator=(0,_cst_utils_js__WEBPACK_IMPORTED_MODULE_4__.NS)(node).iterator();let result;const keywordNodes=[];do{if(result=treeIterator.next(),!result.done){const childNode=result.value;childNode.astNode===element?_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.wb(childNode.grammarSource)&&childNode.grammarSource.value===keyword&&keywordNodes.push(childNode):treeIterator.prune()}}while(!result.done);return keywordNodes}function findAssignment(cstNode){var _a;const astNode=cstNode.astNode;for(;astNode===(null===(_a=cstNode.container)||void 0===_a?void 0:_a.astNode);){const assignment=(0,_ast_utils_js__WEBPACK_IMPORTED_MODULE_3__.XG)(cstNode.grammarSource,_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.wh);if(assignment)return assignment;cstNode=cstNode.container}}function findNameAssignment(type){let startNode=type;return _languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.SP(startNode)&&(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.ve(startNode.$container)?startNode=startNode.$container.$container:_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.s7(startNode.$container)?startNode=startNode.$container:(0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.d)(startNode.$container)),findNameAssignmentInternal(type,startNode,new Map)}function findNameAssignmentInternal(type,startNode,cache){var _a;function go(node,refType){let childAssignment;return(0,_ast_utils_js__WEBPACK_IMPORTED_MODULE_3__.XG)(node,_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.wh)||(childAssignment=findNameAssignmentInternal(refType,refType,cache)),cache.set(type,childAssignment),childAssignment}if(cache.has(type))return cache.get(type);cache.set(type,void 0);for(const node of(0,_ast_utils_js__WEBPACK_IMPORTED_MODULE_3__.Uo)(startNode)){if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.wh(node)&&"name"===node.feature.toLowerCase())return cache.set(type,node),node;if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.$g(node)&&_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.s7(node.rule.ref))return go(node,node.rule.ref);if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.D8(node)&&(null===(_a=node.typeRef)||void 0===_a?void 0:_a.ref))return go(node,node.typeRef.ref)}}function isDataTypeRule(rule){return isDataTypeRuleInternal(rule,new Set)}function isDataTypeRuleInternal(rule,visited){if(visited.has(rule))return!0;visited.add(rule);for(const node of(0,_ast_utils_js__WEBPACK_IMPORTED_MODULE_3__.Uo)(rule))if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.$g(node)){if(!node.rule.ref)return!1;if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.s7(node.rule.ref)&&!isDataTypeRuleInternal(node.rule.ref,visited))return!1}else{if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.wh(node))return!1;if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.ve(node))return!1}return Boolean(rule.definition)}function getExplicitRuleType(rule){if(rule.inferredType)return rule.inferredType.name;if(rule.dataType)return rule.dataType;if(rule.returnType){const refType=rule.returnType.ref;if(refType){if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.s7(refType))return refType.name;if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.S2(refType)||_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.Xj(refType))return refType.name}}}function getTypeName(type){var _a;if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.s7(type))return isDataTypeRule(type)?type.name:null!==(_a=getExplicitRuleType(type))&&void 0!==_a?_a:type.name;if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.S2(type)||_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.Xj(type)||_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.fG(type))return type.name;if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.ve(type)){const actionType=function getActionType(action){var _a;if(action.inferredType)return action.inferredType.name;if(null===(_a=action.type)||void 0===_a?void 0:_a.ref)return getTypeName(action.type.ref);return}(type);if(actionType)return actionType}else if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.SP(type))return type.name;throw new Error("Cannot get name of Unknown Type")}function getRuleType(rule){var _a,_b,_c;return _languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.rE(rule)?null!==(_b=null===(_a=rule.type)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:"string":null!==(_c=getExplicitRuleType(rule))&&void 0!==_c?_c:rule.name}function terminalRegex(terminalRule){const flags={s:!1,i:!1,u:!1},source=abstractElementToRegex(terminalRule.definition,flags),flagText=Object.entries(flags).filter(([,value])=>value).map(([name])=>name).join("");return new RegExp(source,flagText)}const WILDCARD=/[\s\S]/.source;function abstractElementToRegex(element,flags){if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.Fy(element))return function terminalAlternativesToRegex(alternatives){return withCardinality(alternatives.elements.map(e=>abstractElementToRegex(e)).join("|"),{cardinality:alternatives.cardinality,lookahead:alternatives.lookahead})}(element);if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.O4(element))return function terminalGroupToRegex(group){return withCardinality(group.elements.map(e=>abstractElementToRegex(e)).join(""),{cardinality:group.cardinality,lookahead:group.lookahead})}(element);if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.Bg(element))return function characterRangeToRegex(range){if(range.right)return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`,{cardinality:range.cardinality,lookahead:range.lookahead,wrap:!1});return withCardinality(keywordToRegex(range.left),{cardinality:range.cardinality,lookahead:range.lookahead,wrap:!1})}(element);if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.lF(element)){const rule=element.rule.ref;if(!rule)throw new Error("Missing rule reference.");return withCardinality(abstractElementToRegex(rule.definition),{cardinality:element.cardinality,lookahead:element.lookahead})}if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.GL(element))return function negateTokenToRegex(negate){return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`,{cardinality:negate.cardinality,lookahead:negate.lookahead})}(element);if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.Mz(element))return function untilTokenToRegex(until){return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`,{cardinality:until.cardinality,lookahead:until.lookahead})}(element);if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.vd(element)){const lastSlash=element.regex.lastIndexOf("/"),source=element.regex.substring(1,lastSlash),regexFlags=element.regex.substring(lastSlash+1);return flags&&(flags.i=regexFlags.includes("i"),flags.s=regexFlags.includes("s"),flags.u=regexFlags.includes("u")),withCardinality(source,{cardinality:element.cardinality,lookahead:element.lookahead,wrap:!1})}if(_languages_generated_ast_js__WEBPACK_IMPORTED_MODULE_1__.z2(element))return withCardinality(WILDCARD,{cardinality:element.cardinality,lookahead:element.lookahead});throw new Error(`Invalid terminal element: ${null==element?void 0:element.$type}`)}function keywordToRegex(keyword){return(0,_regexp_utils_js__WEBPACK_IMPORTED_MODULE_5__.Nt)(keyword.value)}function withCardinality(regex,options){var _a;return(!1!==options.wrap||options.lookahead)&&(regex=`(${null!==(_a=options.lookahead)&&void 0!==_a?_a:""}${regex})`),options.cardinality?`${regex}${options.cardinality}`:regex}},"./node_modules/langium/lib/utils/regexp-utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ao:()=>getCaseInsensitivePattern,Nt:()=>escapeRegExp,PC:()=>partialMatches,TH:()=>NEWLINE_REGEXP,Yv:()=>isWhitespace,lU:()=>isMultilineComment});var _chevrotain_regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@chevrotain/regexp-to-ast/lib/src/api.js");const NEWLINE_REGEXP=/\r?\n/gm,regexpParser=new _chevrotain_regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__.H;class TerminalRegExpVisitor extends _chevrotain_regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__.z{constructor(){super(...arguments),this.isStarting=!0,this.endRegexpStack=[],this.multiline=!1}get endRegex(){return this.endRegexpStack.join("")}reset(regex){this.multiline=!1,this.regex=regex,this.startRegexp="",this.isStarting=!0,this.endRegexpStack=[]}visitGroup(node){node.quantifier&&(this.isStarting=!1,this.endRegexpStack=[])}visitCharacter(node){const char=String.fromCharCode(node.value);if(this.multiline||"\n"!==char||(this.multiline=!0),node.quantifier)this.isStarting=!1,this.endRegexpStack=[];else{const escapedChar=escapeRegExp(char);this.endRegexpStack.push(escapedChar),this.isStarting&&(this.startRegexp+=escapedChar)}}visitSet(node){if(!this.multiline){const set=this.regex.substring(node.loc.begin,node.loc.end),regex=new RegExp(set);this.multiline=Boolean("\n".match(regex))}if(node.quantifier)this.isStarting=!1,this.endRegexpStack=[];else{const set=this.regex.substring(node.loc.begin,node.loc.end);this.endRegexpStack.push(set),this.isStarting&&(this.startRegexp+=set)}}visitChildren(node){if("Group"===node.type){if(node.quantifier)return}super.visitChildren(node)}}const visitor=new TerminalRegExpVisitor;function isMultilineComment(regexp){try{return"string"==typeof regexp&&(regexp=new RegExp(regexp)),regexp=regexp.toString(),visitor.reset(regexp),visitor.visit(regexpParser.pattern(regexp)),visitor.multiline}catch(_a){return!1}}const whitespaceCharacters="\f\n\r\t\v              \u2028\u2029  　\ufeff".split("");function isWhitespace(value){const regexp="string"==typeof value?new RegExp(value):value;return whitespaceCharacters.some(ws=>regexp.test(ws))}function escapeRegExp(value){return value.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function getCaseInsensitivePattern(keyword){return Array.prototype.map.call(keyword,letter=>/\w/.test(letter)?`[${letter.toLowerCase()}${letter.toUpperCase()}]`:escapeRegExp(letter)).join("")}function partialMatches(regex,input){const partial=function partialRegExp(regex){"string"==typeof regex&&(regex=new RegExp(regex));const re=regex,source=regex.source;let i=0;function process(){let tmp,result="";function appendRaw(nbChars){result+=source.substr(i,nbChars),i+=nbChars}function appendOptional(nbChars){result+="(?:"+source.substr(i,nbChars)+"|$)",i+=nbChars}for(;i<source.length;)switch(source[i]){case"\\":switch(source[i+1]){case"c":appendOptional(3);break;case"x":appendOptional(4);break;case"u":re.unicode?"{"===source[i+2]?appendOptional(source.indexOf("}",i)-i+1):appendOptional(6):appendOptional(2);break;case"p":case"P":re.unicode?appendOptional(source.indexOf("}",i)-i+1):appendOptional(2);break;case"k":appendOptional(source.indexOf(">",i)-i+1);break;default:appendOptional(2)}break;case"[":tmp=/\[(?:\\.|.)*?\]/g,tmp.lastIndex=i,tmp=tmp.exec(source)||[],appendOptional(tmp[0].length);break;case"|":case"^":case"$":case"*":case"+":case"?":appendRaw(1);break;case"{":tmp=/\{\d+,?\d*\}/g,tmp.lastIndex=i,tmp=tmp.exec(source),tmp?appendRaw(tmp[0].length):appendOptional(1);break;case"(":if("?"===source[i+1])switch(source[i+2]){case":":result+="(?:",i+=3,result+=process()+"|$)";break;case"=":result+="(?=",i+=3,result+=process()+")";break;case"!":tmp=i,i+=3,process(),result+=source.substr(tmp,i-tmp);break;case"<":switch(source[i+3]){case"=":case"!":tmp=i,i+=4,process(),result+=source.substr(tmp,i-tmp);break;default:appendRaw(source.indexOf(">",i)-i+1),result+=process()+"|$)"}}else appendRaw(1),result+=process()+"|$)";break;case")":return++i,result;default:appendOptional(1)}return result}return new RegExp(process(),regex.flags)}(regex),match=input.match(partial);return!!match&&match[0].length>0}},"./node_modules/langium/lib/utils/stream.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B5:()=>EMPTY_STREAM,Rf:()=>DONE_RESULT,Td:()=>stream,Vj:()=>TreeStreamImpl,fq:()=>StreamImpl,iD:()=>Reduction});class StreamImpl{constructor(startFn,nextFn){this.startFn=startFn,this.nextFn=nextFn}iterator(){const iterator={state:this.startFn(),next:()=>this.nextFn(iterator.state),[Symbol.iterator]:()=>iterator};return iterator}[Symbol.iterator](){return this.iterator()}isEmpty(){const iterator=this.iterator();return Boolean(iterator.next().done)}count(){const iterator=this.iterator();let count=0,next=iterator.next();for(;!next.done;)count++,next=iterator.next();return count}toArray(){const result=[],iterator=this.iterator();let next;do{next=iterator.next(),void 0!==next.value&&result.push(next.value)}while(!next.done);return result}toSet(){return new Set(this)}toMap(keyFn,valueFn){const entryStream=this.map(element=>[keyFn?keyFn(element):element,valueFn?valueFn(element):element]);return new Map(entryStream)}toString(){return this.join()}concat(other){return new StreamImpl(()=>({first:this.startFn(),firstDone:!1,iterator:other[Symbol.iterator]()}),state=>{let result;if(!state.firstDone){do{if(result=this.nextFn(state.first),!result.done)return result}while(!result.done);state.firstDone=!0}do{if(result=state.iterator.next(),!result.done)return result}while(!result.done);return DONE_RESULT})}join(separator=","){const iterator=this.iterator();let result,value="",addSeparator=!1;do{result=iterator.next(),result.done||(addSeparator&&(value+=separator),value+=toString(result.value)),addSeparator=!0}while(!result.done);return value}indexOf(searchElement,fromIndex=0){const iterator=this.iterator();let index=0,next=iterator.next();for(;!next.done;){if(index>=fromIndex&&next.value===searchElement)return index;next=iterator.next(),index++}return-1}every(predicate){const iterator=this.iterator();let next=iterator.next();for(;!next.done;){if(!predicate(next.value))return!1;next=iterator.next()}return!0}some(predicate){const iterator=this.iterator();let next=iterator.next();for(;!next.done;){if(predicate(next.value))return!0;next=iterator.next()}return!1}forEach(callbackfn){const iterator=this.iterator();let index=0,next=iterator.next();for(;!next.done;)callbackfn(next.value,index),next=iterator.next(),index++}map(callbackfn){return new StreamImpl(this.startFn,state=>{const{done,value}=this.nextFn(state);return done?DONE_RESULT:{done:!1,value:callbackfn(value)}})}filter(predicate){return new StreamImpl(this.startFn,state=>{let result;do{if(result=this.nextFn(state),!result.done&&predicate(result.value))return result}while(!result.done);return DONE_RESULT})}nonNullable(){return this.filter(e=>null!=e)}reduce(callbackfn,initialValue){const iterator=this.iterator();let previousValue=initialValue,next=iterator.next();for(;!next.done;)previousValue=void 0===previousValue?next.value:callbackfn(previousValue,next.value),next=iterator.next();return previousValue}reduceRight(callbackfn,initialValue){return this.recursiveReduce(this.iterator(),callbackfn,initialValue)}recursiveReduce(iterator,callbackfn,initialValue){const next=iterator.next();if(next.done)return initialValue;const previousValue=this.recursiveReduce(iterator,callbackfn,initialValue);return void 0===previousValue?next.value:callbackfn(previousValue,next.value)}find(predicate){const iterator=this.iterator();let next=iterator.next();for(;!next.done;){if(predicate(next.value))return next.value;next=iterator.next()}}findIndex(predicate){const iterator=this.iterator();let index=0,next=iterator.next();for(;!next.done;){if(predicate(next.value))return index;next=iterator.next(),index++}return-1}includes(searchElement){const iterator=this.iterator();let next=iterator.next();for(;!next.done;){if(next.value===searchElement)return!0;next=iterator.next()}return!1}flatMap(callbackfn){return new StreamImpl(()=>({this:this.startFn()}),state=>{do{if(state.iterator){const next=state.iterator.next();if(!next.done)return next;state.iterator=void 0}const{done,value}=this.nextFn(state.this);if(!done){const mapped=callbackfn(value);if(!isIterable(mapped))return{done:!1,value:mapped};state.iterator=mapped[Symbol.iterator]()}}while(state.iterator);return DONE_RESULT})}flat(depth){if(void 0===depth&&(depth=1),depth<=0)return this;const stream=depth>1?this.flat(depth-1):this;return new StreamImpl(()=>({this:stream.startFn()}),state=>{do{if(state.iterator){const next=state.iterator.next();if(!next.done)return next;state.iterator=void 0}const{done,value}=stream.nextFn(state.this);if(!done){if(!isIterable(value))return{done:!1,value};state.iterator=value[Symbol.iterator]()}}while(state.iterator);return DONE_RESULT})}head(){const result=this.iterator().next();if(!result.done)return result.value}tail(skipCount=1){return new StreamImpl(()=>{const state=this.startFn();for(let i=0;i<skipCount;i++){if(this.nextFn(state).done)return state}return state},this.nextFn)}limit(maxSize){return new StreamImpl(()=>({size:0,state:this.startFn()}),state=>(state.size++,state.size>maxSize?DONE_RESULT:this.nextFn(state.state)))}distinct(by){return new StreamImpl(()=>({set:new Set,internalState:this.startFn()}),state=>{let result;do{if(result=this.nextFn(state.internalState),!result.done){const value=by?by(result.value):result.value;if(!state.set.has(value))return state.set.add(value),result}}while(!result.done);return DONE_RESULT})}exclude(other,key){const otherKeySet=new Set;for(const item of other){const value=key?key(item):item;otherKeySet.add(value)}return this.filter(e=>{const ownKey=key?key(e):e;return!otherKeySet.has(ownKey)})}}function toString(item){return"string"==typeof item?item:void 0===item?"undefined":"function"==typeof item.toString?item.toString():Object.prototype.toString.call(item)}function isIterable(obj){return!!obj&&"function"==typeof obj[Symbol.iterator]}const EMPTY_STREAM=new StreamImpl(()=>{},()=>DONE_RESULT),DONE_RESULT=Object.freeze({done:!0,value:void 0});function stream(...collections){if(1===collections.length){const collection=collections[0];if(collection instanceof StreamImpl)return collection;if(isIterable(collection))return new StreamImpl(()=>collection[Symbol.iterator](),iterator=>iterator.next());if("number"==typeof collection.length)return new StreamImpl(()=>({index:0}),state=>state.index<collection.length?{done:!1,value:collection[state.index++]}:DONE_RESULT)}return collections.length>1?new StreamImpl(()=>({collIndex:0,arrIndex:0}),state=>{do{if(state.iterator){const next=state.iterator.next();if(!next.done)return next;state.iterator=void 0}if(state.array){if(state.arrIndex<state.array.length)return{done:!1,value:state.array[state.arrIndex++]};state.array=void 0,state.arrIndex=0}if(state.collIndex<collections.length){const collection=collections[state.collIndex++];isIterable(collection)?state.iterator=collection[Symbol.iterator]():collection&&"number"==typeof collection.length&&(state.array=collection)}}while(state.iterator||state.array||state.collIndex<collections.length);return DONE_RESULT}):EMPTY_STREAM}class TreeStreamImpl extends StreamImpl{constructor(root,children,options){super(()=>({iterators:(null==options?void 0:options.includeRoot)?[[root][Symbol.iterator]()]:[children(root)[Symbol.iterator]()],pruned:!1}),state=>{for(state.pruned&&(state.iterators.pop(),state.pruned=!1);state.iterators.length>0;){const next=state.iterators[state.iterators.length-1].next();if(!next.done)return state.iterators.push(children(next.value)[Symbol.iterator]()),next;state.iterators.pop()}return DONE_RESULT})}iterator(){const iterator={state:this.startFn(),next:()=>this.nextFn(iterator.state),prune:()=>{iterator.state.pruned=!0},[Symbol.iterator]:()=>iterator};return iterator}}var Reduction;!function(Reduction){Reduction.sum=function sum(stream){return stream.reduce((a,b)=>a+b,0)},Reduction.product=function product(stream){return stream.reduce((a,b)=>a*b,0)},Reduction.min=function min(stream){return stream.reduce((a,b)=>Math.min(a,b))},Reduction.max=function max(stream){return stream.reduce((a,b)=>Math.max(a,b))}}(Reduction||(Reduction={}))},"./node_modules/langium/lib/workspace/file-system-provider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>EmptyFileSystem});class EmptyFileSystemProvider{readFile(){throw new Error("No file system is available.")}async readDirectory(){return[]}}const EmptyFileSystem={fileSystemProvider:()=>new EmptyFileSystemProvider}},"./node_modules/lodash-es/_baseExtremum.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _isSymbol_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/isSymbol.js");const __WEBPACK_DEFAULT_EXPORT__=function baseExtremum(array,iteratee,comparator){for(var index=-1,length=array.length;++index<length;){var value=array[index],current=iteratee(value);if(null!=current&&(void 0===computed?current==current&&!(0,_isSymbol_js__WEBPACK_IMPORTED_MODULE_0__.A)(current):comparator(current,computed)))var computed=current,result=value}return result}},"./node_modules/lodash-es/_baseLt.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=function baseLt(value,other){return value<other}},"./node_modules/lodash-es/_baseMap.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _baseEach_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_baseEach.js"),_isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/isArrayLike.js");const __WEBPACK_DEFAULT_EXPORT__=function baseMap(collection,iteratee){var index=-1,result=(0,_isArrayLike_js__WEBPACK_IMPORTED_MODULE_1__.A)(collection)?Array(collection.length):[];return(0,_baseEach_js__WEBPACK_IMPORTED_MODULE_0__.A)(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection)}),result}},"./node_modules/lodash-es/_basePickBy.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>_basePickBy});var _baseGet=__webpack_require__("./node_modules/lodash-es/_baseGet.js"),_assignValue=__webpack_require__("./node_modules/lodash-es/_assignValue.js"),_castPath=__webpack_require__("./node_modules/lodash-es/_castPath.js"),_isIndex=__webpack_require__("./node_modules/lodash-es/_isIndex.js"),isObject=__webpack_require__("./node_modules/lodash-es/isObject.js"),_toKey=__webpack_require__("./node_modules/lodash-es/_toKey.js");const _baseSet=function baseSet(object,path,value,customizer){if(!(0,isObject.A)(object))return object;for(var index=-1,length=(path=(0,_castPath.A)(path,object)).length,lastIndex=length-1,nested=object;null!=nested&&++index<length;){var key=(0,_toKey.A)(path[index]),newValue=value;if("__proto__"===key||"constructor"===key||"prototype"===key)return object;if(index!=lastIndex){var objValue=nested[key];void 0===(newValue=customizer?customizer(objValue,key,nested):void 0)&&(newValue=(0,isObject.A)(objValue)?objValue:(0,_isIndex.A)(path[index+1])?[]:{})}(0,_assignValue.A)(nested,key,newValue),nested=nested[key]}return object};const _basePickBy=function basePickBy(object,paths,predicate){for(var index=-1,length=paths.length,result={};++index<length;){var path=paths[index],value=(0,_baseGet.A)(object,path);predicate(value,path)&&_baseSet(result,(0,_castPath.A)(path,object),value)}return result}},"./node_modules/lodash-es/clone.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_baseClone.js");const __WEBPACK_DEFAULT_EXPORT__=function clone(value){return(0,_baseClone_js__WEBPACK_IMPORTED_MODULE_0__.A)(value,4)}},"./node_modules/lodash-es/defaults.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _baseRest_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_baseRest.js"),_eq_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/eq.js"),_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lodash-es/_isIterateeCall.js"),_keysIn_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lodash-es/keysIn.js"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;const __WEBPACK_DEFAULT_EXPORT__=(0,_baseRest_js__WEBPACK_IMPORTED_MODULE_0__.A)(function(object,sources){object=Object(object);var index=-1,length=sources.length,guard=length>2?sources[2]:void 0;for(guard&&(0,_isIterateeCall_js__WEBPACK_IMPORTED_MODULE_2__.A)(sources[0],sources[1],guard)&&(length=1);++index<length;)for(var source=sources[index],props=(0,_keysIn_js__WEBPACK_IMPORTED_MODULE_3__.A)(source),propsIndex=-1,propsLength=props.length;++propsIndex<propsLength;){var key=props[propsIndex],value=object[key];(void 0===value||(0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.A)(value,objectProto[key])&&!hasOwnProperty.call(object,key))&&(object[key]=source[key])}return object})},"./node_modules/lodash-es/find.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>lodash_es_find});var _baseIteratee=__webpack_require__("./node_modules/lodash-es/_baseIteratee.js"),isArrayLike=__webpack_require__("./node_modules/lodash-es/isArrayLike.js"),keys=__webpack_require__("./node_modules/lodash-es/keys.js");const _createFind=function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!(0,isArrayLike.A)(collection)){var iteratee=(0,_baseIteratee.A)(predicate,3);collection=(0,keys.A)(collection),predicate=function(key){return iteratee(iterable[key],key,iterable)}}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:void 0}};var _baseFindIndex=__webpack_require__("./node_modules/lodash-es/_baseFindIndex.js"),toInteger=__webpack_require__("./node_modules/lodash-es/toInteger.js"),nativeMax=Math.max;const lodash_es_find=_createFind(function findIndex(array,predicate,fromIndex){var length=null==array?0:array.length;if(!length)return-1;var index=null==fromIndex?0:(0,toInteger.A)(fromIndex);return index<0&&(index=nativeMax(length+index,0)),(0,_baseFindIndex.A)(array,(0,_baseIteratee.A)(predicate,3),index)})},"./node_modules/lodash-es/flatMap.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_baseFlatten.js"),_map_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/map.js");const __WEBPACK_DEFAULT_EXPORT__=function flatMap(collection,iteratee){return(0,_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__.A)((0,_map_js__WEBPACK_IMPORTED_MODULE_1__.A)(collection,iteratee),1)}},"./node_modules/lodash-es/flatten.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_baseFlatten.js");const __WEBPACK_DEFAULT_EXPORT__=function flatten(array){return(null==array?0:array.length)?(0,_baseFlatten_js__WEBPACK_IMPORTED_MODULE_0__.A)(array,1):[]}},"./node_modules/lodash-es/has.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>lodash_es_has});var _baseHas_hasOwnProperty=Object.prototype.hasOwnProperty;const _baseHas=function baseHas(object,key){return null!=object&&_baseHas_hasOwnProperty.call(object,key)};var _hasPath=__webpack_require__("./node_modules/lodash-es/_hasPath.js");const lodash_es_has=function has(object,path){return null!=object&&(0,_hasPath.A)(object,path,_baseHas)}},"./node_modules/lodash-es/isString.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_baseGetTag.js"),_isArray_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/isArray.js"),_isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lodash-es/isObjectLike.js");const __WEBPACK_DEFAULT_EXPORT__=function isString(value){return"string"==typeof value||!(0,_isArray_js__WEBPACK_IMPORTED_MODULE_1__.A)(value)&&(0,_isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__.A)(value)&&"[object String]"==(0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__.A)(value)}},"./node_modules/lodash-es/last.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=function last(array){var length=null==array?0:array.length;return length?array[length-1]:void 0}},"./node_modules/lodash-es/map.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _arrayMap_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_arrayMap.js"),_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/_baseIteratee.js"),_baseMap_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lodash-es/_baseMap.js"),_isArray_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lodash-es/isArray.js");const __WEBPACK_DEFAULT_EXPORT__=function map(collection,iteratee){return((0,_isArray_js__WEBPACK_IMPORTED_MODULE_3__.A)(collection)?_arrayMap_js__WEBPACK_IMPORTED_MODULE_0__.A:_baseMap_js__WEBPACK_IMPORTED_MODULE_2__.A)(collection,(0,_baseIteratee_js__WEBPACK_IMPORTED_MODULE_1__.A)(iteratee,3))}},"./node_modules/lodash-es/min.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_baseExtremum.js"),_baseLt_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/_baseLt.js"),_identity_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lodash-es/identity.js");const __WEBPACK_DEFAULT_EXPORT__=function min(array){return array&&array.length?(0,_baseExtremum_js__WEBPACK_IMPORTED_MODULE_0__.A)(array,_identity_js__WEBPACK_IMPORTED_MODULE_2__.A,_baseLt_js__WEBPACK_IMPORTED_MODULE_1__.A):void 0}},"./node_modules/lodash-es/toFinite.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _toNumber_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/toNumber.js");const __WEBPACK_DEFAULT_EXPORT__=function toFinite(value){return value?Infinity===(value=(0,_toNumber_js__WEBPACK_IMPORTED_MODULE_0__.A)(value))||-Infinity===value?17976931348623157e292*(value<0?-1:1):value==value?value:0:0===value?value:0}},"./node_modules/lodash-es/toInteger.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _toFinite_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/toFinite.js");const __WEBPACK_DEFAULT_EXPORT__=function toInteger(value){var result=(0,_toFinite_js__WEBPACK_IMPORTED_MODULE_0__.A)(value),remainder=result%1;return result==result?remainder?result-remainder:result:0}},"./node_modules/vscode-jsonrpc/lib/common/cancellation.js":(__unused_webpack_module,exports,__webpack_require__)=>{exports.Qi=exports.XO=void 0;const ral_1=__webpack_require__("./node_modules/vscode-jsonrpc/lib/common/ral.js"),Is=__webpack_require__("./node_modules/vscode-jsonrpc/lib/common/is.js"),events_1=__webpack_require__("./node_modules/vscode-jsonrpc/lib/common/events.js");var CancellationToken;!function(CancellationToken){CancellationToken.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:events_1.Event.None}),CancellationToken.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:events_1.Event.None}),CancellationToken.is=function is(value){const candidate=value;return candidate&&(candidate===CancellationToken.None||candidate===CancellationToken.Cancelled||Is.boolean(candidate.isCancellationRequested)&&!!candidate.onCancellationRequested)}}(CancellationToken||(exports.XO=CancellationToken={}));const shortcutEvent=Object.freeze(function(callback,context){const handle=(0,ral_1.default)().timer.setTimeout(callback.bind(context),0);return{dispose(){handle.dispose()}}});class MutableToken{constructor(){this._isCancelled=!1}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?shortcutEvent:(this._emitter||(this._emitter=new events_1.Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}}exports.Qi=class CancellationTokenSource{get token(){return this._token||(this._token=new MutableToken),this._token}cancel(){this._token?this._token.cancel():this._token=CancellationToken.Cancelled}dispose(){this._token?this._token instanceof MutableToken&&this._token.dispose():this._token=CancellationToken.None}}},"./node_modules/vscode-jsonrpc/lib/common/events.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Emitter=exports.Event=void 0;const ral_1=__webpack_require__("./node_modules/vscode-jsonrpc/lib/common/ral.js");var Event;!function(Event){const _disposable={dispose(){}};Event.None=function(){return _disposable}}(Event||(exports.Event=Event={}));class CallbackList{add(callback,context=null,bucket){this._callbacks||(this._callbacks=[],this._contexts=[]),this._callbacks.push(callback),this._contexts.push(context),Array.isArray(bucket)&&bucket.push({dispose:()=>this.remove(callback,context)})}remove(callback,context=null){if(!this._callbacks)return;let foundCallbackWithDifferentContext=!1;for(let i=0,len=this._callbacks.length;i<len;i++)if(this._callbacks[i]===callback){if(this._contexts[i]===context)return this._callbacks.splice(i,1),void this._contexts.splice(i,1);foundCallbackWithDifferentContext=!0}if(foundCallbackWithDifferentContext)throw new Error("When adding a listener with a context, you should remove it with the same context")}invoke(...args){if(!this._callbacks)return[];const ret=[],callbacks=this._callbacks.slice(0),contexts=this._contexts.slice(0);for(let i=0,len=callbacks.length;i<len;i++)try{ret.push(callbacks[i].apply(contexts[i],args))}catch(e){(0,ral_1.default)().console.error(e)}return ret}isEmpty(){return!this._callbacks||0===this._callbacks.length}dispose(){this._callbacks=void 0,this._contexts=void 0}}class Emitter{constructor(_options){this._options=_options}get event(){return this._event||(this._event=(listener,thisArgs,disposables)=>{this._callbacks||(this._callbacks=new CallbackList),this._options&&this._options.onFirstListenerAdd&&this._callbacks.isEmpty()&&this._options.onFirstListenerAdd(this),this._callbacks.add(listener,thisArgs);const result={dispose:()=>{this._callbacks&&(this._callbacks.remove(listener,thisArgs),result.dispose=Emitter._noop,this._options&&this._options.onLastListenerRemove&&this._callbacks.isEmpty()&&this._options.onLastListenerRemove(this))}};return Array.isArray(disposables)&&disposables.push(result),result}),this._event}fire(event){this._callbacks&&this._callbacks.invoke.call(this._callbacks,event)}dispose(){this._callbacks&&(this._callbacks.dispose(),this._callbacks=void 0)}}exports.Emitter=Emitter,Emitter._noop=function(){}},"./node_modules/vscode-jsonrpc/lib/common/is.js":(__unused_webpack_module,exports)=>{function string(value){return"string"==typeof value||value instanceof String}function array(value){return Array.isArray(value)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.stringArray=exports.array=exports.func=exports.error=exports.number=exports.string=exports.boolean=void 0,exports.boolean=function boolean(value){return!0===value||!1===value},exports.string=string,exports.number=function number(value){return"number"==typeof value||value instanceof Number},exports.error=function error(value){return value instanceof Error},exports.func=function func(value){return"function"==typeof value},exports.array=array,exports.stringArray=function stringArray(value){return array(value)&&value.every(elem=>string(elem))}},"./node_modules/vscode-jsonrpc/lib/common/ral.js":(__unused_webpack_module,exports)=>{let _ral;function RAL(){if(void 0===_ral)throw new Error("No runtime abstraction layer installed");return _ral}Object.defineProperty(exports,"__esModule",{value:!0}),function(RAL){RAL.install=function install(ral){if(void 0===ral)throw new Error("No runtime abstraction layer provided");_ral=ral}}(RAL||(RAL={})),exports.default=RAL},"./node_modules/vscode-uri/lib/esm/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var LIB;__webpack_require__.d(__webpack_exports__,{A:()=>Utils,r:()=>URI}),(()=>{var t={470:t=>{function e(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}function r(t,e){for(var r,n="",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf("/");if(a!==n.length-1){-1===a?(n="",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf("/"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n="",i=0,o=h,s=0;continue}e&&(n.length>0?n+="/..":n="..",i=2)}else n.length>0?n+="/"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n="",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+"/"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?"/"+n:"/":n.length>0?n:"."},normalize:function(t){if(e(t),0===t.length)return".";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t="."),t.length>0&&i&&(t+="/"),n?"/"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+="/"+i)}return void 0===t?".":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return"";if((t=n.resolve(t))===(r=n.resolve(r)))return"";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g="";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+="..":g+="/..");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return".";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?"/":".":n&&1===i?"//":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&"string"!=typeof r)throw new TypeError('"ext" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return"";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?"":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?"":t.slice(r,i)},format:function(t){if(null===t||"object"!=typeof t)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||"")+(e.ext||"");return r?r===e.root?r+n:r+"/"+n:n}(0,t)},parse:function(t){e(t);var r={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root="/",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir="/"),r},sep:"/",delimiter:":",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),"object"==typeof process)t="win32"===process.platform;else if("object"==typeof navigator){let e=navigator.userAgent;t=e.indexOf("Windows")>=0}const e=/^\w[\w\d+.-]*$/,i=/^\//,o=/^\/\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${t.authority}", path: "${t.path}", query: "${t.query}", fragment: "${t.fragment}"}`);if(t.scheme&&!e.test(t.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}const h="",a="/",c=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&"string"==typeof t.authority&&"string"==typeof t.fragment&&"string"==typeof t.path&&"string"==typeof t.query&&"string"==typeof t.scheme&&"string"==typeof t.fsPath&&"function"==typeof t.with&&"function"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){"object"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:"file"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case"https":case"http":case"file":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l("file",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&"file"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\//g,"\\")),n}function y(t,e){const r=e?p:d;let n="",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=":"),(o||"file"===i)&&(n+=a,n+=a),o){let t=o.indexOf("@");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(":"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=":",n+=r(e.substr(t+1),!1,!0)),n+="@"}o=o.toLowerCase(),t=o.lastIndexOf(":"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+="?",n+=r(h,!1,!1)),c&&(n+="#",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,t=>v(t)):t}var A=r(470);const w=A.posix||A,x="/";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=""),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();const{URI,Utils}=LIB}}]);