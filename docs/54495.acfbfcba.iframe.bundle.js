"use strict";(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[54495,92245],{"./src/components/organisms/ImageUploader/ImageUploaderModal.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ImageUploaderModal:()=>ImageUploaderModal});var react=__webpack_require__("./node_modules/react/index.js"),atoms=__webpack_require__("./src/components/atoms/index.tsx"),molecules=__webpack_require__("./src/components/molecules/index.tsx"),server=__webpack_require__("./src/components/server/index.ts"),settings=__webpack_require__("./src/settings/index.ts"),helpers=__webpack_require__("./src/helpers/index.ts"),useJukiNotification=__webpack_require__("./src/hooks/useJukiNotification.tsx"),types=__webpack_require__("./src/types/index.ts");const PublicImages=props=>{const{copyButtons,onPickImageUrl,publicImages}=props,{addNotification}=(0,useJukiNotification.E)();return react.createElement("div",{className:"public-images-tab jk-row"},publicImages.map((publicImage,index)=>react.createElement("div",{className:"thumbnail",key:publicImage.imageUrl},react.createElement("img",{src:publicImage.imageThumbnailUrl+"?v=".concat((new Date).getTime()),alt:"image "+index}),react.createElement(molecules.GK,{actionButtons:[...copyButtons?[{icon:react.createElement(server.c8I,null),buttons:[{icon:react.createElement(server.c8I,{size:"small"}),label:react.createElement(atoms.T,null,"URL"),onClick:()=>{(0,helpers.C)(publicImage.imageUrl),addNotification({type:types.NotificationType.QUIET,message:react.createElement(atoms.T,null,"copied")})}},{icon:react.createElement(server.c8I,null),label:react.createElement(atoms.T,null,"MD"),onClick:()=>{(0,helpers.C)("![image alt](".concat(publicImage.imageUrl,")")),addNotification({type:types.NotificationType.QUIET,message:react.createElement(atoms.T,null,"copied")})}}]}]:[],...onPickImageUrl?[{icon:react.createElement(server.Srz,null),buttons:[{icon:react.createElement(server.Srz,{size:"small"}),label:react.createElement(atoms.T,null,"pick"),onClick:()=>{onPickImageUrl(publicImage),addNotification({type:types.NotificationType.QUIET,message:react.createElement(atoms.T,null,"picked")})}}]}]:[]]}))))};PublicImages.__docgenInfo={description:"",methods:[],displayName:"PublicImages",props:{copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},publicImages:{required:!0,tsType:{name:"Array",elements:[{name:"ImageSummaryResponseDTO"}],raw:"ImageSummaryResponseDTO[]"},description:""}}};const PublicImagesTab=props=>react.createElement(molecules.pW,{url:settings.Z.API_V1.image.getPublicList().url,triggerFetch:props.trigger},_ref=>{let{data:{contents}}=_ref;return react.createElement(PublicImages,{publicImages:contents,copyButtons:props.copyButtons,onPickImageUrl:props.onPickImageUrl})});PublicImagesTab.__docgenInfo={description:"",methods:[],displayName:"PublicImagesTab",props:{trigger:{required:!0,tsType:{name:"number"},description:""},copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""}}};var esm=__webpack_require__("./node_modules/@juki-team/commons/dist/esm/index.js");const UploadNewImageTab=(0,react.memo)(_ref=>{let{copyButtons,onPickImageUrl,onUploadedImage}=_ref;const[imagePublicUrl,setImagePublicUrl]=(0,react.useState)(""),[cropImage,setCropImage]=(0,react.useState)(),[isPublic,setIsPublic]=(0,react.useState)(!1),{addNotification}=(0,useJukiNotification.E)();return react.createElement("div",{className:"upload-new-image-tab jk-col top gap"},imagePublicUrl&&react.createElement("div",{className:"jk-col left"},copyButtons&&react.createElement(react.Fragment,null,react.createElement("div",{className:"jk-row gap left fw-bd"},react.createElement(atoms.T,null,"public url"),":",react.createElement("div",{className:"copyable jk-row"},react.createElement("a",{href:imagePublicUrl,className:"link",target:"_blank",rel:"noreferrer"},imagePublicUrl),react.createElement(atoms.$r,{text:imagePublicUrl,size:"small"}))),react.createElement("div",{className:"jk-row gap left fw-bd"},react.createElement(atoms.T,null,"markdown use"),":",react.createElement("div",{className:"copyable jk-row"},react.createElement("span",{className:"tx-t fw-bd"},"![image alt](",imagePublicUrl,")"),react.createElement(atoms.$r,{text:"![image alt](".concat(imagePublicUrl,")"),size:"small"})))),onPickImageUrl&&react.createElement(atoms.$n,{onClick:()=>onPickImageUrl({imageUrl:imagePublicUrl,imageThumbnailUrl:imagePublicUrl.replace("https://images.juki.pub/o/","https://images.juki.pub/t/")}),size:"small",expand:!0},react.createElement(atoms.T,null,"pick"))),react.createElement(atoms.JN,{checked:isPublic,leftLabel:react.createElement(atoms.T,{className:(0,helpers.xW)("tt-se",{"fw-bd":!isPublic})},"not public"),rightLabel:react.createElement(atoms.T,{className:(0,helpers.xW)("tt-se",{"fw-bd":isPublic})},"public"),onChange:setIsPublic}),react.createElement(molecules.mT,{onClick:async setLoader=>{if(null!=cropImage&&cropImage.previewCanvasRef.current){const blob=await(0,helpers.ZR)(cropImage.previewCanvasRef.current);if(blob){null==setLoader||setLoader(esm.nW6.LOADING);const{status,message,content}=await(0,helpers.XO)(blob,isPublic);status===esm.nW6.SUCCESS?(addNotification({type:types.NotificationType.SUCCESS,message:react.createElement(atoms.T,null,message)}),null==setLoader||setLoader(esm.nW6.SUCCESS),setImagePublicUrl(content.imageUrl),onUploadedImage()):(addNotification({type:types.NotificationType.ERROR,message:react.createElement(atoms.T,null,message)}),null==setLoader||setLoader(esm.nW6.ERROR))}}},disabled:!cropImage||!(null!=cropImage&&cropImage.previewCanvasRef.current),size:"small"},react.createElement(atoms.T,null,"upload image")),react.createElement(molecules.MI,{onCropChange:setCropImage,withAspect:!0,withRotate:!0,withScale:!0}))});UploadNewImageTab.__docgenInfo={description:"",methods:[],displayName:"UploadNewImageTab",props:{copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onUploadedImage:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const ImageUploaderModal=props=>{const{isOpen,onClose,withPublicImagesTab=!0,copyButtons,onPickImageUrl}=props,[count,setCount]=(0,react.useState)(0),tabHeaders=[];return withPublicImagesTab&&tabHeaders.push({key:"public-images",header:react.createElement(react.Fragment,null,react.createElement(atoms.T,{className:"tt-se"},"public images"),react.createElement(atoms.$n,{icon:react.createElement(server.fNY,null),size:"small",type:"light",onClick:()=>setCount(count+1)})),body:react.createElement(PublicImagesTab,{trigger:count,key:"public-images-tab",copyButtons,onPickImageUrl})}),tabHeaders.push({key:"upload-new-image",header:react.createElement(atoms.T,{className:"tt-se"},"upload new image"),body:react.createElement(UploadNewImageTab,{key:"upload-new-image-tab",copyButtons,onPickImageUrl,onUploadedImage:()=>setCount(count+1)})}),react.createElement(atoms.aF,{isOpen,onClose,className:"modal-upload-image"},react.createElement("div",null,react.createElement(molecules.tU,{tabs:tabHeaders})))};ImageUploaderModal.__docgenInfo={description:"",methods:[],displayName:"ImageUploaderModal",props:{withPublicImagesTab:{required:!1,tsType:{name:"boolean"},description:""},copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""}},composes:["ModalProps"]}},"./src/components/organisms/ImageUploader/UploadImageButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UploadImageButton:()=>UploadImageButton});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_atoms__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/atoms/index.tsx"),_server__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/server/index.ts"),_ImageUploaderModal__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/organisms/ImageUploader/ImageUploaderModal.tsx");const UploadImageButton=props=>{const{open,setOpen,isOpenRef,withLabel=!1,copyButtons,onPickImageUrl,children:_children}=props;isOpenRef&&(isOpenRef.current=open);const children=_children||(_ref=>{let{setOpen,withLabel}=_ref;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_atoms__WEBPACK_IMPORTED_MODULE_1__.$n,{icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_server__WEBPACK_IMPORTED_MODULE_2__.kAu,null),type:"void",className:"bc-we",size:"small",onClick:()=>setOpen(!0)},withLabel&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_atoms__WEBPACK_IMPORTED_MODULE_1__.T,null,"pick / upload image"))});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{"data-tooltip-id":"jk-tooltip","data-tooltip-content":withLabel?"":"upload image","data-tooltip-t-class-name":"ws-np tt-se"},children({open,setOpen,withLabel})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ImageUploaderModal__WEBPACK_IMPORTED_MODULE_3__.ImageUploaderModal,{isOpen:open,onClose:()=>setOpen(!1),copyButtons,onPickImageUrl}))};UploadImageButton.__docgenInfo={description:"",methods:[],displayName:"UploadImageButton",props:{open:{required:!0,tsType:{name:"boolean"},description:""},setOpen:{required:!0,tsType:{name:"Dispatch",elements:[{name:"boolean"}],raw:"Dispatch<boolean>"},description:""},isOpenRef:{required:!1,tsType:{name:"MutableRefObject",elements:[{name:"boolean"}],raw:"MutableRefObject<boolean>"},description:""},withLabel:{required:!1,tsType:{name:"boolean"},description:""},copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},children:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: UploadImageButtonChildrenProps) => ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ open: boolean, setOpen: Dispatch<boolean>, withLabel: boolean }",signature:{properties:[{key:"open",value:{name:"boolean",required:!0}},{key:"setOpen",value:{name:"Dispatch",elements:[{name:"boolean"}],raw:"Dispatch<boolean>",required:!0}},{key:"withLabel",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"ReactNode"}}},description:""}}}}}]);