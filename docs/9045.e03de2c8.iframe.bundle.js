"use strict";(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[2096,9045],{"./src/components/organisms/ImageUploader/ImageUploaderModal.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ImageUploaderModal:()=>ImageUploaderModal});var react=__webpack_require__("./node_modules/react/index.js"),atoms=__webpack_require__("./src/components/atoms/index.tsx"),molecules=__webpack_require__("./src/components/molecules/index.tsx"),server=__webpack_require__("./src/components/server/index.ts"),settings=__webpack_require__("./src/settings/index.ts"),helpers=__webpack_require__("./src/helpers/index.ts"),useJukiNotification=__webpack_require__("./src/hooks/useJukiNotification.tsx"),types=__webpack_require__("./src/types/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const PublicImages=props=>{const{copyButtons,onPickImageUrl,publicImages}=props,{addNotification}=(0,useJukiNotification.E)();return(0,jsx_runtime.jsx)("div",{className:"public-images-tab jk-row",children:publicImages.map((publicImage,index)=>(0,jsx_runtime.jsxs)("div",{className:"thumbnail",children:[(0,jsx_runtime.jsx)("img",{src:publicImage.imageThumbnailUrl+"?v=".concat((new Date).getTime()),alt:"image "+index}),(0,jsx_runtime.jsx)(molecules.GK,{actionButtons:[...copyButtons?[{icon:(0,jsx_runtime.jsx)(server.c8I,{}),buttons:[{icon:(0,jsx_runtime.jsx)(server.c8I,{size:"small"}),label:(0,jsx_runtime.jsx)(atoms.T,{children:"URL"}),onClick:()=>{(0,helpers.C)(publicImage.imageUrl),addNotification({type:types.NotificationType.QUIET,message:(0,jsx_runtime.jsx)(atoms.T,{children:"copied"})})}},{icon:(0,jsx_runtime.jsx)(server.c8I,{}),label:(0,jsx_runtime.jsx)(atoms.T,{children:"MD"}),onClick:()=>{(0,helpers.C)("![image alt](".concat(publicImage.imageUrl,")")),addNotification({type:types.NotificationType.QUIET,message:(0,jsx_runtime.jsx)(atoms.T,{children:"copied"})})}}]}]:[],...onPickImageUrl?[{icon:(0,jsx_runtime.jsx)(server.Srz,{}),buttons:[{icon:(0,jsx_runtime.jsx)(server.Srz,{size:"small"}),label:(0,jsx_runtime.jsx)(atoms.T,{children:"pick"}),onClick:()=>{onPickImageUrl(publicImage),addNotification({type:types.NotificationType.QUIET,message:(0,jsx_runtime.jsx)(atoms.T,{children:"picked"})})}}]}]:[]]})]},publicImage.imageUrl))})};PublicImages.__docgenInfo={description:"",methods:[],displayName:"PublicImages",props:{copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},publicImages:{required:!0,tsType:{name:"Array",elements:[{name:"ImageSummaryResponseDTO"}],raw:"ImageSummaryResponseDTO[]"},description:""}}};const PublicImagesTab=props=>(0,jsx_runtime.jsx)(molecules.pW,{url:settings.u.API_V1.image.getPublicList().url,triggerFetch:props.trigger,children:_ref=>{let{data:{contents},mutate}=_ref;return(0,jsx_runtime.jsx)(PublicImages,{publicImages:contents,copyButtons:props.copyButtons,onPickImageUrl:props.onPickImageUrl})}});PublicImagesTab.__docgenInfo={description:"",methods:[],displayName:"PublicImagesTab",props:{trigger:{required:!0,tsType:{name:"number"},description:""},copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""}}};var esm=__webpack_require__("./node_modules/@juki-team/commons/dist/esm/index.js");const UploadNewImageTab=(0,react.memo)(_ref=>{let{copyButtons,onPickImageUrl,onUploadedImage}=_ref;const[imagePublicUrl,setImagePublicUrl]=(0,react.useState)(""),[cropImage,setCropImage]=(0,react.useState)(),[isPublic,setIsPublic]=(0,react.useState)(!1),{addNotification}=(0,useJukiNotification.E)();return(0,jsx_runtime.jsxs)("div",{className:"upload-new-image-tab jk-col top gap",children:[imagePublicUrl&&(0,jsx_runtime.jsxs)("div",{className:"jk-col left",children:[copyButtons&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{className:"jk-row gap left fw-bd",children:[(0,jsx_runtime.jsx)(atoms.T,{children:"public url"}),":",(0,jsx_runtime.jsxs)("div",{className:"copyable jk-row",children:[(0,jsx_runtime.jsx)("a",{href:imagePublicUrl,className:"link",target:"_blank",rel:"noreferrer",children:imagePublicUrl}),(0,jsx_runtime.jsx)(atoms.$r,{text:imagePublicUrl,size:"small"})]})]}),(0,jsx_runtime.jsxs)("div",{className:"jk-row gap left fw-bd",children:[(0,jsx_runtime.jsx)(atoms.T,{children:"markdown use"}),":",(0,jsx_runtime.jsxs)("div",{className:"copyable jk-row",children:[(0,jsx_runtime.jsxs)("span",{className:"tx-t fw-bd",children:["![image alt](",imagePublicUrl,")"]}),(0,jsx_runtime.jsx)(atoms.$r,{text:"![image alt](".concat(imagePublicUrl,")"),size:"small"})]})]})]}),onPickImageUrl&&(0,jsx_runtime.jsx)(atoms.$n,{onClick:()=>onPickImageUrl({imageUrl:imagePublicUrl,imageThumbnailUrl:imagePublicUrl.replace("https://images.juki.pub/o/","https://images.juki.pub/t/")}),size:"small",expand:!0,children:(0,jsx_runtime.jsx)(atoms.T,{children:"pick"})})]}),(0,jsx_runtime.jsx)(atoms.JN,{checked:isPublic,leftLabel:(0,jsx_runtime.jsx)(atoms.T,{className:(0,helpers.xW)("tt-se",{"fw-bd":!isPublic}),children:"not public"}),rightLabel:(0,jsx_runtime.jsx)(atoms.T,{className:(0,helpers.xW)("tt-se",{"fw-bd":isPublic}),children:"public"}),onChange:setIsPublic}),(0,jsx_runtime.jsx)(molecules.mT,{onClick:async setLoader=>{if(null!=cropImage&&cropImage.previewCanvasRef.current){const blob=await(0,helpers.ZR)(cropImage.previewCanvasRef.current);if(blob){null==setLoader||setLoader(esm.nW6.LOADING);const{status,message,content}=await(0,helpers.XO)(blob,isPublic);status===esm.nW6.SUCCESS?(addNotification({type:types.NotificationType.SUCCESS,message:(0,jsx_runtime.jsx)(atoms.T,{children:message})}),null==setLoader||setLoader(esm.nW6.SUCCESS),setImagePublicUrl(content.imageUrl),onUploadedImage()):(addNotification({type:types.NotificationType.ERROR,message:(0,jsx_runtime.jsx)(atoms.T,{children:message})}),null==setLoader||setLoader(esm.nW6.ERROR))}}},disabled:!cropImage||!(null!=cropImage&&cropImage.previewCanvasRef.current),size:"small",children:(0,jsx_runtime.jsx)(atoms.T,{children:"upload image"})}),(0,jsx_runtime.jsx)(molecules.MI,{onCropChange:setCropImage,withAspect:!0,withRotate:!0,withScale:!0})]})});UploadNewImageTab.__docgenInfo={description:"",methods:[],displayName:"UploadNewImageTab",props:{copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onUploadedImage:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const ImageUploaderModal=props=>{const{isOpen,onClose,withPublicImagesTab=!0,copyButtons,onPickImageUrl}=props,[count,setCount]=(0,react.useState)(0),tabHeaders=[];return withPublicImagesTab&&tabHeaders.push({key:"public-images",header:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(atoms.T,{className:"tt-se",children:"public images"}),(0,jsx_runtime.jsx)(atoms.$n,{icon:(0,jsx_runtime.jsx)(server.fNY,{}),size:"small",type:"light",onClick:()=>setCount(count+1)})]}),body:(0,jsx_runtime.jsx)(PublicImagesTab,{trigger:count,copyButtons,onPickImageUrl},"public-images-tab")}),tabHeaders.push({key:"upload-new-image",header:(0,jsx_runtime.jsx)(atoms.T,{className:"tt-se",children:"upload new image"}),body:(0,jsx_runtime.jsx)(UploadNewImageTab,{copyButtons,onPickImageUrl,onUploadedImage:()=>setCount(count+1)},"upload-new-image-tab")}),(0,jsx_runtime.jsx)(atoms.aF,{isOpen,onClose,className:"modal-upload-image",children:(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(molecules.tU,{tabs:tabHeaders})})})};ImageUploaderModal.__docgenInfo={description:"",methods:[],displayName:"ImageUploaderModal",props:{withPublicImagesTab:{required:!1,tsType:{name:"boolean"},description:""},copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""}},composes:["ModalProps"]}},"./src/components/organisms/ImageUploader/UploadImageButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UploadImageButton:()=>UploadImageButton});__webpack_require__("./node_modules/react/index.js");var _atoms__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/atoms/index.tsx"),_server__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/server/index.ts"),_ImageUploaderModal__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/organisms/ImageUploader/ImageUploaderModal.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const UploadImageButton=props=>{const{open,setOpen,isOpenRef,withLabel=!1,copyButtons,onPickImageUrl,children:_children}=props;isOpenRef&&(isOpenRef.current=open);const children=_children||(_ref=>{let{setOpen,withLabel}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_atoms__WEBPACK_IMPORTED_MODULE_1__.$n,{icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_server__WEBPACK_IMPORTED_MODULE_2__.kAu,{}),type:"void",className:"bc-we",size:"small",onClick:()=>setOpen(!0),children:withLabel&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_atoms__WEBPACK_IMPORTED_MODULE_1__.T,{children:"pick / upload image"})})});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{"data-tooltip-id":"jk-tooltip","data-tooltip-content":withLabel?"":"upload image","data-tooltip-t-class-name":"ws-np tt-se",children:children({open,setOpen,withLabel})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ImageUploaderModal__WEBPACK_IMPORTED_MODULE_3__.ImageUploaderModal,{isOpen:open,onClose:()=>setOpen(!1),copyButtons,onPickImageUrl})]})};UploadImageButton.__docgenInfo={description:"",methods:[],displayName:"UploadImageButton",props:{open:{required:!0,tsType:{name:"boolean"},description:""},setOpen:{required:!0,tsType:{name:"Dispatch",elements:[{name:"boolean"}],raw:"Dispatch<boolean>"},description:""},isOpenRef:{required:!1,tsType:{name:"MutableRefObject",elements:[{name:"boolean"}],raw:"MutableRefObject<boolean>"},description:""},withLabel:{required:!1,tsType:{name:"boolean"},description:""},copyButtons:{required:!1,tsType:{name:"boolean"},description:""},onPickImageUrl:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { imageThumbnailUrl: string, imageUrl: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ imageThumbnailUrl: string, imageUrl: string }",signature:{properties:[{key:"imageThumbnailUrl",value:{name:"string",required:!0}},{key:"imageUrl",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},children:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: UploadImageButtonChildrenProps) => ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ open: boolean, setOpen: Dispatch<boolean>, withLabel: boolean }",signature:{properties:[{key:"open",value:{name:"boolean",required:!0}},{key:"setOpen",value:{name:"Dispatch",elements:[{name:"boolean"}],raw:"Dispatch<boolean>",required:!0}},{key:"withLabel",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"ReactNode"}}},description:""}}}}}]);