"use strict";(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[8382],{"./src/components/molecules/CheckboxList/CheckboxList.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckboxList:()=>CheckboxList});__webpack_require__("./node_modules/react/index.js");var _atoms__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/atoms/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const CheckboxList=_ref=>{let{selectedOptions,options,onSelectOptions}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"jk-checkbox-list jk-col stretch",children:options.map((_ref2,index)=>{let{value,label}=_ref2;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_atoms__WEBPACK_IMPORTED_MODULE_1__.GL,{onChange:()=>{selectedOptions.find(option=>option.value===value)?onSelectOptions(selectedOptions.filter(option=>JSON.stringify(option.value)!==JSON.stringify(value))):onSelectOptions([...selectedOptions,{value,label}])},checked:!!selectedOptions.find(option=>option.value===value),label},"".concat(JSON.stringify(value),"_").concat(index))})})};CheckboxList.__docgenInfo={description:"",methods:[],displayName:"CheckboxList",props:{selectedOptions:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"T",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<T>[]"},description:""},options:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"T",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<T>[]"},description:""},onSelectOptions:{required:!0,tsType:{name:"signature",type:"function",raw:"(options: OptionType<T>[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"T",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<T>[]"},name:"options"}],return:{name:"void"}}},description:""}}}}}]);