"use strict";(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[5351],{"./src/components/molecules/MultiSelectSearchable/MultiSelectSearchable.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SelectSearchable:()=>SelectSearchable,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_index__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),_mockup__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/mockup/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:_index__WEBPACK_IMPORTED_MODULE_1__.IOH},SelectSearchable=()=>{const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mockup__WEBPACK_IMPORTED_MODULE_2__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"jk-pg-md",children:["Select Searchable",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("br",{}),"<MultiSelectSearchable onFilter={undefined} ...",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index__WEBPACK_IMPORTED_MODULE_1__.IOH,{options:_mockup__WEBPACK_IMPORTED_MODULE_2__.q.map((option=>({label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"jk-col",children:[option.email,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:option.nickname})]}),value:option,disabled:Math.round(10*Math.random())>7}))),selectedOptions:values,onChange:options=>setValues(options),extend:!0}),"Searchable",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{style:{width:100},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index__WEBPACK_IMPORTED_MODULE_1__.IOH,{options:_mockup__WEBPACK_IMPORTED_MODULE_2__.q.map((option=>({label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"jk-col",children:[option.email,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:option.nickname})]}),inputLabel:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:option.nickname}),value:option,disabled:Math.round(10*Math.random())>7}))),selectedOptions:values,onChange:options=>setValues(options),onFilter:_ref=>{let{search,option}=_ref;return option.value.nickname.toLowerCase().indexOf(search.toLowerCase())>-1}})}),"Searchable",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index__WEBPACK_IMPORTED_MODULE_1__.IOH,{options:_mockup__WEBPACK_IMPORTED_MODULE_2__.q.map((option=>({label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"jk-col",children:[option.email,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:option.nickname})]}),inputLabel:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:option.nickname}),value:option,disabled:Math.round(10*Math.random())>7}))),selectedOptions:values,onChange:options=>setValues(options),extend:!0,onFilter:_ref2=>{let{search,option}=_ref2;return option.value.nickname.toLowerCase().indexOf(search.toLowerCase())>-1}}),"Searchable multiselect=false",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index__WEBPACK_IMPORTED_MODULE_1__.IOH,{options:_mockup__WEBPACK_IMPORTED_MODULE_2__.q.map((option=>({label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"jk-col",children:[option.email,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:option.nickname})]}),inputLabel:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:option.nickname}),value:option,disabled:Math.round(10*Math.random())>7}))),selectedOptions:values,onChange:options=>setValues(options),extend:!0,onFilter:_ref3=>{let{search,option}=_ref3;return option.value.nickname.toLowerCase().indexOf(search.toLowerCase())>-1},multiselect:!1}),"end"]})})},__namedExportsOrder=["SelectSearchable"];SelectSearchable.parameters={...SelectSearchable.parameters,docs:{...SelectSearchable.parameters?.docs,source:{originalSource:'() => {\n  const [values, setValues] = useState<{\n    label: any;\n    value: {\n      nickname: string;\n    };\n  }[]>([]);\n  return <MockupJukiProvider>\n      <div className="jk-pg-md">\n        Select Searchable\n        <br />\n        {"<MultiSelectSearchable onFilter={undefined} ..."}\n        <MultiSelectSearchable options={mockupUsers.map(option => ({\n        label: <div className="jk-col">\n                {option.email}\n                <div>{option.nickname}</div>\n              </div>,\n        value: option,\n        disabled: Math.round(Math.random() * 10) > 7\n      }))} selectedOptions={values} onChange={options => setValues(options)} extend />\n        Searchable\n        <div style={{\n        width: 100\n      }}>\n          <MultiSelectSearchable options={mockupUsers.map(option => ({\n          label: <div className="jk-col">\n                  {option.email}\n                  <div>{option.nickname}</div>\n                </div>,\n          inputLabel: <div>{option.nickname}</div>,\n          value: option,\n          disabled: Math.round(Math.random() * 10) > 7\n        }))} selectedOptions={values} onChange={options => setValues(options)} onFilter={({\n          search,\n          option\n        }) => option.value.nickname.toLowerCase().indexOf(search.toLowerCase()) > -1} />\n        </div>\n        Searchable\n        <MultiSelectSearchable options={mockupUsers.map(option => ({\n        label: <div className="jk-col">\n                {option.email}\n                <div>{option.nickname}</div>\n              </div>,\n        inputLabel: <div>{option.nickname}</div>,\n        value: option,\n        disabled: Math.round(Math.random() * 10) > 7\n      }))} selectedOptions={values} onChange={options => setValues(options)} extend onFilter={({\n        search,\n        option\n      }) => option.value.nickname.toLowerCase().indexOf(search.toLowerCase()) > -1} />\n        Searchable multiselect=false\n        <MultiSelectSearchable options={mockupUsers.map(option => ({\n        label: <div className="jk-col">\n                {option.email}\n                <div>{option.nickname}</div>\n              </div>,\n        inputLabel: <div>{option.nickname}</div>,\n        value: option,\n        disabled: Math.round(Math.random() * 10) > 7\n      }))} selectedOptions={values} onChange={options => setValues(options)} extend onFilter={({\n        search,\n        option\n      }) => option.value.nickname.toLowerCase().indexOf(search.toLowerCase()) > -1} multiselect={false} />\n        end\n      </div>\n    </MockupJukiProvider>;\n}',...SelectSearchable.parameters?.docs?.source}}}}}]);