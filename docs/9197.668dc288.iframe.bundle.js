"use strict";(self.webpackChunk_juki_team_base_ui=self.webpackChunk_juki_team_base_ui||[]).push([[9197,66303,89841],{"./src/components/atoms/server/icons/google/TableEyeIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TableEyeIcon:()=>TableEyeIcon});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/atoms/server/icons/utils/index.ts");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const Icon=_ref=>{let{color}=_ref;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v333q-19-11-39-20t-41-16v-137H520v137q-46 14-86 40t-74 63H200v160h82q11 22 22 42t24 38H200Zm0-320h240v-160H200v160Zm0-240h560v-80H200v80Zm280 200Zm0 0Zm0 0Zm0 0ZM640-40q-91 0-168-48T360-220q35-84 112-132t168-48q91 0 168 48t112 132q-35 84-112 132T640-40Zm0-80q57 0 107.5-26t82.5-74q-32-48-82.5-74T640-320q-57 0-107.5 26T450-220q32 48 82.5 74T640-120Zm0-40q-25 0-42.5-17.5T580-220q0-25 17.5-42.5T640-280q25 0 42.5 17.5T700-220q0 25-17.5 42.5T640-160Z",fill:color})},TableEyeIcon=props=>(0,_utils__WEBPACK_IMPORTED_MODULE_1__.C2)(_objectSpread(_objectSpread({},props),{},{viewBox:"0 -960 960 960"}),Icon,"table-eye");TableEyeIcon.__docgenInfo={description:"",methods:[],displayName:"TableEyeIcon"}},"./src/components/organisms/DataViewer/DataViewer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DataViewer:()=>DataViewer});var esm=__webpack_require__("./node_modules/@juki-team/commons/dist/esm/index.js"),react=__webpack_require__("./node_modules/react/index.js"),constants=__webpack_require__("./src/constants/index.ts"),helpers=__webpack_require__("./src/helpers/index.ts"),hooks=__webpack_require__("./src/hooks/index.ts"),useJukiUI=__webpack_require__("./src/hooks/useJukiUI.tsx"),useSessionStorage=__webpack_require__("./src/hooks/useSessionStorage.ts"),useI18nStore=__webpack_require__("./src/stores/i18n/useI18nStore.ts"),useRouterStore=__webpack_require__("./src/stores/router/useRouterStore.ts"),useUserStore=__webpack_require__("./src/stores/user/useUserStore.ts"),useResizeDetector=__webpack_require__("./node_modules/react-resize-detector/build/useResizeDetector.js"),atoms=__webpack_require__("./src/components/atoms/index.tsx"),server=__webpack_require__("./src/components/server/index.ts"),dist_esm=__webpack_require__("./node_modules/@tanstack/react-virtual/dist/esm/index.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const DataViewerCard=props=>{var _positionsList$topLef,_positionsList$top,_positionsList$topRig,_positionsList$topi,_positionsList$topLef2,_positionsList$top2,_positionsList$topRig2,_positionsList$upperL,_positionsList$upper,_positionsList$upperR,_positionsList$upper2,_positionsList$upperL2,_positionsList$upper3,_positionsList$upperR2,_positionsList$center,_positionsList$center2,_positionsList$center3,_positionsList$center4,_positionsList$center5,_positionsList$center6,_positionsList$center7,_positionsList$lowerL,_positionsList$lower,_positionsList$lowerR,_positionsList$lower2,_positionsList$lowerL2,_positionsList$lower3,_positionsList$lowerR2,_positionsList$bottom,_positionsList$bottom2,_positionsList$bottom3,_positionsList$bottom4,_positionsList$bottom5,_positionsList$bottom6,_positionsList$bottom7;const{cardWidth,index,data,headers,fake,cardStyle,cardClassName,onCardClick,onCardHover}=props,{height:topLeftHeight,ref:topLeftRef}=(0,useResizeDetector.A)(),{height:topHeight,ref:topRef}=(0,useResizeDetector.A)(),{height:topRightHeight,ref:topRightRef}=(0,useResizeDetector.A)(),topContainerHeight=Math.max(topLeftHeight||0,topHeight||0,topRightHeight||0),{height:upperLeftHeight,ref:upperLeftRef}=(0,useResizeDetector.A)(),{height:upperHeight,ref:upperRef}=(0,useResizeDetector.A)(),{height:upperRightHeight,ref:upperRightRef}=(0,useResizeDetector.A)(),upperContainerHeight=Math.max(upperLeftHeight||0,upperHeight||0,upperRightHeight||0),{height:centerLeftHeight,ref:centerLeftRef}=(0,useResizeDetector.A)(),{height:centerHeight,ref:centerRef}=(0,useResizeDetector.A)(),{height:centerRightHeight,ref:centerRightRef}=(0,useResizeDetector.A)(),centerContainerHeight=Math.max(centerLeftHeight||0,centerHeight||0,centerRightHeight||0),{height:lowerLeftHeight,ref:lowerLeftRef}=(0,useResizeDetector.A)(),{height:lowerHeight,ref:lowerRef}=(0,useResizeDetector.A)(),{height:lowerRightHeight,ref:lowerRightRef}=(0,useResizeDetector.A)(),lowerContainerHeight=Math.max(lowerLeftHeight||0,lowerHeight||0,lowerRightHeight||0),{height:bottomLeftHeight,ref:bottomLeftRef}=(0,useResizeDetector.A)(),{height:bottomHeight,ref:bottomRef}=(0,useResizeDetector.A)(),{height:bottomRightHeight,ref:bottomRightRef}=(0,useResizeDetector.A)(),bottomContainerHeight=Math.max(bottomLeftHeight||0,bottomHeight||0,bottomRightHeight||0);if(fake)return react.createElement("div",{className:"jk-list-card",style:{width:cardWidth,opacity:0}});const positionsList={};for(const head of headers)positionsList[head.cardPosition||"center"]||(positionsList[head.cardPosition||"center"]=[]),positionsList[head.cardPosition||"center"].push(head);const renderField=_ref=>{let{index:columnIndex,Field}=_ref;return react.createElement("div",{key:columnIndex},react.createElement(Field,{record:data[index],columnIndex,recordIndex:index,isCard:!0}))};return react.createElement("div",{className:(0,helpers.xW)("jk-list-card jk-border-radius",cardClassName),style:_objectSpread(_objectSpread({},cardStyle),{},{width:cardWidth}),onClick:onCardClick,onMouseEnter:onCardHover},(!(null===(_positionsList$topLef=positionsList.topLeft)||void 0===_positionsList$topLef||!_positionsList$topLef.length)||!(null===(_positionsList$top=positionsList.top)||void 0===_positionsList$top||!_positionsList$top.length)||!(null===(_positionsList$topRig=positionsList.topRight)||void 0===_positionsList$topRig||!_positionsList$topRig.length))&&react.createElement("div",{className:(0,helpers.xW)("top-container",{"no-middle":!(null!==(_positionsList$topi=positionsList.topi)&&void 0!==_positionsList$topi&&_positionsList$topi.length)}),style:{height:topContainerHeight}},react.createElement("div",{className:"top-left jk-col stretch",ref:topLeftRef},null===(_positionsList$topLef2=positionsList.topLeft)||void 0===_positionsList$topLef2?void 0:_positionsList$topLef2.map(renderField)),react.createElement("div",{className:"top jk-col stretch",ref:topRef},null===(_positionsList$top2=positionsList.top)||void 0===_positionsList$top2?void 0:_positionsList$top2.map(renderField)),react.createElement("div",{className:"top-right jk-col stretch",ref:topRightRef},null===(_positionsList$topRig2=positionsList.topRight)||void 0===_positionsList$topRig2?void 0:_positionsList$topRig2.map(renderField))),(!(null===(_positionsList$upperL=positionsList.upperLeft)||void 0===_positionsList$upperL||!_positionsList$upperL.length)||!(null===(_positionsList$upper=positionsList.upper)||void 0===_positionsList$upper||!_positionsList$upper.length)||!(null===(_positionsList$upperR=positionsList.upperRight)||void 0===_positionsList$upperR||!_positionsList$upperR.length))&&react.createElement("div",{className:(0,helpers.xW)("upper-container",{"no-middle":!(null!==(_positionsList$upper2=positionsList.upper)&&void 0!==_positionsList$upper2&&_positionsList$upper2.length)}),style:{height:upperContainerHeight}},react.createElement("div",{className:"upper-left jk-col stretch",ref:upperLeftRef},null===(_positionsList$upperL2=positionsList.upperLeft)||void 0===_positionsList$upperL2?void 0:_positionsList$upperL2.map(renderField)),react.createElement("div",{className:"upper jk-col stretch",ref:upperRef},null===(_positionsList$upper3=positionsList.upper)||void 0===_positionsList$upper3?void 0:_positionsList$upper3.map(renderField)),react.createElement("div",{className:"upper-right jk-col stretch",ref:upperRightRef},null===(_positionsList$upperR2=positionsList.upperRight)||void 0===_positionsList$upperR2?void 0:_positionsList$upperR2.map(renderField))),(!(null===(_positionsList$center=positionsList.centerLeft)||void 0===_positionsList$center||!_positionsList$center.length)||!(null===(_positionsList$center2=positionsList.center)||void 0===_positionsList$center2||!_positionsList$center2.length)||!(null===(_positionsList$center3=positionsList.centerRight)||void 0===_positionsList$center3||!_positionsList$center3.length))&&react.createElement("div",{className:(0,helpers.xW)("center-container",{"no-middle":!(null!==(_positionsList$center4=positionsList.center)&&void 0!==_positionsList$center4&&_positionsList$center4.length)}),style:{height:centerContainerHeight}},react.createElement("div",{className:"center-left jk-col stretch",ref:centerLeftRef},null===(_positionsList$center5=positionsList.centerLeft)||void 0===_positionsList$center5?void 0:_positionsList$center5.map(renderField)),react.createElement("div",{className:"center jk-col stretch",ref:centerRef},null===(_positionsList$center6=positionsList.center)||void 0===_positionsList$center6?void 0:_positionsList$center6.map(renderField)),react.createElement("div",{className:"center-right jk-col stretch",ref:centerRightRef},null===(_positionsList$center7=positionsList.centerRight)||void 0===_positionsList$center7?void 0:_positionsList$center7.map(renderField))),(!(null===(_positionsList$lowerL=positionsList.lowerLeft)||void 0===_positionsList$lowerL||!_positionsList$lowerL.length)||!(null===(_positionsList$lower=positionsList.lower)||void 0===_positionsList$lower||!_positionsList$lower.length)||!(null===(_positionsList$lowerR=positionsList.lowerRight)||void 0===_positionsList$lowerR||!_positionsList$lowerR.length))&&react.createElement("div",{className:(0,helpers.xW)("lower-container",{"no-middle":!(null!==(_positionsList$lower2=positionsList.lower)&&void 0!==_positionsList$lower2&&_positionsList$lower2.length)}),style:{height:lowerContainerHeight}},react.createElement("div",{className:"lower-left jk-col stretch",ref:lowerLeftRef},null===(_positionsList$lowerL2=positionsList.lowerLeft)||void 0===_positionsList$lowerL2?void 0:_positionsList$lowerL2.map(renderField)),react.createElement("div",{className:"lower jk-col stretch",ref:lowerRef},null===(_positionsList$lower3=positionsList.lower)||void 0===_positionsList$lower3?void 0:_positionsList$lower3.map(renderField)),react.createElement("div",{className:"lower-right jk-col stretch",ref:lowerRightRef},null===(_positionsList$lowerR2=positionsList.lowerRight)||void 0===_positionsList$lowerR2?void 0:_positionsList$lowerR2.map(renderField))),(!(null===(_positionsList$bottom=positionsList.bottomLeft)||void 0===_positionsList$bottom||!_positionsList$bottom.length)||!(null===(_positionsList$bottom2=positionsList.bottom)||void 0===_positionsList$bottom2||!_positionsList$bottom2.length)||!(null===(_positionsList$bottom3=positionsList.bottomRight)||void 0===_positionsList$bottom3||!_positionsList$bottom3.length))&&react.createElement("div",{className:(0,helpers.xW)("bottom-container",{"no-middle":!(null!==(_positionsList$bottom4=positionsList.bottom)&&void 0!==_positionsList$bottom4&&_positionsList$bottom4.length)}),style:{height:bottomContainerHeight}},react.createElement("div",{className:"bottom-left jk-col stretch",ref:bottomLeftRef},null===(_positionsList$bottom5=positionsList.bottomLeft)||void 0===_positionsList$bottom5?void 0:_positionsList$bottom5.map(renderField)),react.createElement("div",{className:"bottom jk-col stretch",ref:bottomRef},null===(_positionsList$bottom6=positionsList.bottom)||void 0===_positionsList$bottom6?void 0:_positionsList$bottom6.map(renderField)),react.createElement("div",{className:"bottom-right jk-col stretch",ref:bottomRightRef},null===(_positionsList$bottom7=positionsList.bottomRight)||void 0===_positionsList$bottom7?void 0:_positionsList$bottom7.map(renderField))))};DataViewerCard.__docgenInfo={description:"",methods:[],displayName:"DataViewerCard",props:{cardWidth:{required:!0,tsType:{name:"number"},description:""},index:{required:!0,tsType:{name:"number"},description:""},data:{required:!0,tsType:{name:"Array",elements:[{name:"T"}],raw:"T[]"},description:""},headers:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}}],raw:"TableHeadersType<T>[]"},description:""},fake:{required:!0,tsType:{name:"boolean"},description:""},cardClassName:{required:!0,tsType:{name:"string"},description:""},cardStyle:{required:!0,tsType:{name:"CSSProperties"},description:""},onCardClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onCardHover:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const CardRowVirtualizerFixed=props=>{const{headers,data,cardHeight,cardWidth,rowWidth,getRecordStyle,onRecordClick,onRecordHover,onRecordRender,getRecordClassName,expandedCards}=props,parentRef=(0,react.useRef)(null),[borderTop,setBorderTop]=(0,react.useState)(!1),[borderBottom,setBorderBottom]=(0,react.useState)(!1),cardsByRow=Math.max(Math.floor((rowWidth-16)/(cardWidth+16)),1),rowVirtualizer=(0,dist_esm.Te)({count:Math.ceil(data.length/cardsByRow),getScrollElement:()=>parentRef.current,estimateSize:(0,react.useCallback)(()=>cardHeight+40,[cardHeight]),overscan:2}),onRecordRenderRef=(0,react.useRef)(onRecordRender);onRecordRenderRef.current=onRecordRender,(0,react.useEffect)(()=>{rowVirtualizer.getVirtualItems().map(virtualRow=>{var _onRecordRenderRef$cu;return null===(_onRecordRenderRef$cu=onRecordRenderRef.current)||void 0===_onRecordRenderRef$cu?void 0:_onRecordRenderRef$cu.call(onRecordRenderRef,{data,index:virtualRow.index,isCard:!1})})},[data,rowVirtualizer]);let finalWidth=Math.min(cardWidth,rowWidth-16-16);return expandedCards&&(finalWidth=(rowWidth-16*(cardsByRow+1))/cardsByRow),react.createElement("div",{ref:parentRef,className:(0,helpers.xW)("jk-list-card-rows-container",{"scroll-on-top":!borderTop,"scroll-on-bottom":!borderBottom}),onScroll:_ref=>{let{currentTarget}=_ref;const scrollTop=currentTarget.scrollTop||0;setBorderBottom(!!(currentTarget.scrollHeight-currentTarget.clientHeight-scrollTop)),setBorderTop(!!scrollTop)}},react.createElement("div",{className:"jk-list-card-rows-box",style:{height:"".concat(rowVirtualizer.getTotalSize(),"px"),zIndex:0}},rowVirtualizer.getVirtualItems().map(virtualRow=>react.createElement("div",{key:virtualRow.index,style:{height:"".concat(virtualRow.size,"px"),transform:"translateY(".concat(virtualRow.start,"px)")},className:"jk-row jk-list-card-row"},react.Children.toArray(new Array(cardsByRow).fill("").map((_,index)=>{const cardIndex=virtualRow.index*cardsByRow+index;return react.createElement(DataViewerCard,{key:virtualRow.index*cardsByRow+index,fake:virtualRow.index*cardsByRow+index>=data.length,cardWidth:finalWidth,headers,data,index:cardIndex,cardClassName:(null==getRecordClassName?void 0:getRecordClassName({data,index:cardIndex,isCard:!0,isStickySection:!1}))||"",cardStyle:(null==getRecordStyle?void 0:getRecordStyle({data,index:cardIndex,isCard:!0,isStickySection:!1}))||{},onCardClick:()=>null==onRecordClick?void 0:onRecordClick({data,index:cardIndex,isCard:!0}),onCardHover:()=>null==onRecordHover?void 0:onRecordHover({data,index:cardIndex,isCard:!0})})}))))))};CardRowVirtualizerFixed.__docgenInfo={description:"",methods:[],displayName:"CardRowVirtualizerFixed",props:{headers:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}}],raw:"TableHeadersType<T>[]"},description:""},data:{required:!0,tsType:{name:"Array",elements:[{name:"T"}],raw:"T[]"},description:""},cardHeight:{required:!0,tsType:{name:"number"},description:""},cardWidth:{required:!0,tsType:{name:"number"},description:""},rowWidth:{required:!0,tsType:{name:"number"},description:""},getRecordStyle:{required:!0,tsType:{name:"union",raw:"GetRecordStyleType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => CSSProperties",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"CSSProperties"}}},{name:"undefined"}]},description:""},getRecordClassName:{required:!0,tsType:{name:"union",raw:"GetRecordClassNameType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"string"}}},{name:"undefined"}]},description:""},onRecordClick:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},onRecordHover:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},onRecordRender:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},expandedCards:{required:!0,tsType:{name:"boolean"},description:""}}};var usePrevious=__webpack_require__("./src/hooks/usePrevious.ts");var TextHeadCell=__webpack_require__("./src/components/organisms/DataViewer/TextHeadCell.tsx");function utils_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function utils_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?utils_ownKeys(Object(t),!0).forEach(function(r){utils_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):utils_ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function utils_defineProperty(e,r,t){return(r=function utils_toPropertyKey(t){var i=function utils_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const isSortOffline=sort=>!("object"!=typeof sort||null==sort||!sort.compareFn),isSortOnline=sort=>!0===sort,isFilterTextOnline=filter=>!(null!=filter&&filter.hasOwnProperty("callbackFn"))&&"text"===(null==filter?void 0:filter.type),isFilterTextOffline=filter=>!(null==filter||!filter.hasOwnProperty("callbackFn"))&&"text"===(null==filter?void 0:filter.type),isFilterTextAutoOffline=filter=>"text-auto"===(null==filter?void 0:filter.type),isFilterSelectOnline=filter=>!(null!=filter&&filter.hasOwnProperty("callbackFn"))&&"select"===(null==filter?void 0:filter.type),isFilterSelectOffline=filter=>!(null==filter||!filter.hasOwnProperty("callbackFn"))&&"select"===(null==filter?void 0:filter.type),isFilterSelectAutoOffline=filter=>"select-auto"===(null==filter?void 0:filter.type),isFilterDateOnline=filter=>!(null!=filter&&filter.hasOwnProperty("callbackFn"))&&"date"===(null==filter?void 0:filter.type),isFilterDateOffline=filter=>!(null==filter||!filter.hasOwnProperty("callbackFn"))&&"date"===(null==filter?void 0:filter.type),isFilterDateAutoOffline=filter=>!(null!=filter&&filter.hasOwnProperty("callbackFn"))&&"date-auto"===(null==filter?void 0:filter.type),isFilterDateRangeOnline=filter=>!(null!=filter&&filter.hasOwnProperty("callbackFn"))&&"date-range"===(null==filter?void 0:filter.type),isFilterDateRangeOffline=filter=>!(null==filter||!filter.hasOwnProperty("callbackFn"))&&"date-range"===(null==filter?void 0:filter.type),isFilterDateRangeAutoOffline=filter=>!(null!=filter&&filter.hasOwnProperty("callbackFn"))&&"date-range-auto"===(null==filter?void 0:filter.type),isFilterText=filter=>"text"===(null==filter?void 0:filter.type),isFilterSelect=filter=>"select"===(null==filter?void 0:filter.type),isFilterDate=filter=>"date"===(null==filter?void 0:filter.type),isFilterDateRange=filter=>"date-range"===(null==filter?void 0:filter.type),renderHead=_ref=>{let{header,columnIndex,className}=_ref;return"string"==typeof header.head?react.createElement(TextHeadCell.TextHeadCell,{text:header.head,className}):header.head?(0,helpers._v)(header.head,{header,data:[]}):react.createElement(TextHeadCell.TextHeadCell,{text:columnIndex,className})},isSelected=start=>date=>({year:!!start&&date.isSameYear(start),month:!!start&&date.isSameMonth(start),day:!!start&&date.isSameDay(start),hours:!!start&&date.isSameHour(start),minutes:!!start&&date.isSameMinute(start),seconds:!!start&&date.isSameSecond(start),milliseconds:!!start&&date.isSameMillisecond(start)}),isRangeSelected=(start,end)=>date=>({year:!!start&&!!end&&(date.isSameYear(start)||date.isSameYear(end)||date.isWithinInterval({start,end})),month:!!start&&!!end&&(date.isSameMonth(start)||date.isSameMonth(end)||date.isWithinInterval({start,end})),day:!!start&&!!end&&(date.isSameDay(start)||date.isSameDay(end)||date.isWithinInterval({start,end})),hours:!!start&&!!end&&(date.isSameHour(start)||date.isSameHour(end)||date.isWithinInterval({start,end})),minutes:!!start&&!!end&&(date.isSameMinute(start)||date.isSameMinute(end)||date.isWithinInterval({start,end})),seconds:!!start&&!!end&&(date.isSameSecond(start)||date.isSameSecond(end)||date.isWithinInterval({start,end})),milliseconds:!!start&&!!end&&(date.isSameMillisecond(start)||date.isSameMillisecond(end)||date.isWithinInterval({start,end}))}),isDisabledEnd=start=>date=>({year:!!start&&date.isYearBefore(start),month:!!start&&date.isMonthBefore(start),day:!!start&&date.isDayBefore(start),hours:!!start&&date.isHoursBefore(start),minutes:!!start&&date.isMinutesBefore(start),seconds:!!start&&date.isSecondsBefore(start),milliseconds:!!start&&date.isMillisecondsBefore(start)}),orDatePickerDateFun=(fun1,fun2)=>date=>{const result1=fun1(date),result2=fun2(date);return{year:result1.year||result2.year,month:result1.month||result2.month,day:result1.day||result2.day,hours:result1.hours||result2.hours,minutes:result1.minutes||result2.minutes,seconds:result1.seconds||result2.seconds,milliseconds:result1.milliseconds||result2.milliseconds}},isDisabledStart=end=>date=>({year:!!end&&date.isYearAfter(end),month:!!end&&date.isMonthAfter(end),day:!!end&&date.isDayAfter(end),hours:!!end&&date.isHoursAfter(end),minutes:!!end&&date.isMinutesAfter(end),seconds:!!end&&date.isSecondsAfter(end),milliseconds:!!end&&date.isMillisecondsAfter(end)}),isSomethingFiltered=headers=>{let filtered=!1;const values={};return headers.forEach(_ref2=>{let{index,filter}=_ref2;var _filter$getFilter;if(isFilterText(filter))null!==(_filter$getFilter=filter.getFilter)&&void 0!==_filter$getFilter&&_filter$getFilter.call(filter)&&(values[index]=filter.getFilter(),filtered=!0);else if(isFilterSelect(filter)){var _filter$getFilter2;null!==(_filter$getFilter2=filter.getFilter)&&void 0!==_filter$getFilter2&&null!==(_filter$getFilter2=_filter$getFilter2.call(filter))&&void 0!==_filter$getFilter2&&_filter$getFilter2.length&&(values[index]=filter.getFilter(),filtered=!0)}else if(isFilterDate(filter)){var _filter$getFilter3;null!==(_filter$getFilter3=filter.getFilter)&&void 0!==_filter$getFilter3&&null!==(_filter$getFilter3=_filter$getFilter3.call(filter))&&void 0!==_filter$getFilter3&&_filter$getFilter3.isValidDate()&&(values[index]=filter.getFilter(),filtered=!0)}else if(isFilterDateRange(filter)){var _filter$getFilter4,_dates$,_dates$2;const dates=null===(_filter$getFilter4=filter.getFilter)||void 0===_filter$getFilter4?void 0:_filter$getFilter4.call(filter);null!=dates&&null!==(_dates$=dates[0])&&void 0!==_dates$&&_dates$.isValidDate()&&null!=dates&&null!==(_dates$2=dates[1])&&void 0!==_dates$2&&_dates$2.isValidDate()&&(values[index]=dates,filtered=!0)}}),{filtered,values}},getPageKey=name=>name?name+".page":"page",getPageSizeKey=name=>name?name+".pageSize":"pageSize",getSortKey=name=>name?name+".sort":"sort",getFilterKey=name=>name?name+".filter":"filter",getViewModeKey=name=>name?name+".viewMode":"viewMode",getShowFilterDrawerKey=name=>name?name+".showFilterDrawer":"showFilterDrawer",getVisiblesKey=name=>name?name+".visibles":"visibles",fixHeaders=headers=>{let accumulatedWidth=0;const newHeaderWidths=[...headers];return headers.forEach((head,index)=>{var _head$visible;null!==(_head$visible=head.visible)&&void 0!==_head$visible&&_head$visible.getVisible()&&(newHeaderWidths[index]=utils_objectSpread(utils_objectSpread({},head),{},{accumulatedWidth}),accumulatedWidth+=head.width)}),newHeaderWidths};renderHead.__docgenInfo={description:"",methods:[],displayName:"renderHead",props:{header:{required:!0,tsType:{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]},description:""},columnIndex:{required:!0,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""}}};var molecules=__webpack_require__("./src/components/molecules/index.tsx");const TableHeadFilterDate=props=>{const{onFilter,onReset,isDisabled,columnIndex,initialSelectedDate,pickerType,visible,baseDate}=props,[value,setValue]=(0,react.useState)(initialSelectedDate),buttonRef=(0,react.useRef)(null);return(0,react.useEffect)(()=>{var _buttonRef$current;visible&&(null===(_buttonRef$current=buttonRef.current)||void 0===_buttonRef$current||_buttonRef$current.focus())},[visible]),react.createElement("div",{className:"jk-col gap jk-table-head-cell-filter-date jk-pg-sm"},react.createElement(molecules.Hc,{type:pickerType,date:value,onDatePick:date=>setValue(date),onDateClean:()=>setValue(null),inline:!0,isDisabled,isSelected:date=>({year:!!value&&date.isSameYear(value),month:!!value&&date.isSameMonth(value),date:!!value&&date.isSameDay(value),hours:!!value&&date.isSameHour(value),minutes:!!value&&date.isSameMinute(value),seconds:!!value&&date.isSameSecond(value),milliseconds:!!value&&date.isSameMillisecond(value)}),baseDate,twoLines:"year-month-day-hours-minutes-seconds-milliseconds"===pickerType||"year-month-day-hours-minutes-seconds"===pickerType||"year-month-day-hours-minutes"===pickerType||"year-month-day-hours"===pickerType}),react.createElement("div",{className:"jk-row right gap buttons wh-100"},react.createElement(atoms.$n,{size:"tiny",type:"light",onClick:onReset,disabled:!(null!=initialSelectedDate&&initialSelectedDate.isValidDate())},react.createElement(atoms.T,{className:"tt-se"},"reset")),react.createElement(atoms.$n,{size:"tiny",onClick:()=>value&&onFilter({columnIndex,selectedDate:value}),disabled:!(null!=value&&value.isValidDate()),ref:buttonRef},react.createElement(atoms.T,{className:"tt-se"},"filter"))))};TableHeadFilterDate.__docgenInfo={description:"",methods:[],displayName:"TableHeadFilterDate",props:{pickerType:{required:!0,tsType:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}]},description:""},columnIndex:{required:!0,tsType:{name:"string"},description:""},onFilter:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedDate: Date }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedDate: Date }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedDate",value:{name:"Date",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onReset:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},isDisabled:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}}},description:""},initialSelectedDate:{required:!0,tsType:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},description:""},visible:{required:!0,tsType:{name:"boolean"},description:""},baseDate:{required:!0,tsType:{name:"Date"},description:""}}};const TableHeadFilterDateRange=props=>{const{onFilter,onReset,isDisabled,columnIndex,initialStartSelectedDate,initialEndSelectedDate,pickerType,visible,baseStartDate,baseEndDate}=props,[start,setStart]=(0,react.useState)(initialStartSelectedDate),[end,setEnd]=(0,react.useState)(initialEndSelectedDate),buttonRef=(0,react.useRef)(null);return(0,react.useEffect)(()=>{var _buttonRef$current;visible&&(null===(_buttonRef$current=buttonRef.current)||void 0===_buttonRef$current||_buttonRef$current.focus())},[visible]),react.createElement("div",{className:"jk-col gap jk-table-head-cell-filter-date-range jk-pg-sm"},react.createElement("div",{className:"jk-row gap date-range nowrap"},react.createElement("div",null,react.createElement("div",{className:"jk-row center fw-bd"},react.createElement(atoms.T,{className:"tt-se"},"from")," :"),react.createElement(molecules.Hc,{type:pickerType,date:start,onDatePick:setStart,onDateClean:()=>setStart(null),inline:!0,isDisabled:orDatePickerDateFun(isDisabled,isDisabledStart(end)),isSelected:orDatePickerDateFun(isSelected(start),isRangeSelected(start,end)),baseDate:baseStartDate,twoLines:"year-month-day-hours-minutes-seconds-milliseconds"===pickerType||"year-month-day-hours-minutes-seconds"===pickerType||"year-month-day-hours-minutes"===pickerType||"year-month-day-hours"===pickerType})),react.createElement("div",null,react.createElement("div",{className:"jk-row center fw-bd"},react.createElement(atoms.T,{className:"tt-se"},"to")," :"),react.createElement(molecules.Hc,{type:pickerType,date:end,onDatePick:setEnd,onDateClean:()=>setEnd(null),inline:!0,isDisabled:orDatePickerDateFun(isDisabled,isDisabledEnd(start)),isSelected:orDatePickerDateFun(isSelected(end),isRangeSelected(start,end)),baseDate:baseEndDate,twoLines:"year-month-day-hours-minutes-seconds-milliseconds"===pickerType||"year-month-day-hours-minutes-seconds"===pickerType||"year-month-day-hours-minutes"===pickerType||"year-month-day-hours"===pickerType}))),react.createElement("div",{className:"jk-row gap right buttons wh-100"},react.createElement(atoms.$n,{size:"tiny",type:"light",onClick:onReset,disabled:!(initialStartSelectedDate&&initialEndSelectedDate&&null!=initialStartSelectedDate&&initialStartSelectedDate.isValidDate()&&null!=initialEndSelectedDate&&initialEndSelectedDate.isValidDate())},react.createElement(atoms.T,{className:"tt-se"},"reset")),react.createElement(atoms.$n,{size:"tiny",onClick:()=>start&&end&&(null==start?void 0:start.isValidDate())&&(null==end?void 0:end.isValidDate())&&onFilter({columnIndex,startSelectedDate:start,endSelectedDate:end}),disabled:!(start&&end&&null!=start&&start.isValidDate()&&null!=end&&end.isValidDate()),ref:buttonRef},react.createElement(atoms.T,{className:"tt-se"},"filter"))))};function TableHeadFilterSelect_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function TableHeadFilterSelect_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?TableHeadFilterSelect_ownKeys(Object(t),!0).forEach(function(r){TableHeadFilterSelect_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):TableHeadFilterSelect_ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function TableHeadFilterSelect_defineProperty(e,r,t){return(r=function TableHeadFilterSelect_toPropertyKey(t){var i=function TableHeadFilterSelect_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}TableHeadFilterDateRange.__docgenInfo={description:"",methods:[],displayName:"TableHeadFilterDateRange",props:{pickerType:{required:!0,tsType:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}]},description:""},columnIndex:{required:!0,tsType:{name:"string"},description:""},onFilter:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"startSelectedDate",value:{name:"Date",required:!0}},{key:"endSelectedDate",value:{name:"Date",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onReset:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},isDisabled:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}}},description:""},initialStartSelectedDate:{required:!0,tsType:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},description:""},initialEndSelectedDate:{required:!0,tsType:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},description:""},visible:{required:!0,tsType:{name:"boolean"},description:""},baseStartDate:{required:!0,tsType:{name:"Date"},description:""},baseEndDate:{required:!0,tsType:{name:"Date"},description:""}}};const TableHeadFilterSelect=props=>{const{onFilter,onReset,columnIndex,options,initialSelectedOptions,visible}=props,[selectedOptions,setSelectedOptions]=(0,react.useState)(initialSelectedOptions),buttonRef=(0,react.useRef)(null);return(0,react.useEffect)(()=>{var _buttonRef$current;visible&&(null===(_buttonRef$current=buttonRef.current)||void 0===_buttonRef$current||_buttonRef$current.focus());setSelectedOptions(initialSelectedOptions)},[initialSelectedOptions,visible]),react.createElement("div",{className:"jk-col gap stretch jk-table-head-cell-filter-select jk-pg-sm"},react.createElement("div",{className:"checkbox-list"},react.createElement(molecules.ye,{options:options.map(option=>TableHeadFilterSelect_objectSpread(TableHeadFilterSelect_objectSpread({},option),{},{label:"string"==typeof option.label?react.createElement(atoms.T,{className:"tt-se"},option.label):option.label})),selectedOptions,onSelectOptions:setSelectedOptions})),react.createElement("div",{className:"jk-row right gap"},react.createElement(atoms.$n,{size:"tiny",type:"light",onClick:onReset,disabled:!initialSelectedOptions.length},react.createElement(atoms.T,{className:"tt-se"},"reset")),react.createElement(atoms.$n,{size:"tiny",onClick:()=>onFilter({columnIndex,selectedOptions}),disabled:JSON.stringify(initialSelectedOptions.map(_ref=>{let{value}=_ref;return value}))===JSON.stringify(selectedOptions.map(_ref2=>{let{value}=_ref2;return value})),ref:buttonRef},react.createElement(atoms.T,{className:"tt-se"},"filter"))))};TableHeadFilterSelect.__docgenInfo={description:"",methods:[],displayName:"TableHeadFilterSelect",props:{columnIndex:{required:!0,tsType:{name:"string"},description:""},onFilter:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onReset:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},options:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"},description:""},initialSelectedOptions:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"},description:""},visible:{required:!0,tsType:{name:"boolean"},description:""}}};const TableHeadFilterText=props=>{const{onFilter,onReset,columnIndex,initialText,visible}=props,[value,setValue]=(0,react.useState)(initialText),inputRef=(0,react.useRef)(null);return(0,react.useEffect)(()=>{var _inputRef$current;visible&&(null===(_inputRef$current=inputRef.current)||void 0===_inputRef$current||_inputRef$current.focus())},[visible]),react.createElement("div",{className:"jk-col gap stretch jk-table-head-cell-filter-text jk-pg-sm",onKeyDown:event=>{"Enter"===event.code&&(event.preventDefault(),onFilter({columnIndex,text:value}))}},react.createElement(atoms.pd,{onChange:newValue=>setValue(newValue),value,expand:!0,autoFocus:!0,ref:inputRef}),react.createElement("div",{className:"jk-row right gap"},react.createElement(atoms.$n,{size:"tiny",type:"light",onClick:onReset,disabled:""===initialText},react.createElement(atoms.T,{className:"tt-se"},"reset")),react.createElement(atoms.$n,{size:"tiny",onClick:()=>onFilter({columnIndex,text:value}),disabled:initialText===value},react.createElement(atoms.T,{className:"tt-se"},"filter"))))};TableHeadFilterText.__docgenInfo={description:"",methods:[],displayName:"TableHeadFilterText",props:{columnIndex:{required:!0,tsType:{name:"string"},description:""},onFilter:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onReset:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},initialText:{required:!0,tsType:{name:"string"},description:""},visible:{required:!0,tsType:{name:"boolean"},description:""}}};const Filter=_ref=>{var _filter$getFilter,_filter$getFilter2,_filter$getFilter3;let{filter,columnIndex}=_ref;const[visible,setVisible]=(0,react.useState)(!1),filtered=isFilterText(filter)?!!filter.getFilter():isFilterSelect(filter)?!!filter.getFilter().length:isFilterDate(filter)?!(null===(_filter$getFilter=filter.getFilter())||void 0===_filter$getFilter||!_filter$getFilter.isValidDate()):!!isFilterDateRange(filter)&&!(null===(_filter$getFilter2=filter.getFilter())||void 0===_filter$getFilter2||null===(_filter$getFilter2=_filter$getFilter2[0])||void 0===_filter$getFilter2||!_filter$getFilter2.isValidDate()||null===(_filter$getFilter3=filter.getFilter())||void 0===_filter$getFilter3||null===(_filter$getFilter3=_filter$getFilter3[1])||void 0===_filter$getFilter3||!_filter$getFilter3.isValidDate());return react.createElement(atoms.AM,{popoverClassName:"bc-we jk-br-ie elevation-1",onOpenChange:setVisible,content:_ref2=>{let{isOpen}=_ref2;const onReset=()=>{null==filter||filter.onReset(),setVisible(!1)};return isFilterText(filter)?react.createElement(TableHeadFilterText,{columnIndex,initialText:filter.getFilter(),onFilter:props=>{filter.onFilter(props),setVisible(!1)},onReset,visible:isOpen}):isFilterSelect(filter)?react.createElement(TableHeadFilterSelect,{visible:isOpen,columnIndex,options:filter.options,initialSelectedOptions:filter.getFilter(),onFilter:props=>{filter.onFilter(props),setVisible(!1)},onReset}):isFilterDate(filter)?react.createElement(TableHeadFilterDate,{visible:isOpen,pickerType:filter.pickerType,columnIndex,isDisabled:filter.isDisabled,initialSelectedDate:filter.getFilter(),onFilter:props=>{filter.onFilter(props),setVisible(!1)},onReset,baseDate:filter.baseDate}):isFilterDateRange(filter)?react.createElement(TableHeadFilterDateRange,{visible:isOpen,pickerType:filter.pickerType,columnIndex,isDisabled:filter.isDisabled,initialStartSelectedDate:filter.getFilter()[0],initialEndSelectedDate:filter.getFilter()[1],onFilter:props=>{filter.onFilter(props),setVisible(!1)},onReset,baseStartDate:filter.baseStartDate,baseEndDate:filter.baseEndDate}):react.createElement("div",null,"FILTER")},placement:"bottom",triggerOn:"click",offset:4},react.createElement("div",{className:(0,helpers.xW)("tool jk-row jk-br-ie",{"cr-we bc-pl active":filtered,"cr-hd":!filtered,visible})},react.createElement(server.O7G,{size:"small"})))};function TableHead_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function TableHead_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?TableHead_ownKeys(Object(t),!0).forEach(function(r){TableHead_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):TableHead_ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function TableHead_defineProperty(e,r,t){return(r=function TableHead_toPropertyKey(t){var i=function TableHead_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}Filter.__docgenInfo={description:"",methods:[],displayName:"Filter",props:{filter:{required:!1,tsType:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}]},description:""},columnIndex:{required:!0,tsType:{name:"string"},description:""},disabled:{required:!0,tsType:{name:"boolean"},description:""}}};const RenderHeader=props=>{const{header,onMouseHoldUp,onMouseHoldDown,loading,headers,withTools,withRightBorder,borderTopLeftRadius,borderTopRightRadius,borderBottomLeftRadius,borderBottomRightRadius}=props,{index:columnIndex,width,filter,sort,sticky,headClassName,headIndex,accumulatedWidth}=header,{onSort,getOrder}=sort||{},order=null==getOrder?void 0:getOrder();return react.createElement("div",{key:columnIndex+"_head",style:{width,minWidth:width,left:sticky?accumulatedWidth:void 0,top:0,zIndex:sticky?3:2,borderTopLeftRadius:borderTopLeftRadius?"var(--border-radius-inline)":void 0,borderTopRightRadius:borderTopRightRadius?"var(--border-radius-inline)":void 0,borderBottomLeftRadius:borderBottomLeftRadius?"var(--border-radius-inline)":void 0,borderBottomRightRadius:borderBottomRightRadius?"var(--border-radius-inline)":void 0},className:(0,helpers.xW)({"with-right-border":withRightBorder},"sticky jk-table-row-head"),"data-testid":columnIndex+"_head"},react.createElement("div",{className:(0,helpers.xW)("jk-row nowrap jk-table-head-cell jk-pg-sm",{"with-sort":!!sort,"with-filter":!(null==filter||!filter.onFilter),sticky:!!sticky}),onMouseUp:onMouseHoldUp,key:columnIndex,style:{width:width+"px"}},react.createElement("div",{className:"jk-table-head-field flex-1 ht-100"},renderHead({header,columnIndex,className:headClassName})),withTools&&react.createElement("div",{className:"jk-row jk-table-head-tools"},sort&&react.createElement("div",{className:(0,helpers.xW)("tool jk-row jk-br-ie",{"cr-we bc-pl active":!!order,"cr-hd":!order}),onClick:()=>onSort({columnIndex})},order?order>0?react.createElement(server.U1D,{size:"small"}):react.createElement(server.RSQ,{size:"small"}):react.createElement(server.ycB,{up:!0,down:!0,size:"small"})),(null==filter?void 0:filter.onFilter)&&react.createElement(Filter,{columnIndex,filter,disabled:loading})),withTools&&headIndex<headers.length&&react.createElement("div",{className:"jk-table-head-drag",onMouseDown:onMouseHoldDown(headIndex),onClick:event=>{event.preventDefault(),event.stopPropagation()}},react.createElement("div",null))))},TableHeadCmp=props=>{const{headers,setHeaders,loading,gap,headerRef,topHeaders,rightBorders,hasScrollTop}=props,[dragging,setDragging]=(0,react.useState)(-1),dividerPositionRef=(0,react.useRef)(0),onMouseHoldDown=(0,react.useCallback)(columnIndex=>event=>{setDragging(columnIndex),dividerPositionRef.current=event.clientX},[]),onMouseHoldUp=(0,react.useCallback)(()=>{setDragging(-1),dividerPositionRef.current=0},[]),onMouseHoldMove=event=>{const columnIndex=dragging;if(!dividerPositionRef.current||-1===columnIndex)return;const moveX=event.clientX-(dividerPositionRef.current||0);dividerPositionRef.current=event.clientX;const newHeaders=[...headers];newHeaders[columnIndex]=TableHead_objectSpread(TableHead_objectSpread({},newHeaders[columnIndex]),{},{width:Math.max(newHeaders[columnIndex].width+moveX,newHeaders[columnIndex].minWidth)}),setHeaders(fixHeaders(newHeaders))},displayTopHeader=!!rightBorders.length,headersWidth=headers.reduce((sum,head)=>{var _head$visible,_head$visible$getVisi;return sum+(null!==(_head$visible=head.visible)&&void 0!==_head$visible&&null!==(_head$visible$getVisi=_head$visible.getVisible)&&void 0!==_head$visible$getVisi&&_head$visible$getVisi.call(_head$visible)?head.width:0)},0);return react.createElement("div",{className:"jk-table-head-container",ref:headerRef,onMouseMove:onMouseHoldMove,style:{paddingBottom:gap}},displayTopHeader&&react.createElement("div",{className:(0,helpers.xW)("jk-table-head",{"elevation-1":hasScrollTop}),style:{width:headersWidth}},react.Children.toArray(topHeaders.map((header,index)=>{var _topHeaders;return react.createElement(RenderHeader,{key:header.headIndex,header,onMouseHoldMove,onMouseHoldUp,onMouseHoldDown,loading,headers,withTools:!1,withRightBorder:!(""===header.head&&""===(null===(_topHeaders=topHeaders[index+1])||void 0===_topHeaders?void 0:_topHeaders.head))&&index!==topHeaders.length-1,borderTopLeftRadius:0===index,borderTopRightRadius:index===topHeaders.length-1})}))),react.createElement("div",{className:(0,helpers.xW)("jk-table-head jk-br-ie",{"elevation-1":hasScrollTop}),onMouseLeave:onMouseHoldUp,style:{width:headersWidth}},react.Children.toArray(headers.filter(_ref=>{var _visible$getVisible;let{visible}=_ref;return null==visible||null===(_visible$getVisible=visible.getVisible)||void 0===_visible$getVisible?void 0:_visible$getVisible.call(visible)}).map((header,index,data)=>react.createElement(RenderHeader,{key:header.headIndex,header,onMouseHoldMove,onMouseHoldUp,onMouseHoldDown,loading,headers,withTools:!0,withRightBorder:!1,borderTopLeftRadius:!displayTopHeader&&0===index,borderTopRightRadius:!displayTopHeader&&index===topHeaders.length-1,borderBottomLeftRadius:0===index,borderBottomRightRadius:index===data.length-1})))))},TableHead=(0,react.memo)(TableHeadCmp);function RowVirtualizerFixed_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function RowVirtualizerFixed_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?RowVirtualizerFixed_ownKeys(Object(t),!0).forEach(function(r){RowVirtualizerFixed_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):RowVirtualizerFixed_ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function RowVirtualizerFixed_defineProperty(e,r,t){return(r=function RowVirtualizerFixed_toPropertyKey(t){var i=function RowVirtualizerFixed_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}TableHeadCmp.__docgenInfo={description:"",methods:[],displayName:"TableHeadCmp",props:{headers:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"},description:""},setHeaders:{required:!0,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"}],raw:"SetStateAction<DataViewerTableHeadersType<T>[]>"}],raw:"Dispatch<SetStateAction<DataViewerTableHeadersType<T>[]>>"},description:""},loading:{required:!0,tsType:{name:"boolean"},description:""},gap:{required:!0,tsType:{name:"number"},description:""},headerRef:{required:!0,tsType:{name:"UseResizeDetectorReturn['ref']",raw:"UseResizeDetectorReturn<any>['ref']"},description:""},topHeaders:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"},description:""},rightBorders:{required:!0,tsType:{name:"Array",elements:[{name:"number"}],raw:"number[]"},description:""},hasScrollTop:{required:!0,tsType:{name:"boolean"},description:""}}};const RowVirtualizerFixed=props=>{var _rowVirtualizer$scrol;const{data,headers,rowHeight,getRecordStyle,getRecordClassName,getRecordKey,onRecordClick,onRecordHover,onRecordRender,gap,loading,setHeaders,groups}=props,parentRef=(0,react.useRef)(null),{height:headerHeight=0,ref:headerRef}=(0,useResizeDetector.A)(),rowVirtualizer=(0,dist_esm.Te)({count:data.length,estimateSize:(0,react.useCallback)(()=>rowHeight+2*gap,[rowHeight,gap]),overscan:10,getScrollElement:()=>parentRef.current,getItemKey:getRecordKey?index=>getRecordKey({data,index}):void 0}),onRecordRenderRef=(0,react.useRef)(onRecordRender);onRecordRenderRef.current=onRecordRender,(0,react.useEffect)(()=>{rowVirtualizer.getVirtualItems().map(virtualRow=>{var _onRecordRenderRef$cu;return null===(_onRecordRenderRef$cu=onRecordRenderRef.current)||void 0===_onRecordRenderRef$cu?void 0:_onRecordRenderRef$cu.call(onRecordRenderRef,{data,index:virtualRow.index,isCard:!1})})},[data,rowVirtualizer]);const totalSize=rowVirtualizer.getTotalSize(),scrollEl=rowVirtualizer.scrollElement,scrollOffset=null!==(_rowVirtualizer$scrol=rowVirtualizer.scrollOffset)&&void 0!==_rowVirtualizer$scrol?_rowVirtualizer$scrol:0,hasScrollTop=scrollOffset>0,hasScrollBottom=!!scrollEl&&scrollOffset+scrollEl.clientHeight<totalSize+headerHeight+gap,hasScrollLeft=!!scrollEl&&scrollEl.scrollLeft>0,hasScrollRight=!!scrollEl&&scrollEl.scrollWidth-scrollEl.clientWidth-scrollEl.scrollLeft>1,virtualItems=rowVirtualizer.getVirtualItems(),withVerticalScroll=hasScrollTop||hasScrollBottom,{topHeaders,rightBorders,headersWidth,headersStickyWidth}=(0,react.useMemo)(()=>{const topHeaders=[],rightBorders=[];let index=0;for(const header of headers){var _header$visible,_header$visible$getVi;if(null!==(_header$visible=header.visible)&&void 0!==_header$visible&&null!==(_header$visible$getVi=_header$visible.getVisible)&&void 0!==_header$visible$getVi&&_header$visible$getVi.call(_header$visible)){const group=groups.find(group=>group.key===header.group);if(group){var _topHeaders,_topHeaders2,_topHeaders3;if((null===(_topHeaders=topHeaders[topHeaders.length-1])||void 0===_topHeaders?void 0:_topHeaders.group)===group.key)topHeaders[topHeaders.length-1].width+=header.width,(_topHeaders2=topHeaders[topHeaders.length-1]).sticky&&(_topHeaders2.sticky=header.sticky);else rightBorders.length&&""!==(null===(_topHeaders3=topHeaders[topHeaders.length-1])||void 0===_topHeaders3?void 0:_topHeaders3.head)||rightBorders.push(index-1),rightBorders.push(index),topHeaders.push(RowVirtualizerFixed_objectSpread({},header));rightBorders[rightBorders.length-1]=index,topHeaders[topHeaders.length-1].head=group.label}else topHeaders.push(RowVirtualizerFixed_objectSpread(RowVirtualizerFixed_objectSpread({},header),{},{head:""}));index++}}const headersStickyWidth=headers.reduce((sum,head)=>{var _head$visible;return sum+(head.sticky&&null!==(_head$visible=head.visible)&&void 0!==_head$visible&&_head$visible.getVisible()?head.width:0)},0);return{topHeaders,rightBorders,headersWidth:headers.reduce((sum,head)=>{var _head$visible2;return sum+(null!==(_head$visible2=head.visible)&&void 0!==_head$visible2&&_head$visible2.getVisible()?head.width:0)},0),headersStickyWidth}},[headers,groups]);return react.createElement("div",{ref:parentRef,style:{height:"100%",overflow:"scroll"},className:"jk-table-rows-container"},react.createElement(TableHead,{headers,setHeaders,loading,gap,headerRef,topHeaders,rightBorders,hasScrollTop}),hasScrollLeft&&react.createElement("div",{className:"expand-absolute",style:{width:headersStickyWidth,zIndex:3,background:"transparent",boxShadow:"0 0px 4px 0 var(--t-color-highlight), 0 0px 4px 1px var(--t-color-highlight)"}}),hasScrollRight&&react.createElement("div",{className:"expand-absolute",style:{width:withVerticalScroll?16:2,left:"unset",right:withVerticalScroll?-8:-1,zIndex:3,background:"transparent",boxShadow:"0 0px 4px 0 var(--t-color-highlight), 0 0px 4px 1px var(--t-color-highlight)"}}),hasScrollBottom&&react.createElement("div",{className:"expand-absolute",style:{height:1,top:"unset",bottom:-1,zIndex:3,background:"transparent",boxShadow:"0 0px 4px 0 var(--t-color-highlight), 0 0px 4px 1px var(--t-color-highlight)"}}),react.createElement("div",{className:"jk-table-rows-box",style:{height:totalSize}},!data.length&&react.createElement("div",{style:{position:"absolute",top:0,left:0,width:headersWidth,height:"".concat(1,"px"),transform:"translateY(".concat(0,"px)")},className:"jk-table-row"},react.Children.toArray(headers.filter(_ref=>{var _visible$getVisible;let{visible}=_ref;return null==visible||null===(_visible$getVisible=visible.getVisible)||void 0===_visible$getVisible?void 0:_visible$getVisible.call(visible)}).map(_ref2=>{let{index:columnIndex,width,sticky}=_ref2;return react.createElement("div",{key:columnIndex,style:{width,minWidth:width},className:(0,helpers.xW)({sticky:!!sticky})})}))),virtualItems.map(virtualRow=>react.createElement("div",{key:virtualRow.key,style:RowVirtualizerFixed_objectSpread(RowVirtualizerFixed_objectSpread({},(null==getRecordStyle?void 0:getRecordStyle({data,index:virtualRow.index,isCard:!1,isStickySection:!1}))||{}),{},{position:null!==virtualRow.start?"absolute":void 0,top:0,left:0,width:headersWidth,height:"".concat(virtualRow.size-2*gap,"px"),transform:null!==virtualRow.start?"translateY(".concat(virtualRow.start+gap,"px)"):void 0}),className:(0,helpers.xW)("jk-table-row",(null==getRecordClassName?void 0:getRecordClassName({data,index:virtualRow.index,isCard:!1,isStickySection:!0}))||""),onClick:()=>null==onRecordClick?void 0:onRecordClick({data,index:virtualRow.index,isCard:!1}),onMouseEnter:()=>null==onRecordHover?void 0:onRecordHover({data,index:virtualRow.index,isCard:!1})},react.Children.toArray(headers.filter(_ref3=>{var _visible$getVisible2;let{visible}=_ref3;return null==visible||null===(_visible$getVisible2=visible.getVisible)||void 0===_visible$getVisible2?void 0:_visible$getVisible2.call(visible)}).map((_ref4,index)=>{let{Field,index:columnIndex,width,sticky,accumulatedWidth}=_ref4;return react.createElement("div",{key:virtualRow.key+"_"+columnIndex,style:{width,minWidth:width,left:sticky?accumulatedWidth:void 0},className:(0,helpers.xW)({sticky:!!sticky,"with-right-border":rightBorders.includes(index)},"jk-table-row-field bc-we"),"data-testid":virtualRow.key+"_"+columnIndex},react.createElement(Field,{record:data[virtualRow.index],columnIndex,recordIndex:virtualRow.index,isCard:!1}))}))))))};RowVirtualizerFixed.__docgenInfo={description:"",methods:[],displayName:"RowVirtualizerFixed",props:{data:{required:!0,tsType:{name:"Array",elements:[{name:"T"}],raw:"T[]"},description:""},headers:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"},description:""},rowHeight:{required:!0,tsType:{name:"number"},description:""},getRecordKey:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number }) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}}]}},name:"props"}],return:{name:"string"}}},description:""},getRecordStyle:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => CSSProperties",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"CSSProperties"}}},description:""},getRecordClassName:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"string"}}},description:""},onRecordClick:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},onRecordHover:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},onRecordRender:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},gap:{required:!0,tsType:{name:"number"},description:""},loading:{required:!0,tsType:{name:"boolean"},description:""},setHeaders:{required:!0,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"}],raw:"SetStateAction<DataViewerTableHeadersType<T>[]>"}],raw:"Dispatch<SetStateAction<DataViewerTableHeadersType<T>[]>>"},description:""},groups:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  key: string,\n  label?: TableHeadType<T>,\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"label",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}}]}}],raw:"DataViewerGroupsType<T>[]"},description:""}}};const _excluded=["minWidth"];function ViewContainerRows_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function ViewContainerRows_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ViewContainerRows_ownKeys(Object(t),!0).forEach(function(r){ViewContainerRows_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ViewContainerRows_ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function ViewContainerRows_defineProperty(e,r,t){return(r=function ViewContainerRows_toPropertyKey(t){var i=function ViewContainerRows_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const minCellWidth=100,headersMinWidth=headers=>headers.map(head=>head.minWidth||minCellWidth),ViewContainerRows=props=>{const{headers,setHeaders,viewContainerWidth,rowHeight,loading,data,getRecordKey,getRecordStyle,getRecordClassName,onRecordClick,onRecordHover,onRecordRender,groups}=props,prevSizeWidth=(0,usePrevious.Z)(viewContainerWidth),prevHeaders=(0,react.useRef)(JSON.stringify(headersMinWidth(headers))),prevExtraWidth=(0,react.useRef)(0);return(0,react.useEffect)(()=>{const width=(viewContainerWidth||0)-constants.hZ,[visibleHeaders,totalMinUsedWidth,totalUsedWidth]=headers.reduce((_ref,_ref2)=>{let[visibleHeaders,totalMinUsedWidth,totalUsedWidth]=_ref,{minWidth=minCellWidth,visible,width}=_ref2;return[visibleHeaders+(visible?1:0),totalMinUsedWidth+(visible?minWidth:0),totalUsedWidth+(visible?width:0)]},[0,0,0]),extra=width>totalMinUsedWidth?width-totalMinUsedWidth:0;if(viewContainerWidth!==prevSizeWidth||prevHeaders.current!==JSON.stringify(headersMinWidth(headers))||extra!==prevExtraWidth.current||visibleHeaders&&0===totalUsedWidth){const newHeaders=[...headers];let accumulatedWidth=0;headers.forEach((_ref3,index)=>{var _restProps$visible;let{minWidth=minCellWidth}=_ref3,restProps=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref3,_excluded);if(null!==(_restProps$visible=restProps.visible)&&void 0!==_restProps$visible&&_restProps$visible.getVisible()){const percentage=minWidth/totalMinUsedWidth;newHeaders[index]=ViewContainerRows_objectSpread(ViewContainerRows_objectSpread({},restProps),{},{width:Math.floor(minWidth+extra*percentage),minWidth,accumulatedWidth}),accumulatedWidth+=newHeaders[index].width}}),setHeaders(newHeaders),prevHeaders.current=JSON.stringify(headersMinWidth(headers)),prevExtraWidth.current=extra}},[headers,prevSizeWidth,setHeaders,viewContainerWidth]),react.createElement(RowVirtualizerFixed,{data,headers,rowHeight,getRecordKey,getRecordClassName,getRecordStyle,onRecordClick,onRecordHover,onRecordRender,gap:4,loading,setHeaders,groups})};ViewContainerRows.__docgenInfo={description:"",methods:[],displayName:"ViewContainerRows",props:{headers:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"},description:""},setHeaders:{required:!0,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"}],raw:"SetStateAction<DataViewerTableHeadersType<T>[]>"}],raw:"Dispatch<SetStateAction<DataViewerTableHeadersType<T>[]>>"},description:""},viewContainerWidth:{required:!0,tsType:{name:"number"},description:""},rowHeight:{required:!0,tsType:{name:"number"},description:""},data:{required:!0,tsType:{name:"Array",elements:[{name:"T"}],raw:"T[]"},description:""},loading:{required:!0,tsType:{name:"boolean"},description:""},getRecordKey:{required:!0,tsType:{name:"union",raw:"GetRecordKeyType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number }) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}}]}},name:"props"}],return:{name:"string"}}},{name:"undefined"}]},description:""},getRecordStyle:{required:!0,tsType:{name:"union",raw:"GetRecordStyleType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => CSSProperties",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"CSSProperties"}}},{name:"undefined"}]},description:""},getRecordClassName:{required:!0,tsType:{name:"union",raw:"GetRecordClassNameType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"string"}}},{name:"undefined"}]},description:""},onRecordClick:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},onRecordHover:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},onRecordRender:{required:!0,tsType:{name:"union",raw:"OnRecordClickType<T> | undefined",elements:[{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},{name:"undefined"}]},description:""},groups:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  key: string,\n  label?: TableHeadType<T>,\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"label",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}}]}}],raw:"DataViewerGroupsType<T>[]"},description:""}}};var TableEyeIcon=__webpack_require__("./src/components/atoms/server/icons/google/TableEyeIcon.tsx");function FilterDrawer_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function FilterDrawer_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?FilterDrawer_ownKeys(Object(t),!0).forEach(function(r){FilterDrawer_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):FilterDrawer_ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function FilterDrawer_defineProperty(e,r,t){return(r=function FilterDrawer_toPropertyKey(t){var i=function FilterDrawer_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const RenderFilterTitle=_ref=>{let{header,columnIndex,onSort,order}=_ref;return react.createElement("div",{className:"jk-row space-between"},react.createElement("div",{className:"jk-row gap"},react.createElement("div",{className:"fw-bd"},renderHead({header,columnIndex}))),onSort?react.createElement("div",{className:(0,helpers.xW)("jk-row nowrap jk-tag tx-s cr-pr",{"bc-pl cr-we":!!order,"bc-hl":!order}),onClick:()=>onSort({columnIndex})},react.createElement(atoms.T,{className:"tt-se"},"sort")," ",0===order?react.createElement(server.ycB,null):order>0?react.createElement(server.U1D,null):react.createElement(server.RSQ,null)):react.createElement("div",null))},FilterDrawer=props=>{const{headers,isOpen,onClose,onFilter,onResetFilters}=props,[initialValues,setInitialValues]=(0,react.useState)({}),[values,setValues]=(0,react.useState)({}),[isFiltered,setIsFiltered]=(0,react.useState)(!1),onlyValues=obj=>Object.values(obj).map(val=>Array.isArray(val)?val.map(v=>(null==v?void 0:v.value)||v):val);(0,react.useEffect)(()=>{const{filtered,values}=isSomethingFiltered(headers);setInitialValues(onlyValues(values)),setValues(values),setIsFiltered(filtered)},[headers,isOpen]);const t=(0,useI18nStore.T)(state=>state.i18n.t);return react.createElement(molecules.pU,{isOpen,onClose,closeWhenKeyEscape:!0,closeWhenClickOutside:!0},react.createElement("div",{className:"jk-drawer-filters jk-col nowrap extend stretch"},react.createElement("div",{className:"jk-row left gap title cr-py jk-pg-sm"},react.createElement("div",{className:(0,helpers.xW)({active:!0},"jk-row")},react.createElement(server.O7G,null)),react.createElement(atoms.T,null,"order and filters")),react.createElement("div",{className:"jk-col top nowrap stretch space-between filter-drawer-columns flex-1"},headers.map((header,index)=>{const{index:columnIndex,filter,sort:{onSort,getOrder=()=>0}={}}=header;let filterCmp=null;if(isFilterText(filter))filterCmp=react.createElement(atoms.pd,{onChange:newValue=>setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:newValue})),value:values[columnIndex]||"",expand:!0,placeholder:(0,helpers.Zb)(t("search..."))});else if(isFilterSelect(filter))filterCmp=react.createElement(molecules.ye,{options:filter.options,selectedOptions:values[columnIndex]||[],onSelectOptions:options=>setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:options}))});else if(isFilterDate(filter)){var _values$columnIndex,_values$columnIndex$i;filterCmp=react.createElement(molecules.Hc,{type:filter.pickerType,date:null!==(_values$columnIndex=values[columnIndex])&&void 0!==_values$columnIndex&&null!==(_values$columnIndex$i=_values$columnIndex.isValidDate)&&void 0!==_values$columnIndex$i&&_values$columnIndex$i.call(_values$columnIndex)?values[columnIndex]:null,onDatePick:date=>setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:date})),onDateClean:()=>setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:""})),isDisabled:filter.isDisabled,isSelected:isSelected(values[columnIndex]),baseDate:filter.baseDate,twoLines:"year-month-day-hours-minutes-seconds-milliseconds"===filter.pickerType||"year-month-day-hours-minutes-seconds"===filter.pickerType||"year-month-day-hours-minutes"===filter.pickerType||"year-month-day-hours"===filter.pickerType})}else if(isFilterDateRange(filter)){const[start,end]=Array.isArray(null==values?void 0:values[columnIndex])?null==values?void 0:values[columnIndex]:[null,null];filterCmp=react.createElement(react.Fragment,null,react.createElement("div",null,react.createElement("div",{className:"jk-row left fw-bd"},react.createElement(atoms.T,{className:"tt-se"},"from")," :"),react.createElement(molecules.Hc,{type:filter.pickerType,date:start,onDatePick:date=>{end&&end.isValidDate()?setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:[date,end]})):setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:[date,date]}))},onDateClean:()=>setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:""})),isDisabled:orDatePickerDateFun(filter.isDisabled,isDisabledStart(end)),isSelected:orDatePickerDateFun(isSelected(start),isRangeSelected(start,end)),baseDate:filter.baseStartDate,twoLines:"year-month-day-hours-minutes-seconds-milliseconds"===filter.pickerType||"year-month-day-hours-minutes-seconds"===filter.pickerType||"year-month-day-hours-minutes"===filter.pickerType||"year-month-day-hours"===filter.pickerType})),react.createElement("div",null,react.createElement("div",{className:"jk-row left fw-bd"},react.createElement(atoms.T,{className:"tt-se"},"to")," :"),react.createElement(molecules.Hc,{type:filter.pickerType,date:end,onDatePick:date=>{start&&start.isValidDate()?setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:[start,date]})):setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:[date,date]}))},onDateClean:()=>setValues(prevState=>FilterDrawer_objectSpread(FilterDrawer_objectSpread({},prevState),{},{[columnIndex]:""})),isDisabled:orDatePickerDateFun(filter.isDisabled,isDisabledEnd(start)),isSelected:orDatePickerDateFun(isSelected(end),isRangeSelected(start,end)),baseDate:filter.baseEndDate,twoLines:"year-month-day-hours-minutes-seconds-milliseconds"===filter.pickerType||"year-month-day-hours-minutes-seconds"===filter.pickerType||"year-month-day-hours-minutes"===filter.pickerType||"year-month-day-hours"===filter.pickerType})))}return react.createElement("div",{className:"jk-col gap stretch jk-pg-sm-trl jk-pg-b",style:index?{borderTop:"1px solid var(--t-color-highlight)"}:{},key:columnIndex},react.createElement(RenderFilterTitle,{header,columnIndex,onSort,order:getOrder()}),filterCmp)})),react.createElement("div",{className:"jk-row-col space-between gap block jk-pg-sm filter-drawer-buttons"},react.createElement(atoms.$n,{type:"light",size:"small",onClick:()=>{onResetFilters(),onClose()},disabled:!isFiltered},react.createElement(atoms.T,{className:"tt-se"},"reset all filters")),react.createElement(atoms.$n,{size:"small",onClick:()=>{onFilter(values),onClose()},disabled:JSON.stringify(onlyValues(values))===JSON.stringify(initialValues)},react.createElement(atoms.T,{className:"tt-se"},"apply filters")))))};FilterDrawer.__docgenInfo={description:"",methods:[],displayName:"FilterDrawer",props:{headers:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onFilter:{required:!0,tsType:{name:"signature",type:"function",raw:"(values: FilterValuesType) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ [key: string]: string | OptionType<string>[] | Date | [ Date | null, Date | null ] }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | OptionType<string>[] | Date | [ Date | null, Date | null ]",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"},{name:"Date"},{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}],required:!0}}]}},name:"values"}],return:{name:"void"}}},description:""},onResetFilters:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const Pagination=props=>{const{dataLength,total,page,pageSize,loading,initializing,pageSizeOptions,jumpToPage,onPageSizeChange,isOnToolbar}=props,endPage=Math.max(Math.ceil(total/pageSize),1),t=(0,useI18nStore.T)(state=>state.i18n.t);(0,react.useEffect)(()=>{!initializing&&(page<1||endPage<page)&&jumpToPage(1)},[endPage,initializing,jumpToPage,page]),(0,react.useEffect)(()=>{pageSizeOptions.includes(pageSize)||onPageSizeChange(pageSizeOptions[0])},[pageSizeOptions,pageSize,onPageSizeChange]);const pages=[page];page>1&&pages.splice(0,0,page-1);for(let i=0;i<4;i++)pages.length<3&&page<endPage-i&&pages.push(page+1+i);const prev=page>1?()=>jumpToPage(page-1):void 0,next=page<endPage?()=>jumpToPage(page+1):void 0,firstItem=(page-1)*pageSize+1;return react.createElement("div",{className:(0,helpers.xW)("jk-data-viewer-pagination jk-row gap center",{loading})},react.createElement("div",{className:"jk-row center nowrap"},isOnToolbar?react.createElement("div",{className:"jk-row gap nowrap"},react.createElement("div",{className:"jk-row nowrap jk-br-ie tx-s ws-np bc-we"},react.createElement("div",{"data-tooltip-id":"jk-tooltip","data-tooltip-content":"previous",className:(0,helpers.xW)("cr-pr jk-row jk-br-ie jk-input-",{disabled:1===page||initializing}),onClick:prev},react.createElement(server.EjP,null)),react.createElement("div",{style:{padding:"0 4px"},className:"ws-np"},dataLength?"".concat(firstItem," - ").concat(firstItem+dataLength-1):"0"," ",react.createElement(atoms.T,null,"of")," ",total),react.createElement("div",{"data-tooltip-id":"jk-tooltip","data-tooltip-content":"next",className:(0,helpers.xW)("cr-pr jk-row jk-br-ie jk-input-",{disabled:page===endPage||initializing}),onClick:next},react.createElement(server.afL,null))),pageSizeOptions.length>1&&react.createElement(atoms.l6,{options:pageSizeOptions.map(option=>({value:option,label:react.createElement("div",{className:"jk-row left nowrap"},option," ",react.createElement(atoms.T,null,"per page"))})),selectedOption:{value:pageSize},onChange:initializing?void 0:_ref=>{let{value}=_ref;return onPageSizeChange(value)},optionsPlacement:"bottom",className:"bc-we jk-br-ie"})):react.createElement(react.Fragment,null,react.createElement("div",{className:(0,helpers.xW)("page-item cr-pr jk-row jk-border-radius screen md lg hg",{disabled:1===page}),onClick:prev},react.createElement(server.EjP,null)),react.createElement("div",{className:"jk-row jk-border-radius center page-items"},1<pages[0]&&react.createElement(react.Fragment,null,react.createElement("div",{className:(0,helpers.xW)("page-item cr-pr jk-row jk-border-radius cr-g3",{selected:1===page}),onClick:()=>jumpToPage(1)},loading&&1===page?react.createElement(server.Gcs,null):1),2<pages[0]&&react.createElement("div",{className:"jk-row",onClick:()=>jumpToPage(Math.max(page-3,1))},react.createElement(server.C_2,{rotate:-90}))),pages.map(index=>react.createElement("div",{key:index,className:(0,helpers.xW)("page-item cr-pr jk-row jk-border-radius fw-bd",{selected:index===page,"fw-br":index===page}),onClick:()=>jumpToPage(index)},loading&&index===page?react.createElement(server.Gcs,null):index)),pages[pages.length-1]<endPage&&react.createElement(react.Fragment,null,endPage-1>pages[pages.length-1]&&react.createElement("div",{className:"jk-row",onClick:()=>jumpToPage(Math.min(page+3,endPage))},react.createElement(server.C_2,{rotate:90})),react.createElement("div",{className:(0,helpers.xW)("page-item cr-pr jk-row jk-border-radius cr-g3",{selected:endPage===page}),onClick:()=>jumpToPage(endPage)},loading&&endPage===page?react.createElement(server.Gcs,null):endPage))),react.createElement("div",{className:(0,helpers.xW)("page-item cr-pr jk-row jk-border-radius screen md lg hg",{disabled:page===endPage}),onClick:next},react.createElement(server.afL,null)))),!isOnToolbar&&react.createElement(atoms.l6,{options:pageSizeOptions.map(option=>({value:option,label:option+" / "+t("page")})),selectedOption:{value:pageSize},onChange:initializing?void 0:_ref2=>{let{value}=_ref2;return onPageSizeChange(value)},optionsPlacement:"top",disabled:initializing}))};Pagination.__docgenInfo={description:"",methods:[],displayName:"Pagination",props:{dataLength:{required:!0,tsType:{name:"number"},description:""},total:{required:!0,tsType:{name:"number"},description:""},page:{required:!0,tsType:{name:"number"},description:""},pageSize:{required:!0,tsType:{name:"number"},description:""},loading:{required:!0,tsType:{name:"boolean"},description:""},initializing:{required:!0,tsType:{name:"boolean"},description:""},pageSizeOptions:{required:!0,tsType:{name:"Array",elements:[{name:"number"}],raw:"number[]"},description:""},jumpToPage:{required:!0,tsType:{name:"signature",type:"function",raw:"(page: number) => void",signature:{arguments:[{type:{name:"number"},name:"page"}],return:{name:"void"}}},description:""},onPageSizeChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(pageSize: number) => void",signature:{arguments:[{type:{name:"number"},name:"pageSize"}],return:{name:"void"}}},description:""},isOnToolbar:{required:!1,tsType:{name:"boolean"},description:""}}};const buttonFilterStyles=active=>(0,helpers.xW)({"bc-pl cr-pt":active,"bc-we":!active,active},"jk-row jk-data-viewer-tools-filter jk-br-ie cr-pr jk-row nowrap"),ToolbarButtonIcon=_ref=>{let{Icon,active,onClick,tooltipContent,className="",children,rotate,disabled=!1}=_ref;return react.createElement("div",{"data-tooltip-id":"jk-tooltip","data-tooltip-content":tooltipContent,className:(0,helpers.xW)(buttonFilterStyles(!!active),className,{disabled}),onClick},react.createElement(Icon,{className:"jk-br-ie",size:"small",rotate}),children)},DataViewerToolbarCmp=props=>{var _window;const{extraNodes,setViewMode,headers,toolbarRef,viewMode,dataLength,rowsView,cardsView,loading,initializing,onReload,onAllFilters,pagination,extraNodesFloating,showFilterDrawerKey,filterKey,filters,downloads,requestProps}=props,{filtered,values}=isSomethingFiltered(headers),[downloading,setDownloading]=(0,react.useState)(!1),{viewPortSize}=(0,useJukiUI.p)(),{notifyResponse}=(0,hooks.Eq)(),searchParams=(0,useRouterStore.I)(state=>state.searchParams),setLoaderRef=(0,react.useRef)(void 0),[showFilterDrawer,_setShowFilterDrawer]=(0,useSessionStorage.F)(showFilterDrawerKey,"open"===searchParams.get(showFilterDrawerKey)?"open":"close"),setShowFilterDrawer=(0,react.useCallback)(show=>{_setShowFilterDrawer(show?"open":"close")},[_setShowFilterDrawer]),isMobileViewPort="sm"===viewPortSize,viewViews=!(isMobileViewPort&&(!rowsView||!cardsView)),viewFilterButton=!!headers.filter(head=>head.filter||head.sort).length;(0,react.useEffect)(()=>{var _setLoaderRef$current,_setLoaderRef$current2;loading?null===(_setLoaderRef$current=setLoaderRef.current)||void 0===_setLoaderRef$current||_setLoaderRef$current.call(setLoaderRef,esm.nW6.LOADING):null===(_setLoaderRef$current2=setLoaderRef.current)||void 0===_setLoaderRef$current2||_setLoaderRef$current2.call(setLoaderRef,esm.nW6.NONE)},[loading]);new URL((null===(_window=window)||void 0===_window||null===(_window=_window.location)||void 0===_window?void 0:_window.href)||"").searchParams.set(filterKey,JSON.stringify(filters));const visibles=headers.filter(filter=>{var _filter$visible;return null===(_filter$visible=filter.visible)||void 0===_filter$visible?void 0:_filter$visible.getVisible()}).length;return react.createElement("div",{className:(0,helpers.xW)("jk-data-viewer-toolbar with-vertical-scroll pn-re jk-row space-between nowrap jk-br-ie jk-pg-xsm-rl",viewMode.toLowerCase()),ref:toolbarRef},react.createElement(FilterDrawer,{isOpen:"open"===showFilterDrawer,headers,onClose:()=>setShowFilterDrawer(!1),onFilter:values=>onAllFilters(values),onResetFilters:()=>onAllFilters({})}),react.createElement("div",{className:"jk-table-view-extra-nodes jk-row left gap screen md lg hg"},extraNodes.map(helpers.lm)),react.createElement("div",{className:"jk-table-view-tools jk-br-ie jk-pg-xsm-tb jk-row-col gap stretch"},react.createElement("div",{className:"jk-row nowrap gap"},onReload&&react.createElement(ToolbarButtonIcon,{Icon:loading?server.Gcs:server.fNY,tooltipContent:loading?"reloading data":"reload data",active:loading,onClick:onReload,className:"jk-input-select",key:"reload-button-icon"}),pagination.withPagination&&react.createElement(Pagination,{dataLength,loading,initializing,pageSizeOptions:isMobileViewPort?[20]:pagination.pageSizeOptions,total:pagination.total,page:pagination.page,pageSize:pagination.pageSize,jumpToPage:pagination.jumpToPage,onPageSizeChange:pagination.onPageSizeChange,isOnToolbar:!0,key:"first-row-pagination"})),react.createElement("div",{className:(0,helpers.xW)("jk-row nowrap gap")},viewFilterButton&&react.createElement(ToolbarButtonIcon,{Icon:server.O7G,tooltipContent:"open filters",onClick:()=>setShowFilterDrawer(!0),active:filtered,className:"jk-input-select"},!!Object.values(values).length&&react.createElement(react.Fragment,null," ",react.createElement("span",{className:"bc-hl jk-br-ie",style:{lineHeight:1,padding:"0 4px"}},Object.values(values).length)," ")),!!downloads.length&&react.createElement(atoms.l6,{options:downloads,onChange:async _ref2=>{var _downloadItem$getUrl,_downloadItem$getFile;let{value}=_ref2;setDownloading(!0);const downloadItem=downloads.find(download=>value===download.value),url=null!==(_downloadItem$getUrl=null==downloadItem?void 0:downloadItem.getUrl(requestProps))&&void 0!==_downloadItem$getUrl?_downloadItem$getUrl:"",filename=null!==(_downloadItem$getFile=null==downloadItem?void 0:downloadItem.getFilename(requestProps))&&void 0!==_downloadItem$getFile?_downloadItem$getFile:"",result=(0,esm.Hu3)(await(0,helpers.Du)(url));result.success&&(await(0,helpers.ER)(result.content.urlExportedFile,filename),notifyResponse(result)),setDownloading(!1)},selectedOption:{value:""},containerWidth:"child"},react.createElement(ToolbarButtonIcon,{Icon:downloading?server.Gcs:server.s3U,tooltipContent:downloading?"downloading":"download",className:"jk-input-select",onClick:downloading?event=>event.stopPropagation():void 0})),react.createElement(atoms.KF,{options:headers.map(header=>({label:renderHead({header,columnIndex:header.index}),value:header.index})),selectedOptions:headers.filter(_ref3=>{var _visible$getVisible;let{visible}=_ref3;return null==visible||null===(_visible$getVisible=visible.getVisible)||void 0===_visible$getVisible?void 0:_visible$getVisible.call(visible)}).map(_ref4=>{let{index}=_ref4;return{value:index}}),containerWidth:"child",onChange:(_,lastOptionChanged)=>{const header=headers.find(head=>head.index===(null==lastOptionChanged?void 0:lastOptionChanged.value));null==header||header.visible.onToggle()}},react.createElement(ToolbarButtonIcon,{Icon:TableEyeIcon.TableEyeIcon,tooltipContent:"visibility of columns",className:"jk-input-select",active:visibles!==headers.length},react.createElement(react.Fragment,null," ",react.createElement("span",{className:"bc-hl jk-br-ie ws-np",style:{lineHeight:1,padding:"0 4px"}},visibles," / ",headers.length)," "))),viewViews&&(rowsView||cardsView)&&react.createElement(react.Fragment,null,react.createElement("div",{className:"jk-divider horizontal"}),react.createElement("div",{className:(0,helpers.xW)("jk-row nowrap jk-table-view-tools-view-mode",{rowsView,cardsView})},rowsView&&react.createElement(ToolbarButtonIcon,{Icon:server.dzW,tooltipContent:"list view",className:"rows",active:viewMode===esm.pln.ROWS,onClick:()=>setViewMode(esm.pln.ROWS,!0),rotate:90}),cardsView&&react.createElement(ToolbarButtonIcon,{Icon:server.$To,tooltipContent:"cards view","data-tooltip-place":"top-end",className:"cards",active:viewMode===esm.pln.CARDS,onClick:()=>setViewMode(esm.pln.CARDS,!0)}))),!!extraNodes.length&&isMobileViewPort&&!extraNodesFloating&&react.createElement(react.Fragment,null,react.createElement("div",{className:"jk-divider horizontal"}),react.createElement("div",null,react.createElement(atoms.AM,{popoverClassName:"bc-we jk-br-ie elevation-1",content:react.createElement("div",{className:"jk-pg-sm jk-col stretch gap"},extraNodes.map(helpers.lm)),triggerOn:"click",placement:"bottom"},react.createElement("div",{className:"jk-row"},react.createElement(server.ZB$,null))))))))},DataViewerToolbar=(0,react.memo)(DataViewerToolbarCmp);DataViewerToolbarCmp.__docgenInfo={description:"",methods:[],displayName:"DataViewerToolbarCmp",props:{cardsView:{required:!0,tsType:{name:"boolean"},description:""},dataLength:{required:!0,tsType:{name:"number"},description:""},extraNodes:{required:!0,tsType:{name:"Array",elements:[{name:"union",raw:"ReactNode | (() => ReactNode)",elements:[{name:"ReactNode"},{name:"unknown"}]}],raw:"ReactNodeOrFunctionType[]"},description:""},extraNodesFloating:{required:!0,tsType:{name:"boolean"},description:""},headers:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"},description:""},toolbarRef:{required:!0,tsType:{name:"RefObject",elements:[{name:"union",raw:"HTMLDivElement | null",elements:[{name:"HTMLDivElement"},{name:"null"}]}],raw:"RefObject<HTMLDivElement | null>"},description:""},loading:{required:!0,tsType:{name:"boolean"},description:""},initializing:{required:!0,tsType:{name:"boolean"},description:""},onAllFilters:{required:!0,tsType:{name:"signature",type:"function",raw:"(values: FilterValuesType) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ [key: string]: string | OptionType<string>[] | Date | [ Date | null, Date | null ] }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | OptionType<string>[] | Date | [ Date | null, Date | null ]",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"},{name:"Date"},{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}],required:!0}}]}},name:"values"}],return:{name:"void"}}},description:""},onReload:{required:!0,tsType:{name:"union",raw:"(() => void) | null",elements:[{name:"unknown"},{name:"null"}]},description:""},rowsView:{required:!0,tsType:{name:"boolean"},description:""},setViewMode:{required:!0,tsType:{name:"signature",type:"function",raw:"(viewMode: DataViewMode, replace?: boolean) => void",signature:{arguments:[{type:{name:"DataViewMode"},name:"viewMode"},{type:{name:"boolean"},name:"replace"}],return:{name:"void"}}},description:""},viewMode:{required:!0,tsType:{name:"DataViewMode"},description:""},pagination:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  withPagination: boolean,\n  total: number,\n  page: number,\n  pageSize: number,\n  pageSizeOptions: number[],\n  jumpToPage: (page: number) => void,\n  onPageSizeChange: (pageSize: number) => void,\n}",signature:{properties:[{key:"withPagination",value:{name:"boolean",required:!0}},{key:"total",value:{name:"number",required:!0}},{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}},{key:"pageSizeOptions",value:{name:"Array",elements:[{name:"number"}],raw:"number[]",required:!0}},{key:"jumpToPage",value:{name:"signature",type:"function",raw:"(page: number) => void",signature:{arguments:[{type:{name:"number"},name:"page"}],return:{name:"void"}},required:!0}},{key:"onPageSizeChange",value:{name:"signature",type:"function",raw:"(pageSize: number) => void",signature:{arguments:[{type:{name:"number"},name:"pageSize"}],return:{name:"void"}},required:!0}}]}},description:""},showFilterDrawerKey:{required:!0,tsType:{name:"string"},description:""},filterKey:{required:!0,tsType:{name:"string"},description:""},filters:{required:!0,tsType:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]}},description:""},requestProps:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},description:""},downloads:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  value: T,\n  label: ReactNode,\n  getUrl: (props: DataViewerRequestPropsType) => string,\n  getFilename: (props: DataViewerRequestPropsType) => string,\n}",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}},{key:"getUrl",value:{name:"signature",type:"function",raw:"(props: DataViewerRequestPropsType) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},name:"props"}],return:{name:"string"}},required:!0}},{key:"getFilename",value:{name:"signature",type:"function",raw:"(props: DataViewerRequestPropsType) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},name:"props"}],return:{name:"string"}},required:!0}}]}}],raw:"DataViewerDownloadType<string>[]"},description:""}}};const DisplayDataViewer=props=>{const{viewPortSize,cards:{height:cardHeight=300,width:cardWidth=256,expanded:cardExpanded=!1}={height:300,width:256,expanded:!1},cardsView,data,extraNodes,headers,setHeaders,loading,initializing,onAllFilters,onReload,rows:{height:rowHeight=56}={height:56},rowsView,viewMode,setViewMode,getRecordKey,pagination,getRecordStyle,getRecordClassName,onRecordClick,onRecordHover,onRecordRender,extraNodesFloating=!1,showFilterDrawerKey,filterKey,filters,groups,downloads,requestProps}=props,{width:viewContainerWidth,ref:viewContainerRef}=(0,useResizeDetector.A)(),toolbarRef=(0,react.useRef)(null),{height:toolbarHeight=0}=(0,useResizeDetector.A)({targetRef:toolbarRef}),isMobileViewPort="sm"===viewPortSize;return react.createElement("div",{className:"jk-data-viewer-content jk-br-ie",style:{"--jk-table-toolbar-height":toolbarHeight+"px",position:"relative"}},react.createElement(DataViewerToolbar,{setViewMode,extraNodes,headers,toolbarRef,dataLength:data.length,viewMode,rowsView,cardsView,loading,initializing,onReload,onAllFilters,pagination,extraNodesFloating,showFilterDrawerKey,filterKey,filters,downloads,requestProps}),extraNodesFloating&&isMobileViewPort&&react.createElement("div",{className:"jk-col gap nowrap",style:{position:"absolute",bottom:"var(--pad-t)",right:"var(--pad-t)",zIndex:1}},react.Children.toArray(extraNodes.map((extraButton,index)=>(0,helpers.lm)(extraButton,index)))),react.createElement("div",{className:(0,helpers.xW)("jk-view-container",viewMode.toLowerCase()),ref:viewContainerRef},data.length>0&&loading&&react.createElement(server.QdK,null),react.createElement("div",{className:(0,helpers.xW)("jk-data-viewer-body",viewMode.toLowerCase()),style:{width:viewContainerWidth||0}},0===data.length&&loading&&react.createElement("div",{className:"jk-row center expand-absolute",style:{height:"100%"}},react.createElement("div",{className:"jk-row",style:{alignItems:"baseline"}},react.createElement(atoms.T,{className:"tt-se"},"loading data")," ",react.createElement("div",{className:"dot-flashing"}))),viewMode===esm.pln.ROWS?react.createElement(ViewContainerRows,{headers,setHeaders,viewContainerWidth:viewContainerWidth||0,rowHeight,data,loading,getRecordKey,getRecordStyle,getRecordClassName,onRecordClick,onRecordHover,onRecordRender,groups}):react.createElement(CardRowVirtualizerFixed,{headers,data,cardHeight,cardWidth,rowWidth:(viewContainerWidth||0)-constants.hZ,getRecordClassName,getRecordStyle,onRecordClick,onRecordHover,onRecordRender,expandedCards:cardExpanded}))))};DisplayDataViewer.__docgenInfo={description:"",methods:[],displayName:"DisplayDataViewer",props:{viewPortSize:{required:!1,tsType:{name:"union",raw:"'hg' | 'lg' | 'md' | 'sm' | ''",elements:[{name:"literal",value:"'hg'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'md'"},{name:"literal",value:"'sm'"},{name:"literal",value:"''"}]},description:""},cards:{required:!1,tsType:{name:"signature",type:"object",raw:"{ height?: number, width?: number, expanded?: boolean }",signature:{properties:[{key:"height",value:{name:"number",required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"expanded",value:{name:"boolean",required:!1}}]}},description:""},cardsView:{required:!0,tsType:{name:"boolean"},description:""},data:{required:!0,tsType:{name:"Array",elements:[{name:"T"}],raw:"T[]"},description:""},extraNodes:{required:!0,tsType:{name:"Array",elements:[{name:"union",raw:"ReactNode | (() => ReactNode)",elements:[{name:"ReactNode"},{name:"unknown"}]}],raw:"ReactNodeOrFunctionType[]"},description:""},extraNodesFloating:{required:!1,tsType:{name:"boolean"},description:""},headers:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"},description:""},groups:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  key: string,\n  label?: TableHeadType<T>,\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"label",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}}]}}],raw:"DataViewerGroupsType<T>[]"},description:""},setHeaders:{required:!0,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Array",elements:[{name:"intersection",raw:"TableHeadersType<T> & {\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",elements:[{name:"signature",type:"object",raw:"{\n  cardPosition?: CardPositionType,\n  Field: TableHeadCmpFieldType<T>,\n  filter?: TableHeaderFilterType,\n  head?: TableHeadType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: TableSortType,\n  visible: TableVisibleType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"filter",value:{name:"union",raw:"TableHeaderFilterTextType\n| TableHeaderFilterSelectType\n| TableHeaderFilterDateType\n| TableHeaderFilterDateRangeType",elements:[{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, text: string }) => void,\n  onReset: () => void,\n  getFilter: () => string, // text\n  type: typeof FILTER_TEXT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => string",signature:{arguments:[],return:{name:"string"}},required:!0}},{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  onFilter: (props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void,\n  onReset: () => void,\n  options: OptionType<string>[],\n  getFilter: () => OptionType<string>[], // selectedOptions\n  type: typeof FILTER_SELECT,\n  online: boolean,\n}",signature:{properties:[{key:"onFilter",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedOptions: OptionType<string>[] }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedOptions: OptionType<string>[] }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => OptionType<string>[]",signature:{arguments:[],return:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"}},required:!0}},{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate: Date,\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, selectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  getFilter: () => Date | null, // selectedDate\n  type: typeof FILTER_DATE,\n  online: boolean,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => Date | null",signature:{arguments:[],return:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}},required:!0}},{key:"type",value:{name:"FILTER_DATE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate: Date,\n  baseStartDate: Date,\n  // startSelectedDate: Date | null,\n  // endSelectedDate: Date | null,\n  getFilter: () => [ Date | null, Date | null ],\n  isDisabled: DatePickerDateFunType,\n  onFilter: ((props: { columnIndex: string, startSelectedDate: Date, endSelectedDate: Date }) => void),\n  onReset: () => void,\n  pickerType: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n  online: boolean,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!0}},{key:"baseStartDate",value:{name:"Date",required:!0}},{key:"getFilter",value:{name:"signature",type:"function",raw:"() => [ Date | null, Date | null ]",signature:{arguments:[],return:{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!0}},{key:"onFilter",value:{name:"unknown",required:!0}},{key:"onReset",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!0}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}},{key:"online",value:{name:"boolean",required:!0}}]}}],required:!1}},{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"signature",type:"object",raw:"{\n  onSort: TableSortOnSortType,\n  getOrder: () => TableSortOrderType,\n  online: boolean,\n}",signature:{properties:[{key:"onSort",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"void"}},required:!0}},{key:"getOrder",value:{name:"signature",type:"function",raw:"() => TableSortOrderType",signature:{arguments:[],return:{name:"union",raw:"1 | -1 | 0",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"},{name:"literal",value:"0"}]}},required:!0}},{key:"online",value:{name:"boolean",required:!0}}]},required:!1}},{key:"visible",value:{name:"signature",type:"object",raw:"{\n  onToggle: () => void,\n  getVisible: () => boolean,\n}",signature:{properties:[{key:"onToggle",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}},{key:"getVisible",value:{name:"signature",type:"function",raw:"() => boolean",signature:{arguments:[],return:{name:"boolean"}},required:!0}}]},required:!0}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:"{\n  minWidth: number,\n  width: number,\n  accumulatedWidth: number,\n  headIndex: number,\n}",signature:{properties:[{key:"minWidth",value:{name:"number",required:!0}},{key:"width",value:{name:"number",required:!0}},{key:"accumulatedWidth",value:{name:"number",required:!0}},{key:"headIndex",value:{name:"number",required:!0}}]}}]}],raw:"DataViewerTableHeadersType<T>[]"}],raw:"SetStateAction<DataViewerTableHeadersType<T>[]>"}],raw:"Dispatch<SetStateAction<DataViewerTableHeadersType<T>[]>>"},description:""},loading:{required:!0,tsType:{name:"boolean"},description:""},initializing:{required:!0,tsType:{name:"boolean"},description:""},onAllFilters:{required:!0,tsType:{name:"signature",type:"function",raw:"(values: FilterValuesType) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ [key: string]: string | OptionType<string>[] | Date | [ Date | null, Date | null ] }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | OptionType<string>[] | Date | [ Date | null, Date | null ]",elements:[{name:"string"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]"},{name:"Date"},{name:"tuple",raw:"[ Date | null, Date | null ]",elements:[{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]}]}],required:!0}}]}},name:"values"}],return:{name:"void"}}},description:""},onReload:{required:!0,tsType:{name:"union",raw:"(() => void) | null",elements:[{name:"unknown"},{name:"null"}]},description:""},showFilterDrawerKey:{required:!0,tsType:{name:"string"},description:""},rows:{required:!1,tsType:{name:"signature",type:"object",raw:"{ height?: number }",signature:{properties:[{key:"height",value:{name:"number",required:!1}}]}},description:""},rowsView:{required:!0,tsType:{name:"boolean"},description:""},setViewMode:{required:!0,tsType:{name:"signature",type:"function",raw:"(viewMode: DataViewMode) => void",signature:{arguments:[{type:{name:"DataViewMode"},name:"viewMode"}],return:{name:"void"}}},description:""},viewMode:{required:!0,tsType:{name:"DataViewMode"},description:""},getRecordKey:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number }) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}}]}},name:"props"}],return:{name:"string"}}},description:""},pagination:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  withPagination: boolean,\n  total: number,\n  page: number,\n  pageSize: number,\n  pageSizeOptions: number[],\n  jumpToPage: (page: number) => void,\n  onPageSizeChange: (pageSize: number) => void,\n}",signature:{properties:[{key:"withPagination",value:{name:"boolean",required:!0}},{key:"total",value:{name:"number",required:!0}},{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}},{key:"pageSizeOptions",value:{name:"Array",elements:[{name:"number"}],raw:"number[]",required:!0}},{key:"jumpToPage",value:{name:"signature",type:"function",raw:"(page: number) => void",signature:{arguments:[{type:{name:"number"},name:"page"}],return:{name:"void"}},required:!0}},{key:"onPageSizeChange",value:{name:"signature",type:"function",raw:"(pageSize: number) => void",signature:{arguments:[{type:{name:"number"},name:"pageSize"}],return:{name:"void"}},required:!0}}]}},description:""},filterKey:{required:!0,tsType:{name:"string"},description:""},filters:{required:!0,tsType:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]}},description:""},getRecordStyle:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => CSSProperties",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"CSSProperties"}}},description:""},getRecordClassName:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"string"}}},description:""},onRecordClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onRecordHover:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onRecordRender:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},downloads:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  value: T,\n  label: ReactNode,\n  getUrl: (props: DataViewerRequestPropsType) => string,\n  getFilename: (props: DataViewerRequestPropsType) => string,\n}",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}},{key:"getUrl",value:{name:"signature",type:"function",raw:"(props: DataViewerRequestPropsType) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},name:"props"}],return:{name:"string"}},required:!0}},{key:"getFilename",value:{name:"signature",type:"function",raw:"(props: DataViewerRequestPropsType) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},name:"props"}],return:{name:"string"}},required:!0}}]}}],raw:"DataViewerDownloadType<string>[]"},description:""},requestProps:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},description:""}}};const DataViewer_excluded=["sort","filter"];function DataViewer_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function DataViewer_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?DataViewer_ownKeys(Object(t),!0).forEach(function(r){DataViewer_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):DataViewer_ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function DataViewer_defineProperty(e,r,t){return(r=function DataViewer_toPropertyKey(t){var i=function DataViewer_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const DEFAULT_PICKER_TYPE="year-month-day-hours-minutes-seconds";function getTextWidth(text,font){const context=(getTextWidth.canvas||(getTextWidth.canvas=document.createElement("canvas"))).getContext("2d");if(context){context.font=font;return context.measureText(text).width}return 0}const join=array=>array.join(esm.GN4),split=text=>text.split(esm.GN4),DataViewer_isSomethingFiltered=newSearchFilter=>!!Object.values(newSearchFilter).filter(search=>!!search&&(!Array.isArray(search)||search.length)).length,DataViewer=props=>{var _searchParams$get;const{cards,cardsView=!0,className="",data,extraNodes:initialExtraNodes,headers,initialViewMode:_initialViewMode,name="",request,rows,rowsView=!0,setLoaderStatusRef,reloadRef,totalData:initialTotalData,pageSizeOptions:initialPageSizeOptions,getRecordKey,getPageQueryParam=getPageKey,getPageSizeQueryParam=getPageSizeKey,getSortQueryParam=getSortKey,getFilterQueryParam=getFilterKey,getViewModeQueryParam=getViewModeKey,getShowFilterDrawerQueryParam=getShowFilterDrawerKey,getVisiblesQueryParam=getVisiblesKey,getRecordStyle,getRecordClassName,onRecordClick,onRecordHover,onRecordRender,extraNodesFloating,setDataTableRef:_setDataTableRef,initializing:initialInitializing=!1,downloads,groups}=props,{viewPortSize}=(0,useJukiUI.p)(),preferredDataViewMode=(0,useUserStore.k)(state=>state.user.settings[esm.mZ_.DATA_VIEW_MODE]),searchParams=(0,useRouterStore.I)(state=>state.searchParams),t=(0,useI18nStore.T)(state=>state.i18n.t),withPagination=!!initialPageSizeOptions,showFilterDrawerKey=getShowFilterDrawerQueryParam(name),[reloadCount,setReloadCount]=(0,react.useState)(0),[loaderStatus,setLoaderStatus]=(0,react.useState)(esm.nW6.LOADING),[_initializing,setInitializing]=(0,react.useState)(!0);(0,react.useEffect)(()=>{loaderStatus!==esm.nW6.LOADING&&setInitializing(!1)},[loaderStatus]);const initializing=_initializing||initialInitializing,sortKey=getSortQueryParam(name),iniSort=searchParams.get(sortKey),[searchSorts,setSort,deleteSort]=(0,useSessionStorage.F)(sortKey,iniSort),searchSortsRef=(0,hooks.mU)(searchSorts),visiblesKey=getVisiblesQueryParam(name),[searchVisibles,setVisibles]=(0,useSessionStorage.F)(visiblesKey,searchParams.get(visiblesKey),headers.map(_ref=>{let{index}=_ref;return index}).join(esm.GN4)),filterKey=getFilterQueryParam(name),iniFilters=searchParams.get(filterKey)||"",[_searchFilter,setFilter,deleteFilter]=(0,useSessionStorage.F)(filterKey,(0,esm.UWh)(iniFilters)?iniFilters:null),filters=(0,react.useMemo)(()=>{const initialFilters=(0,esm.UWh)(_searchFilter)?JSON.parse(_searchFilter):{},result={};for(const head of headers)result[head.index]=initialFilters[head.index];return result},[_searchFilter,headers]),filtersRef=(0,hooks.mU)(filters),[dataTable,setDataTable]=(0,react.useState)(data),prevRefreshCount=(0,react.useRef)(void 0),prevPage=(0,react.useRef)(void 0),prevPageSize=(0,react.useRef)(void 0),prevSearchSorts=(0,react.useRef)(void 0),prevSearchFilter=(0,react.useRef)(void 0),firstRender=(0,react.useRef)(!0),pageKey=getPageQueryParam(name),pageSizeKey=getPageSizeQueryParam(name),initialPageSizeOptionsString=JSON.stringify(null!=initialPageSizeOptions?initialPageSizeOptions:[25,50,100]),pageSizeOptions=(0,react.useMemo)(()=>JSON.parse(initialPageSizeOptionsString),[initialPageSizeOptionsString]),[_page,jumpToPage]=(0,useSessionStorage.F)(pageKey,searchParams.get(pageKey)),page=+_page||1,[_pageSize,onPageSizeChange]=(0,useSessionStorage.F)(pageSizeKey,searchParams.get(pageSizeKey)),pageSize=+_pageSize||pageSizeOptions[0],_refLoader=(0,react.useRef)(loaderStatus);_refLoader.current=loaderStatus,(0,react.useEffect)(()=>{null==setLoaderStatusRef||setLoaderStatusRef(status=>{setLoaderStatus("function"==typeof status?status(_refLoader.current):status)})},[setLoaderStatusRef]),(0,react.useEffect)(()=>null==reloadRef?void 0:reloadRef(()=>setReloadCount(prevState=>prevState+1)),[reloadRef]);const requestProps=(0,react.useMemo)(()=>{const sort={},headSort=headers.find(_ref2=>{let{index}=_ref2;return index===searchSorts||"-"+index===searchSorts});return null!=headSort&&headSort.sort&&(sort[headSort.index]=headSort.index===searchSorts?1:-1),{sort,filter:filters,setLoaderStatus,pagination:withPagination?{page,pageSize}:{page:0,pageSize:0}}},[headers,searchSorts,filters,setLoaderStatus,withPagination,page,pageSize]);(0,react.useEffect)(()=>{if(firstRender.current)null==request||request(requestProps),firstRender.current=!1;else if(prevSearchSorts.current!==searchSorts){const head=headers.find(_ref3=>{let{index}=_ref3;return index===searchSorts||"-"+index===searchSorts}),prevHead=headers.find(_ref4=>{let{index}=_ref4;return index===prevSearchSorts.current||"-"+index===prevSearchSorts.current});(isSortOnline(null==head?void 0:head.sort)||isSortOnline(null==prevHead?void 0:prevHead.sort))&&(null==request||request(requestProps)),prevSearchSorts.current=searchSorts}else if(JSON.stringify(prevSearchFilter.current)!==JSON.stringify(filters)){let withChanges=!1;for(const head of headers){var _prevSearchFilter$cur,_prevSearchFilter$cur2;(filters[head.index]||null!==(_prevSearchFilter$cur=prevSearchFilter.current)&&void 0!==_prevSearchFilter$cur&&_prevSearchFilter$cur[head.index])&&filters[head.index]!==(null===(_prevSearchFilter$cur2=prevSearchFilter.current)||void 0===_prevSearchFilter$cur2?void 0:_prevSearchFilter$cur2[head.index])&&(isFilterTextOnline(head.filter)||isFilterSelectOnline(head.filter)||isFilterDateOnline(head.filter)||isFilterDateRangeOnline(head.filter))&&(withChanges=!0)}withChanges&&(null==request||request(requestProps)),prevSearchFilter.current=filters}else withPagination&&prevPage.current!==page?(null==request||request(requestProps),prevPage.current=page):withPagination&&prevPageSize.current!==pageSize?(null==request||request(requestProps),prevPageSize.current=pageSize):prevRefreshCount.current!==reloadCount&&(null==request||request(requestProps),prevRefreshCount.current=reloadCount)},[request,searchSorts,headers,reloadCount,filters,withPagination,page,pageSize,requestProps]);const setDataTableRef=(0,react.useRef)(void 0);setDataTableRef.current=_setDataTableRef,(0,react.useEffect)(()=>{var _setDataTableRef$curr;let newData=[...data];for(const head of headers){const filterIndex=head.index;if(filters[filterIndex])if(isFilterTextOffline(null==head?void 0:head.filter))newData=newData.filter(head.filter.callbackFn({columnIndex:head.index,text:filters[filterIndex]}));else if(isFilterTextAutoOffline(null==head?void 0:head.filter)){const regExp=new RegExp(filters[filterIndex],"gi");newData=newData.filter(datum=>{if(isFilterTextAutoOffline(null==head?void 0:head.filter)){var _value$match;const value=head.filter.getValue?head.filter.getValue({record:datum}):datum[head.index];return!(null==value||null===(_value$match=value.match)||void 0===_value$match||!_value$match.call(value,regExp))}return!1})}else if(isFilterSelectOffline(null==head?void 0:head.filter)){const selectedOptions=split(filters[filterIndex]).map(search=>{if(isFilterSelectOffline(null==head?void 0:head.filter))return head.filter.options.find(_ref5=>{let{value}=_ref5;return value===search})}).filter(option=>!!option);newData=newData.filter(head.filter.callbackFn({columnIndex:head.index,selectedOptions}))}else if(isFilterSelectAutoOffline(null==head?void 0:head.filter)){const selectedOptions=split(filters[filterIndex]).map(search=>{if(isFilterSelectAutoOffline(null==head?void 0:head.filter))return head.filter.options.find(_ref6=>{let{value}=_ref6;return value===search})}).filter(option=>!!option);newData=newData.filter(datum=>{if(isFilterSelectAutoOffline(null==head?void 0:head.filter)){const value=head.filter.getValue?head.filter.getValue({record:datum}):datum[head.index];return!!selectedOptions.find(option=>option.value===value)}return!1})}else if(isFilterDateOffline(null==head?void 0:head.filter))newData=newData.filter(head.filter.callbackFn({columnIndex:head.index,selectedDate:new Date(+filters[filterIndex])}));else if(isFilterDateAutoOffline(null==head?void 0:head.filter)){var _Date;const{showYears,showMonths,showDays,showHours,showMinutes,showSeconds,showMilliseconds}=(0,helpers.d)(head.filter.pickerType||DEFAULT_PICKER_TYPE);if(filters[filterIndex]&&null!==(_Date=new Date(+filters[filterIndex]))&&void 0!==_Date&&_Date.isValidDate()){const searchDate=new Date(+filters[filterIndex]);newData=newData.filter(datum=>{if(isFilterDateAutoOffline(null==head?void 0:head.filter)){var _value$isValidDate;const value=head.filter.getValue?head.filter.getValue({record:datum}):datum[head.index];if(null!=value&&null!==(_value$isValidDate=value.isValidDate)&&void 0!==_value$isValidDate&&_value$isValidDate.call(value)){if(showMilliseconds)return searchDate.isSameMillisecond(datum[head.index]);if(showSeconds)return searchDate.isSameSecond(datum[head.index]);if(showMinutes)return searchDate.isSameMinute(datum[head.index]);if(showHours)return searchDate.isSameHour(datum[head.index]);if(showDays)return searchDate.isSameDay(datum[head.index]);if(showMonths)return searchDate.isSameMonth(datum[head.index]);if(showYears)return searchDate.isSameYear(datum[head.index])}else(0,esm.OPF)("datum no filtered",{datum,searchDate,index:head.index,head})}return!0})}else(0,esm.OPF)("data no filtered, filter not a valid time date",{search:filters[filterIndex],searchFilter:filters})}else if(isFilterDateRangeOffline(null==head?void 0:head.filter)){const[start,end]=split(filters[filterIndex]);start&&new Date(+start).isValidDate()&&end&&new Date(+end).isValidDate()?newData=newData.filter(head.filter.callbackFn({columnIndex:head.index,startSelectedDate:new Date(+start),endSelectedDate:new Date(+end)})):(0,esm.OPF)("data no filtered, filter not a valid range times date",{search:filters[filterIndex],searchFilter:filters})}else if(isFilterDateRangeAutoOffline(null==head?void 0:head.filter)){const[start,end]=split(filters[filterIndex]);if(start&&new Date(+start).isValidDate()&&end&&new Date(+end).isValidDate()){const startSelectedDate=new Date(+start),endSelectedDate=new Date(+end),{showMonths,showDays,showHours,showMinutes,showSeconds,showMilliseconds}=(0,helpers.d)(head.filter.pickerType||DEFAULT_PICKER_TYPE);newData=newData.filter(datum=>{if(isFilterDateRangeAutoOffline(null==head?void 0:head.filter)){var _date$isValidDate;const date=head.filter.getValue?head.filter.getValue({record:datum}):datum[head.index];if(null!=date&&null!==(_date$isValidDate=date.isValidDate)&&void 0!==_date$isValidDate&&_date$isValidDate.call(date)){let isWithin=startSelectedDate.getFullYear()<=date.getFullYear()&&date.getFullYear()<=endSelectedDate.getFullYear();return showMonths&&(isWithin=isWithin&&date.isWithinInterval({start:startSelectedDate.startOfMonth(),end:endSelectedDate.endOfMonth()})),showDays&&(isWithin=isWithin&&date.isWithinInterval({start:startSelectedDate.startOfDay(),end:endSelectedDate.endOfDay()})),showHours&&(isWithin=isWithin&&date.isWithinInterval({start:startSelectedDate.startOfHour(),end:endSelectedDate.endOfHour()})),showMinutes&&(isWithin=isWithin&&date.isWithinInterval({start:startSelectedDate.startOfMinute(),end:endSelectedDate.endOfMinute()})),showSeconds&&(isWithin=isWithin&&date.isWithinInterval({start:startSelectedDate.startOfSecond(),end:endSelectedDate.endOfSecond()})),showMilliseconds&&(isWithin=date.isWithinInterval({start:startSelectedDate,end:endSelectedDate})),isWithin}(0,esm.OPF)("datum no filtered",{datum,startSelectedDate,endSelectedDate,index:head.index,head})}return!0})}else(0,esm.OPF)("data no filtered, filter not a valid range times date",{search:filters[filterIndex],searchFilter:filters})}}for(const searchSort of split(searchSorts)){const head=headers.find(_ref7=>{let{index}=_ref7;return index===searchSort||"-"+index===searchSort});null!=head&&head.sort&&isSortOffline(null==head?void 0:head.sort)&&(head.index===searchSort?newData.sort(head.sort.compareFn({columnIndex:head.index})):"-"+head.index===searchSort&&newData.sort((a,b)=>isSortOffline(null==head?void 0:head.sort)?-1*head.sort.compareFn({columnIndex:head.index})(a,b):0))}setDataTable(newData),null===(_setDataTableRef$curr=setDataTableRef.current)||void 0===_setDataTableRef$curr||_setDataTableRef$curr.call(setDataTableRef,newData)},[data,headers,filters,searchSorts]);const[tableHeaders,setTableHeaders]=(0,react.useState)(headers.map(head=>DataViewer_objectSpread(DataViewer_objectSpread({},head),{},{width:0,accumulatedWidth:0})));(0,react.useEffect)(()=>{const onResetFilter=filterIndex=>()=>{const newSearchFilter=DataViewer_objectSpread({},filtersRef.current);newSearchFilter[filterIndex]="",DataViewer_isSomethingFiltered(newSearchFilter)?setFilter(JSON.stringify(newSearchFilter)):deleteFilter()},onFilter=(filterIndex,newFilter)=>{const newSearchFilter=DataViewer_objectSpread({},filtersRef.current);JSON.stringify(newSearchFilter[filterIndex])!==JSON.stringify(newFilter)&&(newSearchFilter[filterIndex]=newFilter,DataViewer_isSomethingFiltered(newSearchFilter)?setFilter(JSON.stringify(newSearchFilter)):deleteFilter())};setTableHeaders(fixHeaders(headers.map((_ref8,index)=>{var _props$minWidth;let{sort,filter}=_ref8,props=function DataViewer_objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function DataViewer_objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref8,DataViewer_excluded);const getVisible=()=>split(searchVisibles).includes(props.index),newHead=DataViewer_objectSpread(DataViewer_objectSpread({},props),{},{minWidth:null!==(_props$minWidth=props.minWidth)&&void 0!==_props$minWidth?_props$minWidth:0,width:0,accumulatedWidth:0,headIndex:index,visible:{getVisible,onToggle(){const isVisible=getVisible();setVisibles(isVisible?split(searchVisibles).filter(i=>i!==props.index).join(esm.GN4):[...split(searchVisibles),props.index].join(esm.GN4))}}}),headIndex=props.index;let iconsWidth=filter?28:0;if(sort){iconsWidth+=28;const up=props.index,down="-"+props.index,getOrder=()=>split(searchSortsRef.current).includes(up)?1:split(searchSortsRef.current).includes(down)?-1:0;newHead.sort={getOrder,onSort:()=>{const newSort=1===getOrder()?down:-1===getOrder()?"":up;newSort?setSort(newSort):deleteSort()},online:isSortOnline(sort)}}"text"===(null==filter?void 0:filter.type)||"text-auto"===(null==filter?void 0:filter.type)?newHead.filter={type:"text",onFilter:_ref9=>{let{text}=_ref9;return onFilter(headIndex,text)},onReset:onResetFilter(headIndex),getFilter:()=>filtersRef.current[headIndex]||"",online:isFilterTextOnline(filter)}:"select"===(null==filter?void 0:filter.type)||"select-auto"===(null==filter?void 0:filter.type)?newHead.filter={type:"select",onFilter:_ref0=>{let{selectedOptions}=_ref0;onFilter(headIndex,join(selectedOptions.filter(_ref1=>{let{value}=_ref1;return!!filter.options.find(option=>option.value===value)}).map(_ref10=>{let{value}=_ref10;return value})))},onReset:onResetFilter(headIndex),options:filter.options,getFilter:()=>filtersRef.current[headIndex]?split(filtersRef.current[headIndex]).map(value=>({value,label:""})):[],online:isFilterSelectOnline(filter)}:"date"===(null==filter?void 0:filter.type)||"date-auto"===(null==filter?void 0:filter.type)?newHead.filter={type:"date",pickerType:filter.pickerType||DEFAULT_PICKER_TYPE,onFilter:_ref11=>{let{selectedDate}=_ref11;return onFilter(headIndex,selectedDate.getTime()+"")},isDisabled:filter.isDisabled||(()=>({})),onReset:onResetFilter(headIndex),getFilter:()=>filtersRef.current[headIndex]&&new Date(+filtersRef.current[headIndex]).isValidDate()?new Date(+filtersRef.current[headIndex]):null,baseDate:filter.baseDate||new Date,online:isFilterDateOnline(filter)}:"date-range"!==(null==filter?void 0:filter.type)&&"date-range-auto"!==(null==filter?void 0:filter.type)||(newHead.filter={type:"date-range",pickerType:filter.pickerType||DEFAULT_PICKER_TYPE,onFilter:_ref12=>{let{startSelectedDate,endSelectedDate}=_ref12;return onFilter(headIndex,join([startSelectedDate.getTime()+"",endSelectedDate.getTime()+""]))},onReset:onResetFilter(headIndex),isDisabled:filter.isDisabled||(()=>({})),getFilter:()=>{const[start,end]=filtersRef.current[headIndex]?split(filtersRef.current[headIndex]):[];return[start&&new Date(+start).isValidDate()?new Date(+start):null,end&&new Date(+end).isValidDate()?new Date(+end):null]},baseStartDate:filter.baseStartDate||new Date,baseEndDate:filter.baseEndDate||new Date,online:isFilterDateRangeOnline(filter)});const head=props.head||props.index;if("string"==typeof head){const width=Math.ceil(getTextWidth(t(head.toUpperCase()),"400 14px / 14px Inter, sans-serif"))+4;newHead.minWidth=Math.max(props.minWidth||0,iconsWidth+width+16+4)}return newHead})))},[deleteFilter,deleteSort,headers,setFilter,setSort,t,searchVisibles]);const onAllFilters=(0,react.useCallback)(values=>{const newSearchFilter=DataViewer_objectSpread({},filters);headers.forEach(_ref13=>{let{filter,index:columnIndex}=_ref13;const value=values[columnIndex];if("text"===(null==filter?void 0:filter.type)||"text-auto"===(null==filter?void 0:filter.type))newSearchFilter[columnIndex]=value;else if("select"===(null==filter?void 0:filter.type)||"select-auto"===(null==filter?void 0:filter.type))newSearchFilter[columnIndex]=join((values[columnIndex]||[]).filter(_ref14=>{let{value}=_ref14;return!!filter.options.find(option=>option.value===value)}).map(_ref15=>{let{value}=_ref15;return value}));else if("date"===(null==filter?void 0:filter.type)||"date-auto"===(null==filter?void 0:filter.type))values[columnIndex]instanceof Date?newSearchFilter[columnIndex]=values[columnIndex].getTime()+"":newSearchFilter[columnIndex]="";else if("date-range"===(null==filter?void 0:filter.type)||"date-range-auto"===(null==filter?void 0:filter.type)){const[start,end]=values[columnIndex]?values[columnIndex]:[null,null];null!=start&&start.isValidDate()&&null!=end&&end.isValidDate()?newSearchFilter[columnIndex]=join([start.getTime()+"",end.getTime()+""]):newSearchFilter[columnIndex]=""}}),DataViewer_isSomethingFiltered(newSearchFilter)?setFilter(JSON.stringify(newSearchFilter)):deleteFilter()},[deleteFilter,headers,filters,setFilter]),initialViewMode=_initialViewMode||(preferredDataViewMode===esm.pln.CARDS?esm.pln.CARDS:esm.pln.ROWS),viewModeKey=getViewModeQueryParam(name),[viewMode,setViewMode]=(0,useSessionStorage.F)(viewModeKey,searchParams.get(viewModeKey)?(null===(_searchParams$get=searchParams.get(viewModeKey))||void 0===_searchParams$get?void 0:_searchParams$get.toUpperCase())===esm.pln.CARDS?esm.pln.CARDS:esm.pln.ROWS:initialViewMode);(0,react.useEffect)(()=>{!cardsView&&rowsView?setViewMode(esm.pln.ROWS):!rowsView&&cardsView&&setViewMode(esm.pln.CARDS)},[cardsView,rowsView,setViewMode]);const oldViewPortSizeRef=(0,react.useRef)("");(0,react.useEffect)(()=>{oldViewPortSizeRef.current!==viewPortSize&&cardsView&&"sm"===viewPortSize&&setViewMode(esm.pln.CARDS),oldViewPortSizeRef.current=viewPortSize},[viewPortSize,cardsView,rowsView,setViewMode]);const onReload=(0,react.useCallback)(()=>request&&setReloadCount(prevState=>prevState+1),[setReloadCount,request]),total=null!=initialTotalData?initialTotalData:data.length,paginationData=(0,react.useMemo)(()=>({withPagination,total,pageSizeOptions,page,pageSize,jumpToPage,onPageSizeChange}),[withPagination,total,pageSizeOptions,page,pageSize,jumpToPage,onPageSizeChange]),extraNodes=(0,react.useMemo)(()=>(initialExtraNodes||[]).filter(extraNode=>!!extraNode),[initialExtraNodes]);return react.createElement("div",{className:(0,helpers.xW)(className,"jk-data-viewer-layout ht-100",{"with-pagination":withPagination})},react.createElement(DisplayDataViewer,{viewPortSize,cards,data:dataTable,extraNodes,extraNodesFloating,headers:tableHeaders,groups:groups||[],setHeaders:setTableHeaders,loading:loaderStatus===esm.nW6.LOADING,initializing,onAllFilters,onReload:request?onReload:null,rows,showFilterDrawerKey,rowsView,cardsView,setViewMode,viewMode,getRecordKey,getRecordStyle,getRecordClassName,onRecordClick,onRecordHover,onRecordRender,pagination:paginationData,filterKey,filters,downloads:null!=downloads?downloads:constants.Ml,requestProps}))};DataViewer.__docgenInfo={description:"",methods:[],displayName:"DataViewer",props:{cards:{required:!1,tsType:{name:"signature",type:"object",raw:"{ height?: number, width?: number, expanded?: boolean }",signature:{properties:[{key:"height",value:{name:"number",required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"expanded",value:{name:"boolean",required:!1}}]}},description:""},cardsView:{required:!1,tsType:{name:"boolean"},description:""},className:{required:!1,tsType:{name:"string"},description:""},data:{required:!0,tsType:{name:"Array",elements:[{name:"T"}],raw:"T[]"},description:""},extraNodes:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"ReactNode | (() => ReactNode)",elements:[{name:"ReactNode"},{name:"unknown"}]}],raw:"ReactNodeOrFunctionType[]"},description:""},extraNodesFloating:{required:!1,tsType:{name:"boolean"},description:""},headers:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  head?: TableHeadType<T>,\n  Field: TableHeadCmpFieldType<T>,\n  index: string,\n  minWidth?: number,\n  sort?: DataViewerHeaderSortType<T>,\n  filter?: JkTableHeaderFilterType<T>,\n  cardPosition?: CardPositionType,\n  sticky?: boolean,\n  headClassName?: string,\n  group?: string,\n}",signature:{properties:[{key:"head",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}},{key:"Field",value:{name:"FC",elements:[{name:"signature",type:"object",raw:"{ record: T, columnIndex: string, recordIndex: number, isCard: boolean }",signature:{properties:[{key:"record",value:{name:"T",required:!0}},{key:"columnIndex",value:{name:"string",required:!0}},{key:"recordIndex",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}}],raw:"FC<TableHeadFieldProps<T>>",required:!0}},{key:"index",value:{name:"string",required:!0}},{key:"minWidth",value:{name:"number",required:!1}},{key:"sort",value:{name:"union",raw:"DataViewerHeaderSortOnlineType | DataViewerHeaderSortOfflineType<T>",elements:[{name:"literal",value:"true"},{name:"signature",type:"object",raw:"{\n  compareFn: (props: { columnIndex: string }) => (recordA: T, recordB: T) => number\n}",signature:{properties:[{key:"compareFn",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string }) => (recordA: T, recordB: T) => number",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"signature",type:"function",raw:"(recordA: T, recordB: T) => number",signature:{arguments:[{type:{name:"T"},name:"recordA"},{type:{name:"T"},name:"recordB"}],return:{name:"number"}}}},required:!0}}]}}],required:!1}},{key:"filter",value:{name:"union",raw:"FilterTextOnlineType | FilterTextOfflineType<T> | FilterTextAutoOfflineType<T>\n| FilterSelectOnlineType | FilterSelectOfflineType<T> | FilterSelectAutoOfflineType<T>\n| FilterDateOnlineType | FilterDateOfflineType<T> | FilterDateAutoOfflineType<T>\n| FilterDateRangeOnlineType | FilterDateRangeOfflineType<T> | FilterDateRangeAutoOfflineType<T>",elements:[{name:"signature",type:"object",raw:"{ type: typeof FILTER_TEXT }",signature:{properties:[{key:"type",value:{name:"FILTER_TEXT",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: typeof FILTER_TEXT,\n  callbackFn: (props: { columnIndex: string, text: string }) => (record: T, index: number) => boolean\n}",signature:{properties:[{key:"type",value:{name:"FILTER_TEXT",required:!0}},{key:"callbackFn",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, text: string }) => (record: T, index: number) => boolean",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, text: string }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"signature",type:"function",raw:"(record: T, index: number) => boolean",signature:{arguments:[{type:{name:"T"},name:"record"},{type:{name:"number"},name:"index"}],return:{name:"boolean"}}}},required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: typeof FILTER_TEXT_AUTO,\n  getValue?: (props: { record: T }) => string\n}",signature:{properties:[{key:"type",value:{name:"FILTER_TEXT_AUTO",required:!0}},{key:"getValue",value:{name:"signature",type:"function",raw:"(props: { record: T }) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ record: T }",signature:{properties:[{key:"record",value:{name:"T",required:!0}}]}},name:"props"}],return:{name:"string"}},required:!1}}]}},{name:"signature",type:"object",raw:"{ type: typeof FILTER_SELECT, options: OptionType<string>[] }",signature:{properties:[{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: typeof FILTER_SELECT,\n  options: OptionType<string>[],\n  callbackFn: (props: {\n    columnIndex: string,\n    selectedOptions: OptionType<string>[]\n  }) => (record: T, index: number) => boolean\n}",signature:{properties:[{key:"type",value:{name:"FILTER_SELECT",required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"callbackFn",value:{name:"signature",type:"function",raw:"(props: {\n  columnIndex: string,\n  selectedOptions: OptionType<string>[]\n}) => (record: T, index: number) => boolean",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  columnIndex: string,\n  selectedOptions: OptionType<string>[]\n}",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedOptions",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}}]}},name:"props"}],return:{name:"signature",type:"function",raw:"(record: T, index: number) => boolean",signature:{arguments:[{type:{name:"T"},name:"record"},{type:{name:"number"},name:"index"}],return:{name:"boolean"}}}},required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: typeof FILTER_SELECT_AUTO,\n  options: OptionType<string>[],\n  getValue?: (props: { record: T }) => string\n}",signature:{properties:[{key:"type",value:{name:"FILTER_SELECT_AUTO",required:!0}},{key:"options",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: T, label: ReactNode }",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}}]}}],raw:"OptionType<string>[]",required:!0}},{key:"getValue",value:{name:"signature",type:"function",raw:"(props: { record: T }) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ record: T }",signature:{properties:[{key:"record",value:{name:"T",required:!0}}]}},name:"props"}],return:{name:"string"}},required:!1}}]}},{name:"signature",type:"object",raw:"{\n  baseDate?: Date,\n  isDisabled?: DatePickerDateFunType,\n  pickerType?: DateDisplayType,\n  type: typeof FILTER_DATE,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!1}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!1}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!1}},{key:"type",value:{name:"FILTER_DATE",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate?: Date,\n  callbackFn: (props: { columnIndex: string, selectedDate: Date }) => (record: T, index: number) => boolean,\n  isDisabled?: DatePickerDateFunType,\n  pickerType?: DateDisplayType,\n  type: typeof FILTER_DATE,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!1}},{key:"callbackFn",value:{name:"signature",type:"function",raw:"(props: { columnIndex: string, selectedDate: Date }) => (record: T, index: number) => boolean",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ columnIndex: string, selectedDate: Date }",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"selectedDate",value:{name:"Date",required:!0}}]}},name:"props"}],return:{name:"signature",type:"function",raw:"(record: T, index: number) => boolean",signature:{arguments:[{type:{name:"T"},name:"record"},{type:{name:"number"},name:"index"}],return:{name:"boolean"}}}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!1}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!1}},{key:"type",value:{name:"FILTER_DATE",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseDate?: Date,\n  getValue?: (props: { record: T }) => Date,\n  isDisabled?: DatePickerDateFunType,\n  pickerType?: DateDisplayType,\n  type: typeof FILTER_DATE_AUTO,\n}",signature:{properties:[{key:"baseDate",value:{name:"Date",required:!1}},{key:"getValue",value:{name:"signature",type:"function",raw:"(props: { record: T }) => Date",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ record: T }",signature:{properties:[{key:"record",value:{name:"T",required:!0}}]}},name:"props"}],return:{name:"Date"}},required:!1}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!1}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!1}},{key:"type",value:{name:"FILTER_DATE_AUTO",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate?: Date,\n  baseStartDate?: Date,\n  isDisabled?: DatePickerDateFunType,\n  pickerType?: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!1}},{key:"baseStartDate",value:{name:"Date",required:!1}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!1}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!1}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate?: Date,\n  baseStartDate?: Date,\n  callbackFn: (props: {\n    columnIndex: string,\n    startSelectedDate: Date,\n    endSelectedDate: Date\n  }) => (record: T, index: number) => boolean,\n  isDisabled?: DatePickerDateFunType,\n  pickerType?: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!1}},{key:"baseStartDate",value:{name:"Date",required:!1}},{key:"callbackFn",value:{name:"signature",type:"function",raw:"(props: {\n  columnIndex: string,\n  startSelectedDate: Date,\n  endSelectedDate: Date\n}) => (record: T, index: number) => boolean",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  columnIndex: string,\n  startSelectedDate: Date,\n  endSelectedDate: Date\n}",signature:{properties:[{key:"columnIndex",value:{name:"string",required:!0}},{key:"startSelectedDate",value:{name:"Date",required:!0}},{key:"endSelectedDate",value:{name:"Date",required:!0}}]}},name:"props"}],return:{name:"signature",type:"function",raw:"(record: T, index: number) => boolean",signature:{arguments:[{type:{name:"T"},name:"record"},{type:{name:"number"},name:"index"}],return:{name:"boolean"}}}},required:!0}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!1}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!1}},{key:"type",value:{name:"FILTER_DATE_RANGE",required:!0}}]}},{name:"signature",type:"object",raw:"{\n  baseEndDate?: Date,\n  baseStartDate?: Date,\n  getValue?: (props: { record: T }) => Date,\n  isDisabled?: DatePickerDateFunType,\n  pickerType?: DateDisplayType,\n  type: typeof FILTER_DATE_RANGE_AUTO,\n}",signature:{properties:[{key:"baseEndDate",value:{name:"Date",required:!1}},{key:"baseStartDate",value:{name:"Date",required:!1}},{key:"getValue",value:{name:"signature",type:"function",raw:"(props: { record: T }) => Date",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ record: T }",signature:{properties:[{key:"record",value:{name:"T",required:!0}}]}},name:"props"}],return:{name:"Date"}},required:!1}},{key:"isDisabled",value:{name:"signature",type:"function",raw:"(date: Date) => ({\n  year?: boolean,\n  month?: boolean,\n  day?: boolean,\n  hours?: boolean,\n  minutes?: boolean,\n  seconds?: boolean,\n  milliseconds?: boolean\n})",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"unknown"}},required:!1}},{key:"pickerType",value:{name:"union",raw:"'year'\n| 'year-month'\n| 'year-month-day'\n| 'year-month-day-hours'\n| 'year-month-day-hours-minutes'\n| 'year-month-day-hours-minutes-seconds'\n| 'year-month-day-hours-minutes-seconds-milliseconds'\n| 'hours'\n| 'hours-minutes'\n| 'hours-minutes-seconds'\n| 'hours-minutes-seconds-milliseconds'",elements:[{name:"literal",value:"'year'"},{name:"literal",value:"'year-month'"},{name:"literal",value:"'year-month-day'"},{name:"literal",value:"'year-month-day-hours'"},{name:"literal",value:"'year-month-day-hours-minutes'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds'"},{name:"literal",value:"'year-month-day-hours-minutes-seconds-milliseconds'"},{name:"literal",value:"'hours'"},{name:"literal",value:"'hours-minutes'"},{name:"literal",value:"'hours-minutes-seconds'"},{name:"literal",value:"'hours-minutes-seconds-milliseconds'"}],required:!1}},{key:"type",value:{name:"FILTER_DATE_RANGE_AUTO",required:!0}}]}}],required:!1}},{key:"cardPosition",value:{name:"union",raw:"'topLeft' | 'top' | 'topRight'\n| 'upperLeft' | 'upper' | 'upperRight'\n| 'centerLeft' | 'center' | 'centerRight'\n| 'lowerLeft' | 'lower' | 'lowerRight'\n| 'bottomLeft' | 'bottom' | 'bottomRight'",elements:[{name:"literal",value:"'topLeft'"},{name:"literal",value:"'top'"},{name:"literal",value:"'topRight'"},{name:"literal",value:"'upperLeft'"},{name:"literal",value:"'upper'"},{name:"literal",value:"'upperRight'"},{name:"literal",value:"'centerLeft'"},{name:"literal",value:"'center'"},{name:"literal",value:"'centerRight'"},{name:"literal",value:"'lowerLeft'"},{name:"literal",value:"'lower'"},{name:"literal",value:"'lowerRight'"},{name:"literal",value:"'bottomLeft'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'bottomRight'"}],required:!1}},{key:"sticky",value:{name:"boolean",required:!1}},{key:"headClassName",value:{name:"string",required:!1}},{key:"group",value:{name:"string",required:!1}}]}}],raw:"DataViewerHeadersType<T>[]"},description:""},downloads:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  value: T,\n  label: ReactNode,\n  getUrl: (props: DataViewerRequestPropsType) => string,\n  getFilename: (props: DataViewerRequestPropsType) => string,\n}",signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"label",value:{name:"ReactNode",required:!0}},{key:"getUrl",value:{name:"signature",type:"function",raw:"(props: DataViewerRequestPropsType) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},name:"props"}],return:{name:"string"}},required:!0}},{key:"getFilename",value:{name:"signature",type:"function",raw:"(props: DataViewerRequestPropsType) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},name:"props"}],return:{name:"string"}},required:!0}}]}}],raw:"DataViewerDownloadType<string>[]"},description:""},groups:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  key: string,\n  label?: TableHeadType<T>,\n}",signature:{properties:[{key:"key",value:{name:"string",required:!0}},{key:"label",value:{name:"union",raw:"U | ((prop1: T) => U)",elements:[{name:"ReactNode"},{name:"unknown"}],required:!1}}]}}],raw:"DataViewerGroupsType<T>[]"},description:""},initialViewMode:{required:!1,tsType:{name:"DataViewMode"},description:""},name:{required:!1,tsType:{name:"string"},description:""},request:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: DataViewerRequestPropsType) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  sort: RequestSortType,\n  filter: RequestFilterType,\n  pagination: { page: number, pageSize: number },\n  setLoaderStatus: LoaderStatusActionType,\n}",signature:{properties:[{key:"sort",value:{name:"signature",type:"object",raw:"{ [key: string]: 1 | -1 }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"1 | -1",elements:[{name:"literal",value:"1"},{name:"literal",value:"-1"}],required:!0}}]},required:!0}},{key:"filter",value:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!0}},{key:"pagination",value:{name:"signature",type:"object",raw:"{ page: number, pageSize: number }",signature:{properties:[{key:"page",value:{name:"number",required:!0}},{key:"pageSize",value:{name:"number",required:!0}}]},required:!0}},{key:"setLoaderStatus",value:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"Status"}],raw:"SetStateAction<Status>"}],raw:"Dispatch<SetStateAction<Status>>",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},rows:{required:!1,tsType:{name:"signature",type:"object",raw:"{ height?: number }",signature:{properties:[{key:"height",value:{name:"number",required:!1}}]}},description:""},rowsView:{required:!1,tsType:{name:"boolean"},description:""},setLoaderStatusRef:{required:!1,tsType:{name:"signature",type:"function",raw:"(setLoaderStatus: SetLoaderStatusType) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(status: (Status | ((props: LoaderStatusType) => LoaderStatusType))) => void",signature:{arguments:[{type:{name:"unknown"},name:"status"}],return:{name:"void"}}},name:"setLoaderStatus"}],return:{name:"void"}}},description:""},reloadRef:{required:!1,tsType:{name:"signature",type:"function",raw:"(reload: ReloadType) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"reload"}],return:{name:"void"}}},description:""},totalData:{required:!1,tsType:{name:"number"},description:""},pageSizeOptions:{required:!1,tsType:{name:"Array",elements:[{name:"number"}],raw:"number[]"},description:""},getRecordKey:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number }) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}}]}},name:"props"}],return:{name:"string"}}},description:""},getPageQueryParam:{required:!1,tsType:{name:"signature",type:"function",raw:"(name: string) => string",signature:{arguments:[{type:{name:"string"},name:"name"}],return:{name:"string"}}},description:""},getPageSizeQueryParam:{required:!1,tsType:{name:"signature",type:"function",raw:"(name: string) => string",signature:{arguments:[{type:{name:"string"},name:"name"}],return:{name:"string"}}},description:""},getSortQueryParam:{required:!1,tsType:{name:"signature",type:"function",raw:"(name: string) => string",signature:{arguments:[{type:{name:"string"},name:"name"}],return:{name:"string"}}},description:""},getFilterQueryParam:{required:!1,tsType:{name:"signature",type:"function",raw:"(name: string) => string",signature:{arguments:[{type:{name:"string"},name:"name"}],return:{name:"string"}}},description:""},getViewModeQueryParam:{required:!1,tsType:{name:"signature",type:"function",raw:"(name: string) => string",signature:{arguments:[{type:{name:"string"},name:"name"}],return:{name:"string"}}},description:""},getShowFilterDrawerQueryParam:{required:!1,tsType:{name:"signature",type:"function",raw:"(name: string) => string",signature:{arguments:[{type:{name:"string"},name:"name"}],return:{name:"string"}}},description:""},getVisiblesQueryParam:{required:!1,tsType:{name:"signature",type:"function",raw:"(name: string) => string",signature:{arguments:[{type:{name:"string"},name:"name"}],return:{name:"string"}}},description:""},getRecordStyle:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => CSSProperties",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"CSSProperties"}}},description:""},getRecordClassName:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: {\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}) => string",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{\n  data: T[],\n  index: number,\n  isCard: boolean,\n  isStickySection: boolean\n}",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}},{key:"isStickySection",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"string"}}},description:""},onRecordClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onRecordHover:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},onRecordRender:{required:!1,tsType:{name:"signature",type:"function",raw:"(props: { data: T[], index: number, isCard: boolean }) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ data: T[], index: number, isCard: boolean }",signature:{properties:[{key:"data",value:{name:"Array",elements:[{name:"T"}],raw:"T[]",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isCard",value:{name:"boolean",required:!0}}]}},name:"props"}],return:{name:"void"}}},description:""},setDataTableRef:{required:!1,tsType:{name:"signature",type:"function",raw:"(data: T[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"T"}],raw:"T[]"},name:"data"}],return:{name:"void"}}},description:""},initializing:{required:!1,tsType:{name:"boolean"},description:""}}}},"./src/components/organisms/DataViewer/TextHeadCell.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TextHeadCell:()=>TextHeadCell});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_helpers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/helpers/index.ts"),_atoms__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/atoms/index.tsx");const TextHeadCell=_ref=>{let{text,className}=_ref;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.xW)("text-head-field jk-row",className)},"string"==typeof text?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_atoms__WEBPACK_IMPORTED_MODULE_2__.T,{className:"tt-se"},text):text)};TextHeadCell.__docgenInfo={description:"",methods:[],displayName:"TextHeadCell",props:{text:{required:!0,tsType:{name:"union",raw:"string | ReactNode",elements:[{name:"string"},{name:"ReactNode"}]},description:""},className:{required:!1,tsType:{name:"string"},description:""}}}}}]);