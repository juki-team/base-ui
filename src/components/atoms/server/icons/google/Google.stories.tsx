import { Meta } from '@storybook/react-webpack5';
import { FC, useState } from 'react';
import { ColorResult } from 'react-color';
import { MockupJukiProvider } from '../../../../mockup';
import { InputColor } from '../../../../molecules';
import { Input } from '../../../Input/Input';
import { T } from '../../../T/T';
import type { BasicIconProps } from '../types';
import { AddPhotoAlternateIcon } from './AddPhotoAlternateIcon';
import {
  AccountCircleIcon,
  AcUnitIcon,
  AcuteIcon,
  AddColumnLeftIcon,
  AddColumnRightIcon,
  AddIcon,
  AddReactionIcon,
  AddRowAboveIcon,
  AddRowBelowIcon,
  AdminPanelSettingsIcon,
  AlarmIcon,
  AppsIcon,
  ArrowBackIcon,
  ArrowDownwardIcon,
  ArrowDropDownIcon,
  ArrowDropUpIcon,
  ArrowForwardIcon,
  ArrowLeftIcon,
  ArrowRightIcon,
  ArrowUpwardIcon,
  ArticleIcon,
  AssignmentIcon,
  AttachFileIcon,
  AttachmentIcon,
  AutorenewIcon,
  BadgeIcon,
  BoltIcon,
  BubbleChartIcon,
  BuildIcon,
  CalendarMonthIcon,
  CalendarTodayIcon,
  CalendarViewWeekIcon,
  CheckIcon,
  ChecklistIcon,
  CloseIcon,
  CloudDownloadIcon,
  CloudUploadIcon,
  CodeBlocksIcon,
  CodeIcon,
  CommentIcon,
  ContactPhoneIcon,
  ContactsIcon,
  ContentCopyIcon,
  DarkModeIcon,
  DashboardIcon,
  DeleteIcon,
  DemographyIcon,
  DescriptionIcon,
  DownloadIcon,
  DraftIcon,
  DragIndicatorIcon,
  EditIcon,
  EditNoteIcon,
  ErrorIcon,
  EventIcon,
  EventListIcon,
  ExclamationIcon,
  ExpandLessIcon,
  ExpandMoreIcon,
  ExtensionIcon,
  FileOpenIcon,
  FilterListIcon,
  FolderIcon,
  FolderManagedIcon,
  FolderOpenIcon,
  FormatBoldIcon,
  FormatH1Icon,
  FormatH2Icon,
  FormatH3Icon,
  FormatH4Icon,
  FormatH5Icon,
  FormatH6Icon,
  FormatInkHighlighterIcon,
  FormatItalicIcon,
  FormatListBulletedIcon,
  FormatListNumberedIcon,
  FormatQuoteIcon,
  FormatStrikethroughIcon,
  ForwardIcon,
  FullscreenExitIcon,
  FullscreenIcon,
  GlobeIcon,
  GroupAddIcon,
  GroupIcon,
  GroupsIcon,
  HardDriveIcon,
  HelpIcon,
  HistoryIcon,
  HomeIcon,
  HomeStorageIcon,
  InfoIIcon,
  InkEraserIcon,
  InvertColorsIcon,
  LanguageIcon,
  LeaderboardIcon,
  LibraryBooksIcon,
  LightModeIcon,
  LinkIcon,
  LinkOffIcon,
  ListIcon,
  LoadingIcon,
  LocationCityIcon,
  LocationOnIcon,
  LockIcon,
  LockPersonIcon,
  LoginIcon,
  LogoutIcon,
  MailIcon,
  ManageAccountsIcon,
  ManageSearchIcon,
  ManufacturingIcon,
  MenuBookIcon,
  MenuIcon,
  MoreTimeIcon,
  MoreVertIcon,
  NavigateBeforeIcon,
  NavigateNextIcon,
  NewReleasesIcon,
  NoteAddIcon,
  NoteIcon,
  NotificationsActiveIcon,
  OpenInNewIcon,
  PageInfoIcon,
  PaletteIcon,
  PanToolIcon,
  PauseCircleIcon,
  PendingActionsIcon,
  PendingIcon,
  PersonIcon,
  PhotoLibraryIcon,
  PictureAsPdfIcon,
  PlayArrowIcon,
  PlayCircleIcon,
  PostAddIcon,
  PreviewIcon,
  PriorityHighIcon,
  PublicIcon,
  PublishIcon,
  RedoIcon,
  RefreshIcon,
  ReplyAllIcon,
  ReplyIcon,
  SaveIcon,
  ScheduleIcon,
  SchoolIcon,
  SearchIcon,
  SendIcon,
  SettingsAlertIcon,
  SettingsIcon,
  SettingsSuggestIcon,
  ShareIcon,
  SideNavigationIcon,
  SpeedIcon,
  StepIntoIcon,
  StepOutIcon,
  StopCircleIcon,
  StorageIcon,
  StylusLaserPointerIcon,
  StylusNoteIcon,
  SupportAgentIcon,
  SyncIcon,
  TableEyeIcon,
  TableIcon,
  TaskIcon,
  TimerIcon,
  TrendingUpIcon,
  TrophyIcon,
  UndoIcon,
  UpdateIcon,
  VerticalSplitIcon,
  ViewCozyIcon,
  ViewHeadlineIcon,
  ViewModuleIcon,
  VisibilityIcon,
  VisibilityOffIcon,
  VoidIcon,
  WarningIcon,
  WidgetsIcon,
} from './index';

const meta: Meta<typeof AccountCircleIcon> = {
  component: AccountCircleIcon,
  argTypes: {
    size: {
      options: [ 'huge', 'large', 'regular', 'small', 'tiny' ],
      control: {
        type: 'select',
        labels: {
          huge: 'huge (48px)', // 12
          large: 'large (36px)', // 12
          regular: 'regular (24px)', // 6
          small: 'small (18px)', // 6
          tiny: 'tiny (12px)',
        },
      },
    },
    filledCircle: { control: { type: 'boolean' } },
    filledSquare: { control: { type: 'boolean' } },
    circle: { control: { type: 'boolean' } },
    square: { control: { type: 'boolean' } },
    strikethrough: { control: { type: 'boolean' } },
    rotate: { control: { type: 'number', value: 0 } },
    letter: { control: { type: 'text' } },
    onClick: {},
    style: {},
    className: { control: { type: 'text' } },
  },
};

export default meta;

export const Google: FC<BasicIconProps> = (args) => {
  const icons = {
    AddRowBelowIcon,
    AddRowAboveIcon,
    AddColumnRightIcon,
    AddColumnLeftIcon,
    TableIcon,
    TableEyeIcon,
    FormatListBulletedIcon,
    FormatListNumberedIcon,
    StepOutIcon,
    StepIntoIcon,
    AddPhotoAlternateIcon,
    CodeBlocksIcon,
    MoreVertIcon,
    LinkOffIcon,
    FormatQuoteIcon,
    FormatStrikethroughIcon,
    FormatInkHighlighterIcon,
    FormatItalicIcon,
    FormatH6Icon,
    FormatH5Icon,
    FormatH4Icon,
    FormatH3Icon,
    FormatH2Icon,
    FormatH1Icon,
    FormatBoldIcon,
    AcUnitIcon,
    AccountCircleIcon,
    AcuteIcon,
    AddIcon,
    AddReactionIcon,
    AdminPanelSettingsIcon,
    AlarmIcon,
    AppsIcon,
    ArrowBackIcon,
    ArrowDownwardIcon,
    ArrowDropDownIcon,
    ArrowDropUpIcon,
    ArrowForwardIcon,
    ArrowLeftIcon,
    ArrowRightIcon,
    ArrowUpwardIcon,
    ArticleIcon,
    AssignmentIcon,
    AttachFileIcon,
    AttachmentIcon,
    AutorenewIcon,
    BadgeIcon,
    BoltIcon,
    BubbleChartIcon,
    BuildIcon,
    CalendarMonthIcon,
    CalendarTodayIcon,
    CalendarViewWeekIcon,
    CheckIcon,
    ChecklistIcon,
    CloseIcon,
    CloudDownloadIcon,
    CloudUploadIcon,
    CodeIcon,
    CommentIcon,
    ContactPhoneIcon,
    ContactsIcon,
    ContentCopyIcon,
    DarkModeIcon,
    DashboardIcon,
    DeleteIcon,
    DemographyIcon,
    DescriptionIcon,
    DownloadIcon,
    DraftIcon,
    DragIndicatorIcon,
    EditIcon,
    EditNoteIcon,
    ErrorIcon,
    EventIcon,
    EventListIcon,
    ExclamationIcon,
    ExpandLessIcon,
    ExpandMoreIcon,
    ExtensionIcon,
    FileOpenIcon,
    FilterListIcon,
    FolderIcon,
    FolderManagedIcon,
    FolderOpenIcon,
    ForwardIcon,
    FullscreenExitIcon,
    FullscreenIcon,
    GlobeIcon,
    GroupAddIcon,
    GroupIcon,
    GroupsIcon,
    HardDriveIcon,
    HelpIcon,
    HistoryIcon,
    HomeIcon,
    HomeStorageIcon,
    InfoIIcon,
    InkEraserIcon,
    InvertColorsIcon,
    LanguageIcon,
    LeaderboardIcon,
    LibraryBooksIcon,
    LightModeIcon,
    LinkIcon,
    ListIcon,
    LoadingIcon,
    LocationCityIcon,
    LocationOnIcon,
    LockIcon,
    LockPersonIcon,
    LoginIcon,
    LogoutIcon,
    MailIcon,
    ManageAccountsIcon,
    ManageSearchIcon,
    ManufacturingIcon,
    MenuBookIcon,
    MenuIcon,
    MoreTimeIcon,
    NavigateBeforeIcon,
    NavigateNextIcon,
    NewReleasesIcon,
    NoteAddIcon,
    NoteIcon,
    NotificationsActiveIcon,
    OpenInNewIcon,
    PageInfoIcon,
    PaletteIcon,
    PanToolIcon,
    PauseCircleIcon,
    PendingActionsIcon,
    PendingIcon,
    PersonIcon,
    PhotoLibraryIcon,
    PictureAsPdfIcon,
    PlayArrowIcon,
    PlayCircleIcon,
    PostAddIcon,
    PreviewIcon,
    PriorityHighIcon,
    PublicIcon,
    PublishIcon,
    RedoIcon,
    RefreshIcon,
    ReplyAllIcon,
    ReplyIcon,
    SaveIcon,
    ScheduleIcon,
    SchoolIcon,
    SearchIcon,
    SendIcon,
    SettingsAlertIcon,
    SettingsIcon,
    SettingsSuggestIcon,
    ShareIcon,
    SideNavigationIcon,
    SpeedIcon,
    StopCircleIcon,
    StorageIcon,
    StylusLaserPointerIcon,
    StylusNoteIcon,
    SupportAgentIcon,
    SyncIcon,
    TaskIcon,
    TimerIcon,
    TrendingUpIcon,
    TrophyIcon,
    UndoIcon,
    UpdateIcon,
    VerticalSplitIcon,
    ViewCozyIcon,
    ViewHeadlineIcon,
    ViewModuleIcon,
    VisibilityIcon,
    VisibilityOffIcon,
    VoidIcon,
    WarningIcon,
    WidgetsIcon,
  };
  
  const [ color, setColor ] = useState<ColorResult>({
    hex: '',
    hsl: { h: 0, s: 0, l: 0 },
    rgb: { r: 0, g: 0, b: 0 },
  });
  const [ filter, setFilter ] = useState('');
  
  return (
    <MockupJukiProvider>
      <h3>icons</h3>
      <div className="jk-row extend">
        <InputColor
          color={color}
          onChange={setColor}
          label={<T className="tt-se">color</T>}
        />
        <Input
          value={filter}
          onChange={setFilter}
          label={<T className="tt-se">filter</T>}
        />
      </div>
      <div className="jk-row block gap" style={{ color: color.hex, height: '100%', width: '100%', overflow: 'auto' }}>
        {Object.entries(icons)
          .filter(([ iconName ]) =>
            filter
              ? iconName.toLowerCase().includes(filter.toLowerCase())
              : true,
          )
          .sort(([ iconName1 ], [ iconName2 ]) =>
            iconName1.localeCompare(iconName2),
          )
          .map(([ iconName, Component ]) => (
            <div className="jk-row gap nowrap center">
              <Component {...args} />
              <div className="tx-t cr-g1" style={{ width: 140 }}>
                {iconName}
              </div>
            </div>
          ))}
      </div>
    </MockupJukiProvider>
  );
};
